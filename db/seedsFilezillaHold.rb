#note for Bob THis file was saved on Monday Jan 23 2012
require 'wwweb_session_manager'
#require 'ruby-debug'
#Note this is Wed Dec 7 add fileshare
u = User.find_by_login("admin")
if(u == nil)
  defaultAdmin = User.create!(:login=>"admin", :email=> "admin@vcu.edu", :password=> "password", :password_confirmation=>"password", :active=>true, :allow_fileshare =>true, :receive_fileshare =>true, :receive_share_email =>true)
  defaultAdmin.admin = true
  defaultAdmin.activate!
end

u = User.find_by_login("bobc")
if(u == nil)
  defaultAdmin = User.create!(:login=>"bobc", :email=> "bcarlson@vcu.edu", :password=> "bobc", :password_confirmation=>"bobc", :active=>true, :allow_fileshare =>true, :receive_fileshare =>true, :receive_share_email =>true)
  defaultAdmin.admin = true
  defaultAdmin.activate!
end

h = Help.find_by_topic("fileshare")
if(h== nil)
  Help.create!(:topic=>"fileshare", :body=>"Allowing file sharing will enable you to share some of your files with other users of WorkWorld Web.  If you do plan to share your files with anyone else, check 'Allow Fileshare'. If you want others to 
    be able to share their files with you, check 'Receive Fileshare'.  Finally, if you want the WorkWorld Web system to send you an email to notify you when someone else wants to share with you,
    check 'Receive Share Email'.")
end

@startup                            = QuestionGroup.find_or_create_by_name('START-UP INFORMATION')
@UserInfo                           = QuestionGroup.find_or_create_by_name('User Information')
@household                          = QuestionGroup.find_or_create_by_name('Household Info')
                                                    
@BENEFITS                           = QuestionGroup.find_or_create_by_name('BENEFITS')
@ssi                                = QuestionGroup.find_or_create_by_name('SSI')
@medicaid                           = QuestionGroup.find_or_create_by_name('Medicaid')
@ssdi                               = QuestionGroup.find_or_create_by_name('SSDI')
@medicare                           = QuestionGroup.find_or_create_by_name('Medicare')
                                                    
@spouse_benefits                    = QuestionGroup.find_or_create_by_name('SPOUSE BENEFITS')
@Spouse_SSI                         = QuestionGroup.find_or_create_by_name('Spouse SSI')
@Spouse_Medicaid                    = QuestionGroup.find_or_create_by_name('Spouse Medicaid')
@Spouse_SSDI                        = QuestionGroup.find_or_create_by_name('Spouse SSDI')
@Spouse_Medicare                    = QuestionGroup.find_or_create_by_name('Spouse Medicare')
                                                   
@INCOME_RESOURCES                   = QuestionGroup.find_or_create_by_name('INCOME & RESOURCES')
@Deeming                            = QuestionGroup.find_or_create_by_name('Deeming')
@Resources                          = QuestionGroup.find_or_create_by_name('Resources')
@In_Kind_Support                    = QuestionGroup.find_or_create_by_name('In-Kind Support')
@Own_Unearned_Income                = QuestionGroup.find_or_create_by_name('Own Unearned Income')
@Spouse_Unearned_Income             = QuestionGroup.find_or_create_by_name('Spouse Unearned Income')
@Own_Earned_Income                  = QuestionGroup.find_or_create_by_name('Own Earned Income')
@Spouse_Earned_Income               = QuestionGroup.find_or_create_by_name('Spouse Earned Income')
                                                    
@EXPENSES                           = QuestionGroup.find_or_create_by_name('EXPENSES')
@Work_Expenses                      = QuestionGroup.find_or_create_by_name('Work Expenses')
@Other_Expenses                     = QuestionGroup.find_or_create_by_name('Other Expenses')
@Employability_Investments          = QuestionGroup.find_or_create_by_name('Employability Investments')
                                                   
@WORK_INCENTIVES                    = QuestionGroup.find_or_create_by_name('WORK INCENTIVES')
@student_Earned_Income_Exclutsion   = QuestionGroup.find_or_create_by_name('Student Earned Income Exclusion (SEIE)')
@Impairment_Related_Work_Expense    = QuestionGroup.find_or_create_by_name('Impairment-Related Work Expense (IRWE)')
@blind_Work_Expense                 = QuestionGroup.find_or_create_by_name('Blind Work Expense (BWE)')
@Plan_for_Achieving_Self_Support    = QuestionGroup.find_or_create_by_name('Plan for Achieving Self-Support (PASS)')
@Trial_Work_Period                  = QuestionGroup.find_or_create_by_name('Trial Work Period (TWP)')
@SubTab6_6_Subsidy                  = QuestionGroup.find_or_create_by_name('Subsidies (SSDI)')


@Tab7_BenefitAdjust                 = QuestionGroup.find_or_create_by_name('BENEFIT AMOUNT ADJUSTMENTS')
@SubTab7_1_OwnDiBenefitAdjust       = QuestionGroup.find_or_create_by_name('Own SSDI Benefit Adjustments')
@SubTab7_2_SpouseSsdiBenefitAdjust  = QuestionGroup.find_or_create_by_name('Spouse SSDI Benefit Adjustments')
@SubTab7_3_SsiBenefitAdjust         = QuestionGroup.find_or_create_by_name('SSI Benefit Adjustments')


@startup.update_attributes(:name => 'START-UP INFORMATION', :order => 1,    :workbook_order => "1.00")
@UserInfo.update_attributes(:order => 1,   :workbook_order => "1.50" )
@household.update_attributes(:order => 2,  :workbook_order => "9.00" )
@BENEFITS.update_attributes(:name => 'BENEFITS', :order => 2,   :workbook_order => "25.50" )
@ssi.update_attributes(:order => 1,        :workbook_order => "26.00" )
@medicaid.update_attributes(:order => 2,   :workbook_order => "29.00" )
@ssdi.update_attributes(:order => 3,       :workbook_order => "36.00" )
@medicare.update_attributes(:order => 4,   :workbook_order => "44.00" )


@spouse_benefits.update_attributes(:order => 3, :workbook_order=>50)
@Spouse_SSI.update_attributes(:order => 1, :workbook_order=>51)
@Spouse_Medicaid.update_attributes(:order => 2, :workbook_order=>53)
@Spouse_SSDI.update_attributes(:order => 3, :workbook_order=>58)
@Spouse_Medicare.update_attributes(:order => 4, :workbook_order=>66)
                                    
@INCOME_RESOURCES.update_attributes(:order => 4, :workbook_order=>72)
@Deeming.update_attributes(:order => 1, :workbook_order=>73)
@Resources.update_attributes(:order => 2, :workbook_order=>83)
@In_Kind_Support.update_attributes(:order => 3, :workbook_order=>88)
@Own_Unearned_Income.update_attributes(:order => 4, :workbook_order=>92)
@Spouse_Unearned_Income.update_attributes(:order => 5, :workbook_order=>99)
@Own_Earned_Income.update_attributes(:order => 6, :workbook_order=>106)
@Spouse_Earned_Income.update_attributes(:order => 7, :workbook_order=>111)
                                    
@EXPENSES.update_attributes(:order => 5, :workbook_order=>116)
@Work_Expenses.update_attributes(:order => 1, :workbook_order=>117)
@Other_Expenses.update_attributes(:order => 2, :workbook_order=>124)
@Employability_Investments.update_attributes(:order => 3, :workbook_order=>133)

@WORK_INCENTIVES.update_attributes(:order => 6, :workbook_order=>136)
@student_Earned_Income_Exclutsion.update_attributes(:order => 1, :workbook_order=>137)
@Impairment_Related_Work_Expense.update_attributes(:order => 2, :workbook_order=>152)
@blind_Work_Expense.update_attributes(:order => 3, :workbook_order=>157)
@Plan_for_Achieving_Self_Support.update_attributes(:order => 4, :workbook_order=>160)
@Trial_Work_Period.update_attributes(:order => 5, :workbook_order=>163)
@SubTab6_6_Subsidy.update_attributes(:order => 6, :workbook_order=>166)

@Tab7_BenefitAdjust.update_attributes(:name => 'BENEFIT AMOUNT ADJUSTMENTS', :order => 7, :workbook_order=>171)
@SubTab7_1_OwnDiBenefitAdjust.update_attributes(:order => 1, :workbook_order=>172)
@SubTab7_2_SpouseSsdiBenefitAdjust.update_attributes(:order => 2, :workbook_order=>179)
@SubTab7_3_SsiBenefitAdjust.update_attributes(:order => 3, :workbook_order=>186)

# setup group hierarchy and flow
@startup.parent         =   nil
@startup.next_group     =   nil
@startup.save!

@UserInfo.parent        =   @startup
@UserInfo.next_group    =   @household
@UserInfo.save!

@household.parent       =   @startup
@household.next_group   =   @ssi
@household.save!


#benefit Parent group
@BENEFITS.parent       =  nil
@BENEFITS.next_group   =  nil
@BENEFITS.save!

@ssi.parent             =   @BENEFITS
@ssi.next_group         =   @medicaid
@ssi.save!

@medicaid.parent        =  @BENEFITS
@medicaid.next_group    =   @ssdi
@medicaid.save!

@ssdi.parent            =  @BENEFITS
@ssdi.next_group        =   @medicare
@ssdi.save!

@medicare.parent        =   @BENEFITS
@medicare.next_group    =   @Spouse_SSI
@medicare.save!

#spouse Benefit Parent group
@spouse_benefits.parent         = nil
@spouse_benefits.next_group     = nil
@spouse_benefits.save!

@Spouse_SSI.parent         =   @spouse_benefits
@Spouse_SSI.next_group     =   @Spouse_Medicaid
@Spouse_SSI.save!

@Spouse_Medicaid.parent         =   @spouse_benefits
@Spouse_Medicaid.next_group     =   @Spouse_SSDI
@Spouse_Medicaid.save!

@Spouse_SSDI.parent         =   @spouse_benefits
@Spouse_SSDI.next_group     =   @Spouse_Medicare
@Spouse_SSDI.save!

@Spouse_Medicare.parent         =   @spouse_benefits
@Spouse_Medicare.next_group     =   @Deeming
@Spouse_Medicare.save!

#Income resources Parent group
@INCOME_RESOURCES.parent         =   nil
@INCOME_RESOURCES.next_group     =   nil
@INCOME_RESOURCES.save!
@Deeming.parent         =   @INCOME_RESOURCES
@Deeming.next_group     =   @Resources
@Deeming.save!
@Resources.parent         =   @INCOME_RESOURCES
@Resources.next_group     =   @In_Kind_Support
@Resources.save!
@In_Kind_Support.parent         =   @INCOME_RESOURCES
@In_Kind_Support.next_group     =   @Own_Unearned_Income
@In_Kind_Support.save!
@Own_Unearned_Income.parent         =   @INCOME_RESOURCES
@Own_Unearned_Income.next_group     =   @Spouse_Unearned_Income
@Own_Unearned_Income.save!
@Spouse_Unearned_Income.parent         =   @INCOME_RESOURCES
@Spouse_Unearned_Income.next_group     =   @Own_Earned_Income
@Spouse_Unearned_Income.save!
@Own_Earned_Income.parent         =   @INCOME_RESOURCES
@Own_Earned_Income.next_group     =   @Spouse_Earned_Income
@Own_Earned_Income.save!
@Spouse_Earned_Income.parent         =   @INCOME_RESOURCES
@Spouse_Earned_Income.next_group     =   @Work_Expenses
@Spouse_Earned_Income.save!

#Expenses parent group
@EXPENSES.parent         =   nil
@EXPENSES.next_group     =   nil
@EXPENSES.save!

@Work_Expenses.parent         =   @EXPENSES
@Work_Expenses.next_group     =   @Other_Expenses
@Work_Expenses.save!
@Other_Expenses.parent         =   @EXPENSES
@Other_Expenses.next_group     =   @Employability_Investments
@Other_Expenses.save!
@Employability_Investments.parent         =   @EXPENSES
@Employability_Investments.next_group     =   @student_Earned_Income_Exclutsion
@Employability_Investments.save!

#work Incentives parent group
@WORK_INCENTIVES.parent         =   nil
@WORK_INCENTIVES.next_group     =   nil
@WORK_INCENTIVES.save!

@student_Earned_Income_Exclutsion.parent         =   @WORK_INCENTIVES
@student_Earned_Income_Exclutsion.next_group     =   @Impairment_Related_Work_Expense
@student_Earned_Income_Exclutsion.save!
@Impairment_Related_Work_Expense.parent         =   @WORK_INCENTIVES
@Impairment_Related_Work_Expense.next_group     =   @blind_Work_Expense
@Impairment_Related_Work_Expense.save!
@blind_Work_Expense.parent         =   @WORK_INCENTIVES
@blind_Work_Expense.next_group     =   @Plan_for_Achieving_Self_Support
@blind_Work_Expense.save!
@Plan_for_Achieving_Self_Support.parent         =   @WORK_INCENTIVES
@Plan_for_Achieving_Self_Support.next_group     =   @Trial_Work_Period
@Plan_for_Achieving_Self_Support.save!
@Trial_Work_Period.parent         =   @WORK_INCENTIVES
@Trial_Work_Period.next_group     =   @SubTab6_6_Subsidy
@Trial_Work_Period.save!
@SubTab6_6_Subsidy.parent         =   @WORK_INCENTIVES
@SubTab6_6_Subsidy.next_group     =   @SubTab7_1_OwnDiBenefitAdjust
@SubTab6_6_Subsidy.save!

#Benefit adjustments Group
@Tab7_BenefitAdjust.parent         =   nil
@Tab7_BenefitAdjust.next_group     =   nil
@Tab7_BenefitAdjust.save!
@SubTab7_1_OwnDiBenefitAdjust.parent         =   @Tab7_BenefitAdjust
@SubTab7_1_OwnDiBenefitAdjust.next_group     =   @SubTab7_2_SpouseSsdiBenefitAdjust
@SubTab7_1_OwnDiBenefitAdjust.save!
@SubTab7_2_SpouseSsdiBenefitAdjust.parent         =   @Tab7_BenefitAdjust
@SubTab7_2_SpouseSsdiBenefitAdjust.next_group     =   @SubTab7_3_SsiBenefitAdjust
@SubTab7_2_SpouseSsdiBenefitAdjust.save!
@SubTab7_3_SsiBenefitAdjust.parent         =   @Tab7_BenefitAdjust
@SubTab7_3_SsiBenefitAdjust.next_group     =   nil
@SubTab7_3_SsiBenefitAdjust.save!

#@startup                            = QuestionGroup.find_or_create_by_name('START-UP INFORMATION')
# Create questions

#Delete these questions from the start up seed file

@VA_CaidliveWithSpouseInFacility = Question.find(:first, :conditions => ['name = ?',  'VA_CaidliveWithSpouseInFacility']) 
@VA_CaidliveWithSpouseInFacility.delete unless @VA_CaidliveWithSpouseInFacility.blank?
#	VA_CaidLiveInFacility
@VA_CaidLiveInFacility = Question.find(:first, :conditions => ['name = ?',  'VA_CaidLiveInFacility']) 
@VA_CaidLiveInFacility.delete unless @VA_CaidLiveInFacility.blank?
#	VA_CaidLiveInFacilitySpouseInCommunity
@VA_CaidLiveInFacilitySpouseInCommunity = Question.find(:first, :conditions => ['name = ?',  'VA_CaidLiveInFacilitySpouseInCommunity']) 
@VA_CaidLiveInFacilitySpouseInCommunity.delete unless @VA_CaidLiveInFacilitySpouseInCommunity.blank?

#validates_presence_of :name, :text, :display_rules, :group_id, :question_type, :question_order
@birthDate                                                           = Question.find_or_create_by_name('birthDate',                                                         :text => 'birthDate'                                                           , :display_rules => 'always', :default_answer => '01/01/1940',        :reference_id =>   '4',    :workbook_order => '2.0',  :question_type => 'date_time',    :answer_choices => '',                          :question_order => 1 ,    :group_id => @UserInfo.id)
@sitDate                                                             = Question.find_or_create_by_name('sitDate',                                                           :text => 'sitDate'                                                             , :display_rules => 'always', :default_answer => '09/27/2011',        :reference_id =>   '5',    :workbook_order => '3.0',  :question_type => 'date_time',    :answer_choices => '',                          :question_order => 2 ,    :group_id => @UserInfo.id)
@state                                                               = Question.find_or_create_by_name('state',                                                             :text => 'state'                                                               , :display_rules => 'always', :default_answer => 'Virginia',          :reference_id =>   '6',    :workbook_order => '4.0',  :question_type => 'select',       :answer_choices => 'Virginia, Texas',           :question_order => 3 ,    :group_id => @UserInfo.id)
@blind                                                               = Question.find_or_create_by_name('blind',                                                             :text => 'blind'                                                               , :display_rules => 'always', :default_answer => 'No',                :reference_id =>   '7',    :workbook_order => '5.0',  :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 4 ,    :group_id => @UserInfo.id)
@disability                                                          = Question.find_or_create_by_name('disability',                                                        :text => 'disability'                                                          , :display_rules => 'always', :default_answer => 'Yes',               :reference_id =>   '8',    :workbook_order => '6.0',  :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 5 ,    :group_id => @UserInfo.id)
@bPQY                                                                = Question.find_or_create_by_name('bPQY',                                                              :text => 'bPQY'                                                                , :display_rules => 'always', :default_answer => 'Yes',               :reference_id =>   '44',   :workbook_order => '6.6',  :question_type => 'text_field',   :answer_choices => '',                          :question_order => 6 ,    :group_id => @UserInfo.id)
@sitName                                                             = Question.find_or_create_by_name('sitName',                                                           :text => 'sitName'                                                             , :display_rules => 'always', :default_answer => 'Current Situation', :reference_id =>   '9',    :workbook_order => '7.0',  :question_type => 'text_field',   :answer_choices => '',                          :question_order => 7 ,    :group_id => @UserInfo.id)
                                                                                                                                                                                                                                                                                                                        
@vA_CityCounty                                                       = Question.find_or_create_by_name('vA_CityCounty',                                                     :text => 'vA_CityCounty'                                                       , :display_rules => 'always', :default_answer => '',                  :reference_id => '12',     :workbook_order => '10.0',     :question_type => 'select',       :answer_choices => 'Henrico, Chesterfield',     :question_order => 1 ,    :group_id => @household.id)
@married                                                             = Question.find_or_create_by_name('married',                                                           :text => 'married'                                                             , :display_rules => 'always', :default_answer => 'No',               :reference_id => '12.5',    :workbook_order => '10.5',  :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 2 ,    :group_id => @household.id)
@liveWithSpouse                                                      = Question.find_or_create_by_name('liveWithSpouse',                                                    :text => 'liveWithSpouse'                                                      , :display_rules => 'always', :default_answer => 'Yes',               :reference_id => '13',     :workbook_order => '11.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 3 ,    :group_id => @household.id)
@spouseBirthDate                                                     = Question.find_or_create_by_name('spouseBirthDate',                                                   :text => 'spouseBirthDate'                                                     , :display_rules => 'always', :default_answer => '01/01/1950',        :reference_id => '14',     :workbook_order => '12.0',     :question_type => 'date_time',    :answer_choices => '',                          :question_order => 4 ,    :group_id => @household.id)
@spouseBlind                                                         = Question.find_or_create_by_name('spouseBlind',                                                       :text => 'spouseBlind'                                                         , :display_rules => 'always', :default_answer => 'No',                :reference_id => '15',     :workbook_order => '13.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 5 ,    :group_id => @household.id)
@spouseDisability                                                    = Question.find_or_create_by_name('spouseDisability',                                                  :text => 'spouseDisability'                                                    , :display_rules => 'always', :default_answer => 'No',                :reference_id => '15',     :workbook_order => '14.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 6 ,    :group_id => @household.id)
@vA_CaidliveWithSpouseAndOwnParents                                  = Question.find_or_create_by_name('vA_CaidliveWithSpouseAndOwnParents',                                :text => 'vA_CaidliveWithSpouseAndOwnParents'                                  , :display_rules => 'always', :default_answer => 'No',                :reference_id => '!7',     :workbook_order => '15.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 7 ,    :group_id => @household.id)
@vA_CaidliveWithSpouseAndSpouseParents                               = Question.find_or_create_by_name('vA_CaidliveWithSpouseAndSpouseParents',                             :text => 'vA_CaidliveWithSpouseAndSpouseParents'                               , :display_rules => 'always', :default_answer => 'No',                :reference_id => '18',     :workbook_order => '16.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 8 ,    :group_id => @household.id)
@liveWithSpouseAndOthers                                             = Question.find_or_create_by_name('liveWithSpouseAndOthers',                                           :text => 'liveWithSpouseAndOthers'                                             , :display_rules => 'always', :default_answer => 'No',                :reference_id => '19',     :workbook_order => '17.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 9 ,    :group_id => @household.id)
@liveWithSpouseInFacility                                            = Question.find_or_create_by_name('liveWithSpouseInFacility',                                          :text => 'liveWithSpouseInFacility'                                            , :display_rules => 'always', :default_answer => 'No',                :reference_id => '20',     :workbook_order => '19.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 10 ,    :group_id => @household.id)
@spouseLiveInFacility                                                = Question.find_or_create_by_name('spouseLiveInFacility',                                              :text => 'spouseLiveInFacility'                                                , :display_rules => 'always', :default_answer => 'No',                :reference_id => '21',     :workbook_order => '19.5',   :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 11 ,   :group_id => @household.id)
@alone                                                               = Question.find_or_create_by_name('alone',                                                             :text => 'alone'                                                               , :display_rules => 'always', :default_answer => 'Yes',               :reference_id => '22',     :workbook_order => '20.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 12,    :group_id => @household.id)
@liveWithParents                                                     = Question.find_or_create_by_name('liveWithParents',                                                   :text => 'liveWithParents'                                                     , :display_rules => 'always', :default_answer => 'Yes',                :reference_id => '23',    :workbook_order => '21.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                  :question_order => 13,    :group_id => @household.id)
@liveWithOthers                                                      = Question.find_or_create_by_name('liveWithOthers',                                                    :text => 'liveWithOthers'                                                      , :display_rules => 'always', :default_answer => 'Yes',               :reference_id => '24',     :workbook_order => '22.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 14,    :group_id => @household.id)
@liveInFacility                                                      = Question.find_or_create_by_name('liveInFacility',                                                    :text => 'liveInFacility'                                                      , :display_rules => 'always', :default_answer => 'No',                :reference_id => '25',     :workbook_order => '24.0',     :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 15,    :group_id => @household.id)
                                                                                                                                                                                                                                                                                                         
@ssiGet                                                              = Question.find_or_create_by_name('ssiGet',                                                            :text => 'ssiGet'                                                              , :display_rules => 'always', :default_answer => 'Yes',                :reference_id => '29',      :workbook_order => '27.0',    :question_type => 'select',       :answer_choices => 'Yes, No',                  :question_order => 1,    :group_id => @ssi.id)
@ssiGetFinalDetermination                                            = Question.find_or_create_by_name('ssiGetFinalDetermination',                                          :text => 'ssiGetFinalDetermination'                                            , :display_rules => 'always', :default_answer => 'No',                :reference_id => '30',      :workbook_order => '28.0',    :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 2,    :group_id => @ssi.id)
@ssiGet12MonthsSinceOnset                                            = Question.find_or_create_by_name('ssiGet12MonthsSinceOnset',                                          :text => 'ssiGet12MonthsSinceOnset'                                            , :display_rules => 'always', :default_answer => 'No',                :reference_id => '30.5',    :workbook_order => '28.5',  :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 3,    :group_id => @ssi.id)
@vA_LiveInAuxGrantFacility                                           = Question.find_or_create_by_name('vA_LiveInAuxGrantFacility',                                         :text => 'vA_LiveInAuxGrantFacility'                                           , :display_rules => 'always', :default_answer => 'No',                :reference_id => '25',      :workbook_order => '28.55', :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 4,    :group_id => @ssi.id)
@vA_liveWithSpouseAuxGrantFacility                                   = Question.find_or_create_by_name('vA_liveWithSpouseAuxGrantFacility',                                 :text => 'vA_liveWithSpouseAuxGrantFacility'                                   , :display_rules => 'always', :default_answer => 'No',                :reference_id => '20',      :workbook_order => '28.6',  :question_type => 'select',       :answer_choices => 'Yes, No',                   :question_order => 5,    :group_id => @ssi.id)
@ssiUserActualAmt                                                    = Question.find_or_create_by_name('ssiUserActualAmt',                                                  :text => 'ssiUserActualAmt'                                                    , :display_rules => 'always', :default_answer => '0.00',              :reference_id => '181',     :workbook_order => '28.7',  :question_type => 'text_field',   :answer_choices => '',                          :question_order => 6,    :group_id => @ssi.id)
                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                             
@caidGet                                                             = Question.find_or_create_by_name('caidGet',                                                           :text => 'caidGet'                                                             , :display_rules => 'always', :default_answer => '',        :reference_id => '32',     :workbook_order => '30.00',  :question_type => 'select',       :question_order =>  1,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No' )
#revised allowable answers                                                                                                                                                                                                                                                                                                                                                                                                                                                                  SSI Recipient: 1619b (SSI Medicaid while working): MEDICAID WORKS: Auxiliary Grant: Protected Adult Disabled Child :Protected SSI Disabled Child: QMB: SLMB: QI: QDWI: 80% FPL: 300% SSI: Medically Needy (Spendown)
@vA_CaidGetCoveredGroup                                              = Question.find_or_create_by_name('vA_CaidGetCoveredGroup',                                            :text => 'vA_CaidGetCoveredGroup'                                              , :display_rules => 'always', :default_answer => '',        :reference_id => '33',     :workbook_order => '31.00',  :question_type => 'select',       :question_order =>  2,    :group_id => @medicaid.id ,   :answer_choices => 'SSI Recipient, 1619b (SSI Medicaid while working), MEDICAID WORKS, Auxiliary Grant, Protected Adult Disabled Child, Protected SSI Disabled Child, QMB, SLMB, QI, QDWI, 80% FPL, 300% SSI, Medically Needy (Spendown)')
@vA_CaidInstitutionServicesGet                                       = Question.find_or_create_by_name('vA_CaidInstitutionServicesGet',                                     :text => 'vA_CaidInstitutionServicesGet  '                                     , :display_rules => 'always', :default_answer => 'No',      :reference_id => '33.2',   :workbook_order => '31.20',  :question_type => 'select',       :question_order =>  3,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@vA_CaidWaiverServicesGet                                            = Question.find_or_create_by_name('vA_CaidWaiverServicesGet',                                          :text => 'vA_CaidWaiverServicesGet       '                                     , :display_rules => 'always', :default_answer => 'No',      :reference_id => '33.4',   :workbook_order => '31.40',  :question_type => 'select',       :question_order =>  4,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@caidApply                                                           = Question.find_or_create_by_name('caidApply',                                                         :text => 'caidApply                      '                                     , :display_rules => 'always', :default_answer => 'Yes',     :reference_id => '34',     :workbook_order => '32.00',  :question_type => 'select',       :question_order =>  5,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@vA_CaidApplyCoveredGroup                                            = Question.find_or_create_by_name('vA_CaidApplyCoveredGroup',                                          :text => 'vA_CaidApplyCoveredGroup       '                                     , :display_rules => 'always', :default_answer => '80% FPL', :reference_id => '35',     :workbook_order => '33.00',  :question_type => 'select',       :question_order =>  6,    :group_id => @medicaid.id ,   :answer_choices => 'SSI Recipient, 1619b (SSI Medicaid while working), MEDICAID WORKS, Auxiliary Grant, Protected Adult Disabled Child, Protected SSI Disabled Child, QMB, SLMB, QI, QDWI, 80% FPL, 300% SSI, Medically Needy (Spendown)'     )
@vA_CaidSsiRecipientApplyWorks                                       = Question.find_or_create_by_name('vA_CaidSsiRecipientApplyWorks',                                     :text => 'vA_CaidSsiRecipientApplyWorks'                                       , :display_rules => 'always', :default_answer => 'No',      :reference_id => '35.1',   :workbook_order => '33.10',  :question_type => 'select',       :question_order =>  7,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@vA_CaidInstitutionServicesApply                                     = Question.find_or_create_by_name('vA_CaidInstitutionServicesApply',                                   :text => 'vA_CaidInstitutionServicesApply'                                     , :display_rules => 'always', :default_answer => 'No',      :reference_id => '35.2',   :workbook_order => '33.20',  :question_type => 'select',       :question_order =>  8,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@vA_CaidWaiverServicesApply                                          = Question.find_or_create_by_name('vA_CaidWaiverServicesApply',                                        :text => 'vA_CaidWaiverServicesApply     '                                     , :display_rules => 'always', :default_answer => 'No',      :reference_id => '35.4',   :workbook_order => '33.40',  :question_type => 'select',       :question_order =>  9,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@spouseIsCaidCommunitySpouse                                         = Question.find_or_create_by_name('spouseIsCaidCommunitySpouse',                                       :text => 'spouseIsCaidCommunitySpouse    '                                     , :display_rules => 'always', :default_answer => 'No',      :reference_id => '27',     :workbook_order => '33.50',  :question_type => 'select',       :question_order => 10,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
@vA_CaidDacLoseSsi                                                   = Question.find_or_create_by_name('vA_CaidDacLoseSsi',                                                 :text => 'vA_CaidDacLoseSsi    '                                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '35.6',   :workbook_order => '31.45',  :question_type => 'select',       :question_order => 11,    :group_id => @medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                             
@ssdiGet                                                             = Question.find_or_create_by_name('ssdiGet'                     ,                                      :text => 'ssdiGet                  '                                           , :display_rules => 'always', :default_answer => 'Yes',    :reference_id => '37',     :workbook_order => '35.00',  :question_type => 'select',       :question_order => 1,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@ssdiGet12MonthsSinceOnset                                           = Question.find_or_create_by_name('ssdiGet12MonthsSinceOnset'   ,                                      :text => 'ssdiGet12MonthsSinceOnset'                                           , :display_rules => 'always', :default_answer => 'No',     :reference_id => '38',     :workbook_order => '36.00',  :question_type => 'select',       :question_order => 2,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@ssdiEarnRec                                                         = Question.find_or_create_by_name('ssdiEarnRec'                 ,                                      :text => 'ssdiEarnRec              '                                           , :display_rules => 'always', :default_answer => 'Self',   :reference_id => '39',     :workbook_order => '37.00',  :question_type => 'select',       :question_order => 3,    :group_id => @ssdi.id ,   :answer_choices => 'Self, Other'   )
@ssdiEarnRecDependents                                               = Question.find_or_create_by_name('ssdiEarnRecDependents'       ,                                      :text => 'ssdiEarnRecDependents    '                                           , :display_rules => 'always', :default_answer => 'No',     :reference_id => '40',     :workbook_order => '38.00',  :question_type => 'select',       :question_order => 4,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@ssdiDac                                                             = Question.find_or_create_by_name('ssdiDac'                     ,                                      :text => 'ssdiDac                  '                                           , :display_rules => 'always', :default_answer => 'No',     :reference_id => '40.5',   :workbook_order => '39.00',  :question_type => 'select',       :question_order => 5,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@blindOnsetDate                                                      = Question.find_or_create_by_name('blindOnsetDate'              ,                                      :text => 'blindOnsetDate           '                                           , :display_rules => 'always', :default_answer => '',       :reference_id => '41',     :workbook_order => '40.00',  :question_type => 'date_time',    :question_order => 6,    :group_id => @ssdi.id ,   :answer_choices => ''              )
@blindSkillsBefore55                                                 = Question.find_or_create_by_name('blindSkillsBefore55'         ,                                      :text => 'blindSkillsBefore55      '                                           , :display_rules => 'always', :default_answer => 'No',     :reference_id => '42',     :workbook_order => '41.00',  :question_type => 'select',       :question_order => 7,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@blindSkillsBeforeOnset                                              = Question.find_or_create_by_name('blindSkillsBeforeOnset'      ,                                      :text => 'blindSkillsBeforeOnset   '                                           , :display_rules => 'always', :default_answer => 'No',     :reference_id => '43',     :workbook_order => '42.00',  :question_type => 'select',       :question_order => 8,    :group_id => @ssdi.id ,   :answer_choices => 'Yes, No'       )
@ssdiActualAmt                                                       = Question.find_or_create_by_name('ssdiActualAmt'               ,                                      :text => 'ssdiActualAmt            '                                           , :display_rules => 'always', :default_answer => '0.00',   :reference_id => '167',    :workbook_order => '43.00',  :question_type => 'text_field',   :question_order => 9,    :group_id => @ssdi.id ,   :answer_choices => ''              )
                                                                                                                                                                                                                                                             
@careAGet                                                            = Question.find_or_create_by_name('careAGet'            ,                                              :text => 'careAGet       '                                                     , :display_rules => 'always', :default_answer => '',    :reference_id => '46.0',     :workbook_order => '45.00',  :question_type => 'select',       :question_order => 1,    :group_id => @medicare.id ,   :answer_choices => 'Yes, No' )
@careBGet                                                            = Question.find_or_create_by_name('careBGet'            ,                                              :text => 'careBGet       '                                                     , :display_rules => 'always', :default_answer => '',    :reference_id => '47.0',     :workbook_order => '46.00',  :question_type => 'select',       :question_order => 2,    :group_id => @medicare.id ,   :answer_choices => 'Yes, No' )
@careBDeduct                                                         = Question.find_or_create_by_name('careBDeduct'         ,                                              :text => 'careBDeduct    '                                                     , :display_rules => 'always', :default_answer => '',    :reference_id => '48.0',     :workbook_order => '47.00',  :question_type => 'select',       :question_order => 3,    :group_id => @medicare.id ,   :answer_choices => 'Yes, No' )
@careBPaySelf                                                        = Question.find_or_create_by_name('careBPaySelf'        ,                                              :text => 'careBPaySelf   '                                                     , :display_rules => 'always', :default_answer => 'Yes', :reference_id => '48.2',     :workbook_order => '48.00',  :question_type => 'select',       :question_order => 4,    :group_id => @medicare.id ,   :answer_choices => 'Yes, No' )
@careBPremiumAmt                                                     = Question.find_or_create_by_name('careBPremiumAmt'     ,                                              :text => 'careBPremiumAmt'                                                     , :display_rules => 'always', :default_answer => '',    :reference_id => '48.4',     :workbook_order => '49.00',  :question_type => 'text_field',   :question_order => 5,    :group_id => @medicare.id ,   :answer_choices => ''        )
                                                                                                                                                                                                                                                             
@spouseSsiGet                                                       = Question.find_or_create_by_name('spouseSsiGet'     ,                                                  :text => 'spouseSsiGet                   '                                     , :display_rules => 'always', :default_answer => 'No',    :reference_id => '51.0',     :workbook_order => '52.00',  :question_type => 'select',        :question_order => 1,    :group_id => @Spouse_SSI.id ,   :answer_choices => 'Yes, No')
@vA_SpouseLiveInAuxGrantFacility                                    = Question.find_or_create_by_name('vA_SpouseLiveInAuxGrantFacility',                                    :text => 'vA_SpouseLiveInAuxGrantFacility'                                     , :display_rules => 'always', :default_answer => 'No',    :reference_id => '51.5',     :workbook_order => '52.25',  :question_type => 'select',        :question_order => 2,    :group_id => @Spouse_SSI.id ,   :answer_choices => 'Yes, No')
@ssiSpouseActualAmt                                                 = Question.find_or_create_by_name('ssiSpouseActualAmt'     ,                                            :text => 'ssiSpouseActualAmt             '                                     , :display_rules => 'always', :default_answer => '',      :reference_id => '182.',     :workbook_order => '52.50',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Spouse_SSI.id ,   :answer_choices => ''       )
                                                                                                                                                                                                                                                             
@caidSpouseGet                                                      = Question.find_or_create_by_name('caidSpouseGet'                         ,                             :text => 'caidSpouseGet                        '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '53.0',     :workbook_order => '54.00',  :question_type => 'select',        :question_order =>  1,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@vA_caidSpouseGetCoveredGroup                                       = Question.find_or_create_by_name('vA_caidSpouseGetCoveredGroup'          ,                             :text => 'vA_caidSpouseGetCoveredGroup         '                               , :display_rules => 'always', :default_answer => '',        :reference_id => '54.0',     :workbook_order => '55.00',  :question_type => 'select',        :question_order =>  2,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'SSI Recipient, 1619b (SSI Medicaid while working), MEDICAID WORKS, Auxiliary Grant, Protected Adult Disabled Child, Protected SSI Disabled Child, QMB, SLMB, QI, QDWI, 80% FPL, 300% SSI, Medically Needy (Spendown)')
@vA_CaidSpouseInstitutionServicesGet                                = Question.find_or_create_by_name('vA_CaidSpouseInstitutionServicesGet'   ,                             :text => 'vA_CaidSpouseInstitutionServicesGet  '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '54.2',     :workbook_order => '55.20',  :question_type => 'select',        :question_order =>  3,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@vA_CaidSpouseWaiverServicesGet                                     = Question.find_or_create_by_name('vA_CaidSpouseWaiverServicesGet'        ,                             :text => 'vA_CaidSpouseWaiverServicesGet       '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '54.4',     :workbook_order => '55.40',  :question_type => 'select',        :question_order =>  4,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@caidSpouseApply                                                    = Question.find_or_create_by_name('caidSpouseApply'                       ,                             :text => 'caidSpouseApply                      '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '55.0',     :workbook_order => '56.00',  :question_type => 'select',        :question_order =>  5,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@vA_caidSpouseApplyCoveredGroup                                     = Question.find_or_create_by_name('vA_caidSpouseApplyCoveredGroup'        ,                             :text => 'vA_caidSpouseApplyCoveredGroup       '                               , :display_rules => 'always', :default_answer => '80% FPL', :reference_id => '56.0',     :workbook_order => '57.00',  :question_type => 'select',        :question_order =>  6,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'SSI Recipient, 1619b (SSI Medicaid while working), MEDICAID WORKS, Auxiliary Grant, Protected Adult Disabled Child, Protected SSI Disabled Child, QMB, SLMB, QI, QDWI, 80% FPL, 300% SSI, Medically Needy (Spendown)')
@vA_CaidSpouseSsiRecipientApplyWorks                                = Question.find_or_create_by_name('vA_CaidSpouseSsiRecipientApplyWorks' ,                               :text => 'vA_CaidSpouseSsiRecipientApplyWorks'                                 , :display_rules => 'always', :default_answer => 'No',      :reference_id => '56.1',     :workbook_order => '57.10',  :question_type => 'select',        :question_order =>  7,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@vA_CaidSpouseInstitutionServicesApply                              = Question.find_or_create_by_name('vA_CaidSpouseInstitutionServicesApply' ,                             :text => 'vA_CaidSpouseInstitutionServicesApply'                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '56.2',     :workbook_order => '57.20',  :question_type => 'select',        :question_order =>  8,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@vA_CaidSpouseWaiverServicesApply                                   = Question.find_or_create_by_name('vA_CaidSpouseWaiverServicesApply'      ,                             :text => 'vA_CaidSpouseWaiverServicesApply     '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '56.3',     :workbook_order => '57.30',  :question_type => 'select',        :question_order =>  9,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
@userIsCaidCommunitySpouse                                          = Question.find_or_create_by_name('userIsCaidCommunitySpouse'             ,                             :text => 'userIsCaidCommunitySpouse            '                               , :display_rules => 'always', :default_answer => 'No',      :reference_id => '56.5',     :workbook_order => '57.50',  :question_type => 'select',        :question_order => 10,    :group_id => @Spouse_Medicaid.id ,   :answer_choices => 'Yes, No'                                                                                                                                                                                                   )
                                                                                                                                                                                                                                                             
@spouseSsdiGet                                                      = Question.find_or_create_by_name('spouseSsdiGet'                ,                                      :text => 'spouseSsdiGet               '                                        , :display_rules => 'always', :default_answer => 'No',    :reference_id => '58.0',     :workbook_order => '59.00',  :question_type => 'select',        :question_order => 1,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
@spouseSsdiEarnRec                                                  = Question.find_or_create_by_name('spouseSsdiEarnRec'            ,                                      :text => 'spouseSsdiEarnRec           '                                        , :display_rules => 'always', :default_answer => 'Self',  :reference_id => '59.0',     :workbook_order => '60.00',  :question_type => 'select',        :question_order => 2,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Self, Other'   )
@spouseSsdiEarnRecDependents                                        = Question.find_or_create_by_name('spouseSsdiEarnRecDependents'  ,                                      :text => 'spouseSsdiEarnRecDependents '                                        , :display_rules => 'always', :default_answer => 'No',    :reference_id => '60.0',     :workbook_order => '61.00',  :question_type => 'select',        :question_order => 3,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
@spouseSsdiDac                                                      = Question.find_or_create_by_name('spouseSsdiDac'                ,                                      :text => 'spouseSsdiDac               '                                        , :display_rules => 'always', :default_answer => 'No',    :reference_id => '60.5',     :workbook_order => '62.00',  :question_type => 'select',        :question_order => 4,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
@spouseBlindOnsetDate                                               = Question.find_or_create_by_name('spouseBlindOnsetDate'         ,                                      :text => 'spouseBlindOnsetDate        '                                        , :display_rules => 'always', :default_answer => '',      :reference_id => '61.0',     :workbook_order => '63.00',  :question_type => 'date_time',     :question_order => 5,    :group_id => @Spouse_SSDI.id ,   :answer_choices => ''              )
@spouseBlindSkillsBefore55                                          = Question.find_or_create_by_name('spouseBlindSkillsBefore55'    ,                                      :text => 'spouseBlindSkillsBefore55   '                                        , :display_rules => 'always', :default_answer => 'No',    :reference_id => '62.0',     :workbook_order => '64.00',  :question_type => 'select',        :question_order => 6,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
@spouseBlindSkillsBeforeOnset                                       = Question.find_or_create_by_name('spouseBlindSkillsBeforeOnset' ,                                      :text => 'spouseBlindSkillsBeforeOnset'                                        , :display_rules => 'always', :default_answer => 'No',    :reference_id => '63.0',     :workbook_order => '65.00',  :question_type => 'select',        :question_order => 7,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
@spouseSsdiActualAmt                                                = Question.find_or_create_by_name('spouseSsdiActualAmt'          ,                                      :text => 'spouseSsdiActualAmt         '                                        , :display_rules => 'always', :default_answer => '0.00',  :reference_id => '174.',     :workbook_order => '65.50',  :question_type => 'text_field',    :question_order => 8,    :group_id => @Spouse_SSDI.id ,   :answer_choices => 'Yes, No'       )
                                                                                                                                                                                                                                                             
@spouseCareAGet                                                     = Question.find_or_create_by_name('spouseCareAGet'        ,                                             :text => 'spouseCareAGet       '                                               , :display_rules => 'always', :default_answer => '',    :reference_id => '65.0',   :workbook_order => '67.00',  :question_type => 'select',        :question_order => 1,    :group_id => @Spouse_Medicare.id ,   :answer_choices => 'Yes, No')
@spouseCareBGet                                                     = Question.find_or_create_by_name('spouseCareBGet'        ,                                             :text => 'spouseCareBGet       '                                               , :display_rules => 'always', :default_answer => '',    :reference_id => '66.0',   :workbook_order => '68.00',  :question_type => 'select',        :question_order => 2,    :group_id => @Spouse_Medicare.id ,   :answer_choices => 'Yes, No')
@spouseCareBDeduct                                                  = Question.find_or_create_by_name('spouseCareBDeduct'     ,                                             :text => 'spouseCareBDeduct    '                                               , :display_rules => 'always', :default_answer => '',    :reference_id => '67.0',   :workbook_order => '69.00',  :question_type => 'select',        :question_order => 3,    :group_id => @Spouse_Medicare.id ,   :answer_choices => 'Yes, No')
@spouseCareBPaySelf                                                 = Question.find_or_create_by_name('spouseCareBPaySelf'    ,                                             :text => 'spouseCareBPaySelf   '                                               , :display_rules => 'always', :default_answer => 'Yes', :reference_id => '67.2',   :workbook_order => '70.00',  :question_type => 'select',        :question_order => 4,    :group_id => @Spouse_Medicare.id ,   :answer_choices => 'Yes, No')
@spouseCareBPremiumAmt                                              = Question.find_or_create_by_name('spouseCareBPremiumAmt' ,                                             :text => 'spouseCareBPremiumAmt'                                               , :display_rules => 'always', :default_answer => '',    :reference_id => '67.4',   :workbook_order => '71.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Spouse_Medicare.id ,   :answer_choices => ''       )
                                                                                                                                                                                                                                                             
@ssiParDeemAmt                                                      = Question.find_or_create_by_name('ssiParDeemAmt' ,                                                     :text => 'ssiParDeemAmt             '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '70.0',   :workbook_order => '74.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@vA_CaidParDeemAmt                                                  = Question.find_or_create_by_name('vA_CaidParDeemAmt' ,                                                 :text => 'vA_CaidParDeemAmt         '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '72.0',   :workbook_order => '75.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@vA_CaidCoupleParDeemAmt                                            = Question.find_or_create_by_name('vA_CaidCoupleParDeemAmt' ,                                           :text => 'vA_CaidCoupleParDeemAmt   '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '73.0',   :workbook_order => '76.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@ssiSpouseDeem                                                      = Question.find_or_create_by_name('ssiSpouseDeem' ,                                                     :text => 'ssiSpouseDeem             '                                          ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '73.5',   :workbook_order => '77.00',  :question_type => 'select',        :question_order => 4,    :group_id => @Deeming.id ,   :answer_choices => 'Yes, No' )
@ssiSpouseDeemUnearnAmt                                             = Question.find_or_create_by_name('ssiSpouseDeemUnearnAmt' ,                                            :text => 'ssiSpouseDeemUnearnAmt    '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '74.0',   :workbook_order => '78.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@vA_CaidSpouseDeem                                                  = Question.find_or_create_by_name('vA_CaidSpouseDeem' ,                                                 :text => 'vA_CaidSpouseDeem         '                                          ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '74.5',   :workbook_order => '79.00',  :question_type => 'select',        :question_order => 6,    :group_id => @Deeming.id ,   :answer_choices => 'Yes, No' )
@vA_CaidSpouseDeemUnearnAmt                                         = Question.find_or_create_by_name('vA_CaidSpouseDeemUnearnAmt' ,                                        :text => 'vA_CaidSpouseDeemUnearnAmt'                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '75.0',   :workbook_order => '80.00',  :question_type => 'text_field',    :question_order => 7,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@ssiSpouseDeemEarnAmt                                               = Question.find_or_create_by_name('ssiSpouseDeemEarnAmt' ,                                              :text => 'ssiSpouseDeemEarnAmt      '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '76.0',   :workbook_order => '81.00',  :question_type => 'text_field',    :question_order => 8,    :group_id => @Deeming.id ,   :answer_choices => ''        )
@vA_CaidSpouseDeemEarnAmt                                           = Question.find_or_create_by_name('vA_CaidSpouseDeemEarnAmt' ,                                          :text => 'vA_CaidSpouseDeemEarnAmt  '                                          ,  :display_rules => 'always', :default_answer => '0.00',    :reference_id => '77.0',   :workbook_order => '82.00',  :question_type => 'text_field',    :question_order => 9,    :group_id => @Deeming.id ,   :answer_choices => ''        )
                                                                                                                                                                                                                                                             
@ssiResourceLimitExceed                                             = Question.find_or_create_by_name('ssiResourceLimitExceed'                                            , :text => 'ssiResourceLimitExceed                                           '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '79.00',   :workbook_order => '84.00',  :question_type => 'select',        :question_order => 1,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@ssiCoupleResourceLimitExceed                                       = Question.find_or_create_by_name('ssiCoupleResourceLimitExceed'                                      , :text => 'ssiCoupleResourceLimitExceed                                     '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '80.00',   :workbook_order => '85.00',  :question_type => 'select',        :question_order => 2,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidMostGroupsResourceLimitExceed                                  = Question.find_or_create_by_name('caidMostGroupsResourceLimitExceed'                                 , :text => 'caidMostGroupsResourceLimitExceed                                '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '81.00',   :workbook_order => '86.00',  :question_type => 'select',        :question_order => 3,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidCoupleMostGroupsResourceLimitExceed                            = Question.find_or_create_by_name('caidCoupleMostGroupsResourceLimitExceed'                           , :text => 'caidCoupleMostGroupsResourceLimitExceed                          '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.00',   :workbook_order => '87.00',  :question_type => 'select',        :question_order => 4,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caid80PctFplResourceLimitExceed                                    = Question.find_or_create_by_name('caid80PctFplResourceLimitExceed'                                   , :text => 'caid80PctFplResourceLimitExceed                                  '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.01',   :workbook_order => '87.02',  :question_type => 'select',        :question_order => 5,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidCouple80PctFplResourceLimitExceed                              = Question.find_or_create_by_name('caidCouple80PctFplResourceLimitExceed'                             , :text => 'caidCouple80PctFplResourceLimitExceed                            '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.02',   :workbook_order => '87.04',  :question_type => 'select',        :question_order => 6,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@vA_CaidLtcHomeEquityLimitProvisionallyExceed                       = Question.find_or_create_by_name('vA_CaidLtcHomeEquityLimitProvisionallyExceed'                      , :text => 'vA_CaidLtcHomeEquityLimitProvisionallyExceed                     '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.03',   :workbook_order => '87.06',  :question_type => 'select',        :question_order => 7,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@vA_CaidSpouseOrChildLivesInHome                                    = Question.find_or_create_by_name('vA_CaidSpouseOrChildLivesInHome'                                   , :text => 'vA_CaidSpouseOrChildLivesInHome                                  '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.04',   :workbook_order => '87.08',  :question_type => 'select',        :question_order => 8,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidQdwiResourceLimitExceed                                        = Question.find_or_create_by_name('caidQdwiResourceLimitExceed'                                       , :text => 'caidQdwiResourceLimitExceed                                      '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.10',   :workbook_order => '87.10',  :question_type => 'select',        :question_order => 9,     :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidCoupleQdwiResourceLimitExceed                                  = Question.find_or_create_by_name('caidCoupleQdwiResourceLimitExceed'                                 , :text => 'caidCoupleQdwiResourceLimitExceed                                '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.20',   :workbook_order => '87.20',  :question_type => 'select',        :question_order => 10,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidQmbSlmbQiResourceLimitExceed                                   = Question.find_or_create_by_name('caidQmbSlmbQiResourceLimitExceed'                                  , :text => 'caidQmbSlmbQiResourceLimitExceed                                 '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.30',   :workbook_order => '87.30',  :question_type => 'select',        :question_order => 11,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidCoupleQmbSlmbQiResourceLimitExceed                             = Question.find_or_create_by_name('caidCoupleQmbSlmbQiResourceLimitExceed'                            , :text => 'caidCoupleQmbSlmbQiResourceLimitExceed                           '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.40',   :workbook_order => '87.40',  :question_type => 'select',        :question_order => 12,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidApplyLtcCommunitySpousePraExceed                               = Question.find_or_create_by_name('caidApplyLtcCommunitySpousePraExceed'                              , :text => 'caidApplyLtcCommunitySpousePraExceed                             '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.42',   :workbook_order => '87.45',  :question_type => 'select',        :question_order => 13,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidApplyLtcCommunitySpouseResourceLimitExceed                     = Question.find_or_create_by_name('caidApplyLtcCommunitySpouseResourceLimitExceed'                    , :text => 'caidApplyLtcCommunitySpouseResourceLimitExceed                   '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '83.45',   :workbook_order => '87.50',  :question_type => 'select',        :question_order => 14,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidGetOrApply300PctSsiResourceLimitExceed                         = Question.find_or_create_by_name('caidGetOrApply300PctSsiResourceLimitExceed'                        , :text => 'caidGetOrApply300PctSsiResourceLimitExceed                       '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '83.47',   :workbook_order => '87.52',  :question_type => 'select',        :question_order => 15,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidWinAcctEstablishedForWorks                                     = Question.find_or_create_by_name('caidWinAcctEstablishedForWorks'                                    , :text => 'caidWinAcctEstablishedForWorks                                   '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '83.49',   :workbook_order => '87.54',  :question_type => 'select',        :question_order => 16,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidGetWorksWinResourceLimitExceed                                 = Question.find_or_create_by_name('caidGetWorksWinResourceLimitExceed'                                , :text => 'caidGetWorksWinResourceLimitExceed                               '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.50',   :workbook_order => '87.55',  :question_type => 'select',        :question_order => 17,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidGetWorksNonWinResourceLimitExceed                              = Question.find_or_create_by_name('caidGetWorksNonWinResourceLimitExceed'                             , :text => 'caidGetWorksNonWinResourceLimitExceed                            '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.51',   :workbook_order => '87.56',  :question_type => 'select',        :question_order => 18,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseCoupleMostGroupsResourceLimitExceed                      = Question.find_or_create_by_name('caidSpouseCoupleMostGroupsResourceLimitExceed'                     , :text => 'caidSpouseCoupleMostGroupsResourceLimitExceed                    '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.55',   :workbook_order => '87.60',  :question_type => 'select',        :question_order => 19,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseCouple80PctFplResourceLimitExceed                        = Question.find_or_create_by_name('caidSpouseCouple80PctFplResourceLimitExceed'                       , :text => 'caidSpouseCouple80PctFplResourceLimitExceed                      '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.57',   :workbook_order => '87.62',  :question_type => 'select',        :question_order => 20,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseGet300PctSsiResourceLimitExceed                          = Question.find_or_create_by_name('caidSpouseGet300PctSsiResourceLimitExceed'                         , :text => 'caidSpouseGet300PctSsiResourceLimitExceed                        '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.58',   :workbook_order => '87.63',  :question_type => 'select',        :question_order => 21,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseCoupleQdwiResourceLimitExceed                            = Question.find_or_create_by_name('caidSpouseCoupleQdwiResourceLimitExceed'                           , :text => 'caidSpouseCoupleQdwiResourceLimitExceed                          '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.60',   :workbook_order => '87.65',  :question_type => 'select',        :question_order => 22,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseCoupleQmbSlmbQiResourceLimitExceed                       = Question.find_or_create_by_name('caidSpouseCoupleQmbSlmbQiResourceLimitExceed'                      , :text => 'caidSpouseCoupleQmbSlmbQiResourceLimitExceed                     '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.65',   :workbook_order => '87.70',  :question_type => 'select',        :question_order => 23,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed  = Question.find_or_create_by_name('caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed' , :text => 'caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed'   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.70',   :workbook_order => '87.75',  :question_type => 'select',        :question_order => 24,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseWinAcctEstablishedForWorks                               = Question.find_or_create_by_name('caidSpouseWinAcctEstablishedForWorks'                              , :text => 'caidSpouseWinAcctEstablishedForWorks                             '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.74',   :workbook_order => '87.76',  :question_type => 'select',        :question_order => 25,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseGetWorksResourceLimitExceed                              = Question.find_or_create_by_name('caidSpouseGetWorksResourceLimitExceed'                             , :text => 'caidSpouseGetWorksResourceLimitExceed                            '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.75',   :workbook_order => '87.80',  :question_type => 'select',        :question_order => 26,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
@caidSpouseGetWorksNonWinResourceLimitExceed                        = Question.find_or_create_by_name('caidSpouseGetWorksNonWinResourceLimitExceed'                       , :text => 'caidSpouseGetWorksNonWinResourceLimitExceed                      '   ,  :display_rules => 'always', :default_answer => 'No',      :reference_id => '82.76',   :workbook_order => '87.86',  :question_type => 'select',        :question_order => 27,    :group_id => @Resources.id ,   :answer_choices => 'Yes, No')
                                                                                                                                                                                                                                                             
@inKind                                                             = Question.find_or_create_by_name('inKind'                                                            , :text => 'inKind           '                                                   ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '84.00',   :workbook_order => '89.00',  :question_type => 'select',        :question_order => 1,    :group_id => @In_Kind_Support.id ,   :answer_choices => 'Yes, No')
@inKindThird                                                        = Question.find_or_create_by_name('inKindThird'                                                       , :text => 'inKindThird      '                                                   ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '85.00',   :workbook_order => '90.00',  :question_type => 'select',        :question_order => 2,    :group_id => @In_Kind_Support.id ,   :answer_choices => 'Yes, No')
@inKindPMVAmt                                                       = Question.find_or_create_by_name('inKindPMVAmt'                                                      , :text => 'inKindPMVAmt     '                                                   ,  :display_rules => 'always', :default_answer => '',         :reference_id => '86.00',   :workbook_order => '91.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @In_Kind_Support.id ,   :answer_choices => ''       )
                                                                                                                                                                                                                                                             
@ssdiAmtSelfFull                                                    = Question.find_or_create_by_name('ssdiAmtSelfFull'                                                   , :text => 'ssdiAmtSelfFull               '                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '88.00',   :workbook_order => '93.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
@ssdiAmtOtherFull                                                   = Question.find_or_create_by_name('ssdiAmtOtherFull'                                                  , :text => 'ssdiAmtOtherFull              '                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '89.00',   :workbook_order => '94.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
@unearnAmt                                                          = Question.find_or_create_by_name('unearnAmt'                                                         , :text => 'unearnAmt                     '                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '90.00',   :workbook_order => '95.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
@unearnInfrequentAmt                                                = Question.find_or_create_by_name('unearnInfrequentAmt'                                               , :text => 'unearnInfrequentAmt           '                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '91.00',   :workbook_order => '96.00',  :question_type => 'text_field',    :question_order => 4,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
@unearnIncomeBasedOnNeedAmt                                         = Question.find_or_create_by_name('unearnIncomeBasedOnNeedAmt'                                        , :text => 'unearnIncomeBasedOnNeedAmt    '                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '92.00',   :workbook_order => '97.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
@unearnAssistanceBasedOnNeedAmt                                     = Question.find_or_create_by_name('unearnAssistanceBasedOnNeedAmt'                                    , :text => 'unearnAssistanceBasedOnNeedAmt'                                      ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '93.00',   :workbook_order => '98.00',  :question_type => 'text_field',    :question_order => 6,    :group_id => @Own_Unearned_Income.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@spouseDiAmtSelfFull                                                = Question.find_or_create_by_name('spouseDiAmtSelfFull'                                               , :text => 'spouseDiAmtSelfFull                 '                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '95.00',  :workbook_order => '100.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
@spouseDiAmtOtherFull                                               = Question.find_or_create_by_name('spouseDiAmtOtherFull'                                              , :text => 'spouseDiAmtOtherFull                '                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '96.00',  :workbook_order => '101.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
@spouseUnEarnAmt                                                    = Question.find_or_create_by_name('spouseUnEarnAmt'                                                   , :text => 'spouseUnEarnAmt                     '                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '97.00',  :workbook_order => '102.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
@spouseUnearnInfrequentAmt                                          = Question.find_or_create_by_name('spouseUnearnInfrequentAmt'                                         , :text => 'spouseUnearnInfrequentAmt           '                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '98.00',  :workbook_order => '103.00',  :question_type => 'text_field',    :question_order => 4,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
@spouseUnearnIncomeBasedOnNeedAmt                                   = Question.find_or_create_by_name('spouseUnearnIncomeBasedOnNeedAmt'                                  , :text => 'spouseUnearnIncomeBasedOnNeedAmt    '                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '99.00',  :workbook_order => '104.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
@spouseUnearnAssistanceBasedOnNeedAmt                               = Question.find_or_create_by_name('spouseUnearnAssistanceBasedOnNeedAmt'                              , :text => 'spouseUnearnAssistanceBasedOnNeedAmt'                                ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '100.00', :workbook_order => '105.00',  :question_type => 'text_field',    :question_order => 6,    :group_id => @Spouse_Unearned_Income.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@ssdiEarnAmt                                                        = Question.find_or_create_by_name('ssdiEarnAmt'                                                       , :text => 'ssdiEarnAmt                 '                                        ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '102.00', :workbook_order => '107.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Own_Earned_Income.id ,   :answer_choices => ''        )
@ssiOrCaidEarnAmt                                                   = Question.find_or_create_by_name('ssiOrCaidEarnAmt'                                                  , :text => 'ssiOrCaidEarnAmt            '                                        ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '103.00', :workbook_order => '108.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Own_Earned_Income.id ,   :answer_choices => ''        )
@vA_CaidWorksCompetitiveEmployNow                                   = Question.find_or_create_by_name('vA_CaidWorksCompetitiveEmployNow'                                  , :text => 'vA_CaidWorksCompetitiveEmployNow            '                        ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '103.10', :workbook_order => '108.10',  :question_type => 'select',        :question_order => 3,    :group_id => @Own_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidWorksSelfEmployNow                                          = Question.find_or_create_by_name('vA_CaidWorksSelfEmployNow'                                         , :text => 'vA_CaidWorksSelfEmployNow            '                               ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '103.20', :workbook_order => '108.20',  :question_type => 'select',        :question_order => 4,    :group_id => @Own_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidLostJobWithinSixMo                                          = Question.find_or_create_by_name('vA_CaidLostJobWithinSixMo'                                         , :text => 'vA_CaidLostJobWithinSixMo            '                               ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '103.25', :workbook_order => '108.25',  :question_type => 'select',        :question_order => 5,    :group_id => @Own_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidWorksEmployFuture                                           = Question.find_or_create_by_name('vA_CaidWorksEmployFuture'                                          , :text => 'vA_CaidWorksEmployFuture            '                                ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '103.30', :workbook_order => '108.30',  :question_type => 'select',        :question_order => 6,    :group_id => @Own_Earned_Income.id ,   :answer_choices => 'Yes, No')
@earnInfrequentAmt                                                  = Question.find_or_create_by_name('earnInfrequentAmt'                                                 , :text => 'earnInfrequentAmt           '                                        ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '103.50', :workbook_order => '108.50',  :question_type => 'text_field',    :question_order => 7,    :group_id => @Own_Earned_Income.id ,   :answer_choices => ''        )
@ssiIndividThreshold                                                = Question.find_or_create_by_name('ssiIndividThreshold'                                               , :text => 'ssiIndividThreshold         '                                        ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '104.00', :workbook_order => '109.00',  :question_type => 'select',        :question_order => 8,    :group_id => @Own_Earned_Income.id ,   :answer_choices => 'Yes, No' )
@ssiAnnualIndividThresholdAmt                                       = Question.find_or_create_by_name('ssiAnnualIndividThresholdAmt'                                      , :text => 'ssiAnnualIndividThresholdAmt'                                        ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '105.00', :workbook_order => '110.00',  :question_type => 'text_field',    :question_order => 9,    :group_id => @Own_Earned_Income.id ,   :answer_choices => ''        )
                                                                                                                                                                                                                                                             
@spouseSsdiEarnAmt                                                  = Question.find_or_create_by_name('spouseSsdiEarnAmt'                                                 , :text => 'spouseSsdiEarnAmt              '                                     ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '107.00', :workbook_order => '112.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => ''            )
@spouseSsiOrCaidEarnAmt                                             = Question.find_or_create_by_name('spouseSsiOrCaidEarnAmt'                                            , :text => 'spouseSsiOrCaidEarnAmt         '                                     ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '108.00', :workbook_order => '113.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => ''            )
                                                                                                                                                                                                                                                                                                                         
@vA_CaidSpouseWorksCompetitiveEmployNow                             = Question.find_or_create_by_name('vA_CaidSpouseWorksCompetitiveEmployNow'                            , :text => 'vA_CaidSpouseWorksCompetitiveEmployNow         '                     ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '108.10', :workbook_order => '113.10',  :question_type => 'select',    :question_order => 3,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidSpouseWorksSelfEmployNow                                    = Question.find_or_create_by_name('vA_CaidSpouseWorksSelfEmployNow'                                   , :text => 'vA_CaidSpouseWorksSelfEmployNow         '                            ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '108.20', :workbook_order => '113.20',  :question_type => 'select',    :question_order => 4,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidSpouseLostJobWithinSixMo                                    = Question.find_or_create_by_name('vA_CaidSpouseLostJobWithinSixMo'                                   , :text => 'vA_CaidSpouseLostJobWithinSixMo         '                            ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '108.25', :workbook_order => '113.25',  :question_type => 'select',    :question_order => 5,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => 'Yes, No')
@vA_CaidSpouseWorksEmployFuture                                     = Question.find_or_create_by_name('vA_CaidSpouseWorksEmployFuture'                                    , :text => 'spouseSsiOrCaidEarnAmt         '                                     ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '108.30', :workbook_order => '113.30',  :question_type => 'select',    :question_order => 6,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => 'Yes, No')

@spouseEarnInfrequentAmt                                            = Question.find_or_create_by_name('spouseEarnInfrequentAmt'                                           , :text => 'spouseEarnInfrequentAmt        '                                     ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '108.50', :workbook_order => '113.50',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => ''            )
@spouseIndividThreshold                                             = Question.find_or_create_by_name('spouseIndividThreshold'                                            , :text => 'spouseIndividThreshold         '                                     ,  :display_rules => 'always', :default_answer => 'No',   :reference_id => '109.00', :workbook_order => '114.00',  :question_type => 'select',        :question_order => 4,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => 'Yes, No'     )
@spouseAnnualIndividThresholdAmt                                    = Question.find_or_create_by_name('spouseAnnualIndividThresholdAmt'                                   , :text => 'spouseAnnualIndividThresholdAmt'                                     ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '110.00', :workbook_order => '115.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => ''            )
@spouseWhoIsDeemedEarnAmt                                           = Question.find_or_create_by_name('spouseWhoIsDeemedEarnAmt'                                          , :text => 'spouseWhoIsDeemedEarnAmt       '                                     ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '135.50', :workbook_order => '115.40',  :question_type => 'text_field',    :question_order => 6,    :group_id => @Spouse_Earned_Income.id ,   :answer_choices => ''            )
                                                                                                                                                                                                                                                                                                                                                                                                
@disWorkExpAmt                                                      = Question.find_or_create_by_name('disWorkExpAmt'                                                     , :text => 'disWorkExpAmt'                                                       ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '113.00', :workbook_order => '118.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@spouseDisWorkExpAmt                                                = Question.find_or_create_by_name('spouseDisWorkExpAmt'                                               , :text => 'spouseDisWorkExpAmt'                                                 ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '114.00', :workbook_order => '119.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@estEarnTaxAmt                                                      = Question.find_or_create_by_name('estEarnTaxAmt'                                                     , :text => 'estEarnTaxAmt'                                                       ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '115.00', :workbook_order => '120.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@spouseEstEarnTaxAmt                                                = Question.find_or_create_by_name('spouseEstEarnTaxAmt'                                               , :text => 'spouseEstEarnTaxAmt'                                                 ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '116.00', :workbook_order => '121.00',  :question_type => 'text_field',    :question_order => 4,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@worksPremiumAmt                                                    = Question.find_or_create_by_name('worksPremiumAmt'                                                   , :text => 'worksPremiumAmt'                                                     ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '116.20', :workbook_order => '121.20',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@spouseWorksPremiumAmt                                              = Question.find_or_create_by_name('spouseWorksPremiumAmt'                                             , :text => 'spouseWorksPremiumAmt'                                               ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '116.40', :workbook_order => '121.40',  :question_type => 'text_field',    :question_order => 6,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@othWorkExpAmt                                                      = Question.find_or_create_by_name('othWorkExpAmt'                                                     , :text => 'othWorkExpAmt'                                                       ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '117.00', :workbook_order => '122.00',  :question_type => 'text_field',    :question_order => 7,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
@spouseOthWorkExpAmt                                                = Question.find_or_create_by_name('spouseOthWorkExpAmt'                                               , :text => 'spouseOthWorkExpAmt'                                                 ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '118.00', :workbook_order => '123.00',  :question_type => 'text_field',    :question_order => 8,    :group_id => @Work_Expenses.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@vA_AuxGrantFacilityRateAmt                                         = Question.find_or_create_by_name('vA_AuxGrantFacilityRateAmt'                                        , :text => 'vA_AuxGrantFacilityRateAmt      '                                    ,  :display_rules => 'always', :default_answer => ''    , :reference_id => '120.00', :workbook_order => '125.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@vA_CoupleAuxGrantFacilityRateAmt                                   = Question.find_or_create_by_name('vA_CoupleAuxGrantFacilityRateAmt'                                  , :text => 'vA_CoupleAuxGrantFacilityRateAmt'                                    ,  :display_rules => 'always', :default_answer => ''    , :reference_id => '121.00', :workbook_order => '126.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@estMedExpWithCaidAmt                                               = Question.find_or_create_by_name('estMedExpWithCaidAmt'                                              , :text => 'estMedExpWithCaidAmt            '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '122.00', :workbook_order => '127.00',  :question_type => 'text_field',    :question_order => 3,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@estMedExpWithoutCaidAmt                                            = Question.find_or_create_by_name('estMedExpWithoutCaidAmt'                                           , :text => 'estMedExpWithoutCaidAmt         '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '123.00', :workbook_order => '128.00',  :question_type => 'text_field',    :question_order => 4,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@spouseEstMedExpWithCaidAmt                                         = Question.find_or_create_by_name('spouseEstMedExpWithCaidAmt'                                        , :text => 'spouseEstMedExpWithCaidAmt      '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '124.00', :workbook_order => '129.00',  :question_type => 'text_field',    :question_order => 5,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@spouseEstMedExpWithoutCaidAmt                                      = Question.find_or_create_by_name('spouseEstMedExpWithoutCaidAmt'                                     , :text => 'spouseEstMedExpWithoutCaidAmt   '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '125.00', :workbook_order => '130.00',  :question_type => 'text_field',    :question_order => 6,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@otherExpAmt                                                        = Question.find_or_create_by_name('otherExpAmt'                                                       , :text => 'otherExpAmt                     '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '126.00', :workbook_order => '131.00',  :question_type => 'text_field',    :question_order => 7,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
@spouseOtherExpAmt                                                  = Question.find_or_create_by_name('spouseOtherExpAmt'                                                 , :text => 'spouseOtherExpAmt               '                                    ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '127.00', :workbook_order => '132.00',  :question_type => 'text_field',    :question_order => 8,    :group_id => @Other_Expenses.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@employInvestAmt                                                    = Question.find_or_create_by_name('employInvestAmt'                                                   , :text => 'employInvestAmt        '                                             ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '129.00', :workbook_order => '134.00',  :question_type => 'text_field',    :question_order => 1,    :group_id => @Employability_Investments.id ,   :answer_choices => '')
@spouseEmployInvestAmt                                              = Question.find_or_create_by_name('spouseEmployInvestAmt'                                             , :text => 'spouseEmployInvestAmt  '                                             ,  :display_rules => 'always', :default_answer => '0.00', :reference_id => '130.00', :workbook_order => '135.00',  :question_type => 'text_field',    :question_order => 2,    :group_id => @Employability_Investments.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@student                                                            = Question.find_or_create_by_name('student'                                                           , :text => 'student                                  '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '133.00',   :workbook_order => '138.00',  :question_type => 'select',        :question_order =>  1,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@seieAmt                                                            = Question.find_or_create_by_name('seieAmt'                                                           , :text => 'seieAmt                                  '                           ,  :display_rules => 'always', :default_answer => '',         :reference_id => '134.00',   :workbook_order => '139.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => ''       )
@spouseStudent                                                      = Question.find_or_create_by_name('spouseStudent'                                                     , :text => 'spouseStudent                            '                           ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '135.00',   :workbook_order => '140.00',  :question_type => 'select',        :question_order =>  3,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@spouseSeieAmt                                                      = Question.find_or_create_by_name('spouseSeieAmt'                                                     , :text => 'spouseSeieAmt                            '                           ,  :display_rules => 'always', :default_answer => '',         :reference_id => '136.00',   :workbook_order => '142.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => ''       )
@seieLessThanEarnAnnualLmtReached                                   = Question.find_or_create_by_name('seieLessThanEarnAnnualLmtReached'                                  , :text => 'seieLessThanEarnAnnualLmtReached         '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '137.00',   :workbook_order => '143.00',  :question_type => 'select',        :question_order =>  5,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@seieLessThanSeieMaxAnnualLmtReached                                = Question.find_or_create_by_name('seieLessThanSeieMaxAnnualLmtReached'                               , :text => 'seieLessThanSeieMaxAnnualLmtReached      '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '138.00',   :workbook_order => '144.00',  :question_type => 'select',        :question_order =>  6,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@seieAnnualLmtPreviouslyReached                                     = Question.find_or_create_by_name('seieAnnualLmtPreviouslyReached'                                    , :text => 'seieAnnualLmtPreviouslyReached           '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '139.00',   :workbook_order => '145.00',  :question_type => 'select',        :question_order =>  7,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@coupleSeieLessThanEarnMaxAnnualLmtReached                          = Question.find_or_create_by_name('coupleSeieLessThanEarnMaxAnnualLmtReached'                         , :text => 'coupleSeieLessThanEarnMaxAnnualLmtReached'                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '141.00',   :workbook_order => '146.00',  :question_type => 'select',        :question_order =>  8,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@coupleSeieLessThanSeieMaxAnnualLmtReached                          = Question.find_or_create_by_name('coupleSeieLessThanSeieMaxAnnualLmtReached'                         , :text => 'coupleSeieLessThanSeieMaxAnnualLmtReached'                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '142.00',   :workbook_order => '147.00',  :question_type => 'select',        :question_order =>  9,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@coupleSeieAnnualAmtPreviouslyReached                               = Question.find_or_create_by_name('coupleSeieAnnualAmtPreviouslyReached'                              , :text => 'coupleSeieAnnualAmtPreviouslyReached     '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '143.00',   :workbook_order => '148.00',  :question_type => 'select',        :question_order => 10,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@spouseSeieLessThanEarnMaxAnnualLmtReached                          = Question.find_or_create_by_name('spouseSeieLessThanEarnMaxAnnualLmtReached'                         , :text => 'spouseSeieLessThanEarnMaxAnnualLmtReached'                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '144.00',   :workbook_order => '149.00',  :question_type => 'select',        :question_order => 11,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@spouseSeieLessThanSeieMaxAnnualLmtReached                          = Question.find_or_create_by_name('spouseSeieLessThanSeieMaxAnnualLmtReached'                         , :text => 'spouseSeieLessThanSeieMaxAnnualLmtReached'                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '145.00',   :workbook_order => '150.00',  :question_type => 'select',        :question_order => 12,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
@spouseSeieAnnualAmtPreviouslyReached                               = Question.find_or_create_by_name('spouseSeieAnnualAmtPreviouslyReached'                              , :text => 'spouseSeieAnnualAmtPreviouslyReached     '                           ,  :display_rules => 'always', :default_answer => 'Yes',      :reference_id => '146.00',   :workbook_order => '151.00',  :question_type => 'select',        :question_order => 13,    :group_id => @student_Earned_Income_Exclutsion.id ,   :answer_choices => 'Yes, No')
                                                                                                                                                                                                                                                             
@ssiCaidIrweAmt                                                     = Question.find_or_create_by_name('ssiCaidIrweAmt'                                                    , :text => 'ssiCaidIrweAmt      '                                                ,  :display_rules => 'always', :default_answer => '',    :reference_id => '147.00',   :workbook_order => '153.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @Impairment_Related_Work_Expense.id ,   :answer_choices => '')
@spouseSsiCaidIrweAmt                                               = Question.find_or_create_by_name('spouseSsiCaidIrweAmt'                                              , :text => 'spouseSsiCaidIrweAmt'                                                ,  :display_rules => 'always', :default_answer => '',    :reference_id => '148.00',   :workbook_order => '154.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @Impairment_Related_Work_Expense.id ,   :answer_choices => '')
@sgaIrweAmt                                                         = Question.find_or_create_by_name('sgaIrweAmt'                                                        , :text => 'sgaIrweAmt          '                                                ,  :display_rules => 'always', :default_answer => '',    :reference_id => '149.00',   :workbook_order => '155.00',  :question_type => 'text_field',    :question_order =>  3,    :group_id => @Impairment_Related_Work_Expense.id ,   :answer_choices => '')
@spouseSgaIrweAmt                                                   = Question.find_or_create_by_name('spouseSgaIrweAmt'                                                  , :text => 'spouseSgaIrweAmt    '                                                ,  :display_rules => 'always', :default_answer => '',    :reference_id => '150.00',   :workbook_order => '156.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @Impairment_Related_Work_Expense.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@bweAmt                                                             = Question.find_or_create_by_name('bweAmt'                                                            , :text => 'bweAmt      '                                                        ,  :display_rules => 'always', :default_answer => '',    :reference_id => '152.00',   :workbook_order => '158.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @blind_Work_Expense.id ,   :answer_choices => '')
@spouseBweAmt                                                       = Question.find_or_create_by_name('spouseBweAmt'                                                      , :text => 'spouseBweAmt'                                                        ,  :display_rules => 'always', :default_answer => '',    :reference_id => '153.00',   :workbook_order => '159.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @blind_Work_Expense.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@passAmt                                                            = Question.find_or_create_by_name('passAmt'                                                           , :text => 'passAmt      '                                                       ,  :display_rules => 'always', :default_answer => '',  :reference_id => '155.00',   :workbook_order => '161.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @Plan_for_Achieving_Self_Support.id ,   :answer_choices => '')
@spousePassAmt                                                      = Question.find_or_create_by_name('spousePassAmt'                                                     , :text => 'spousePassAmt'                                                       ,  :display_rules => 'always', :default_answer => '',  :reference_id => '156.00',   :workbook_order => '162.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @Plan_for_Achieving_Self_Support.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@twpComplete                                                        = Question.find_or_create_by_name('twpComplete'                                                       , :text => 'twpComplete      '                                                   ,  :display_rules => 'always', :default_answer => 'Yes',   :reference_id => '158.00', :workbook_order => '164.00',  :question_type => 'select',        :question_order => 1,    :group_id => @Trial_Work_Period.id ,   :answer_choices => 'Yes, No')
@spouseTwpComplete                                                  = Question.find_or_create_by_name('spouseTwpComplete'                                                 , :text => 'spouseTwpComplete'                                                   ,  :display_rules => 'always', :default_answer => 'Yes',   :reference_id => '159.00', :workbook_order => '165.00',  :question_type => 'select',        :question_order => 2,    :group_id => @Trial_Work_Period.id ,   :answer_choices => 'Yes, No')
                                                                                                                                                                                                                                                             
@subsidyEmpSupAmt                                                   = Question.find_or_create_by_name('subsidyEmpSupAmt'                                                  , :text => 'subsidyEmpSupAmt             '                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '161.00',   :workbook_order => '167.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @SubTab6_6_Subsidy.id ,   :answer_choices => '')
@subsidyWkDutiesReducAmt                                            = Question.find_or_create_by_name('subsidyWkDutiesReducAmt'                                           , :text => 'subsidyWkDutiesReducAmt      '                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '162.00',   :workbook_order => '168.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @SubTab6_6_Subsidy.id ,   :answer_choices => '')
@spouseSubsidyEmpSupAmt                                             = Question.find_or_create_by_name('spouseSubsidyEmpSupAmt'                                            , :text => 'spouseSubsidyEmpSupAmt       '                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '163.00',   :workbook_order => '169.00',  :question_type => 'text_field',    :question_order =>  3,    :group_id => @SubTab6_6_Subsidy.id ,   :answer_choices => '')
@spouseSubsidyWkDutiesReducAmt                                      = Question.find_or_create_by_name('spouseSubsidyWkDutiesReducAmt'                                     , :text => 'spouseSubsidyWkDutiesReducAmt'                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '164.00',   :workbook_order => '170.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @SubTab6_6_Subsidy.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                             
@ssdiWcOrPdbDecreaseAmt                                             = Question.find_or_create_by_name('ssdiWcOrPdbDecreaseAmt'                                            , :text => 'ssdiWcOrPdbDecreaseAmt '                                             ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '168.00',   :workbook_order => '174.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @SubTab7_1_OwnDiBenefitAdjust.id ,   :answer_choices => ''        )
@ssdiUnderPayIncreaseAmt                                            = Question.find_or_create_by_name('ssdiUnderPayIncreaseAmt'                                           , :text => 'ssdiUnderPayIncreaseAmt'                                             ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '169.00',   :workbook_order => '175.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @SubTab7_1_OwnDiBenefitAdjust.id ,   :answer_choices => ''        )
@ssiWhileSsdiUnderPay                                               = Question.find_or_create_by_name('ssiWhileSsdiUnderPay'                                              , :text => 'ssiWhileSsdiUnderPay   '                                             ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '170.00',   :workbook_order => '176.00',  :question_type => 'select',        :question_order =>  3,    :group_id => @SubTab7_1_OwnDiBenefitAdjust.id ,   :answer_choices => 'Yes, No' )
@ssdiOverPayDecreaseAmt                                             = Question.find_or_create_by_name('ssdiOverPayDecreaseAmt'                                            , :text => 'ssdiOverPayDecreaseAmt '                                             ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '171.00',   :workbook_order => '177.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @SubTab7_1_OwnDiBenefitAdjust.id ,   :answer_choices => ''        )
@ssiWhileSsdiOverPay                                                = Question.find_or_create_by_name('ssiWhileSsdiOverPay'                                               , :text => 'ssiWhileSsdiOverPay    '                                             ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '172.00',   :workbook_order => '178.00',  :question_type => 'select',        :question_order =>  5,    :group_id => @SubTab7_1_OwnDiBenefitAdjust.id ,   :answer_choices => 'Yes, No' )
                                                                                                                                                                                                                                                             
@spouseSsdiWcOrPdbDecreaseAmt                                       = Question.find_or_create_by_name('spouseSsdiWcOrPdbDecreaseAmt'                                      , :text => 'spouseSsdiWcOrPdbDecreaseAmt '                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '175.00',   :workbook_order => '181.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @SubTab7_2_SpouseSsdiBenefitAdjust.id ,   :answer_choices => ''         )
@spouseSsdiUnderPayIncreaseAmt                                      = Question.find_or_create_by_name('spouseSsdiUnderPayIncreaseAmt'                                     , :text => 'spouseSsdiUnderPayIncreaseAmt'                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '176.00',   :workbook_order => '182.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @SubTab7_2_SpouseSsdiBenefitAdjust.id ,   :answer_choices => ''         )
@spouseSsiWhileSsdiUnderPay                                         = Question.find_or_create_by_name('spouseSsiWhileSsdiUnderPay'                                        , :text => 'spouseSsiWhileSsdiUnderPay   '                                       ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '177.00',   :workbook_order => '183.00',  :question_type => 'select',        :question_order =>  3,    :group_id => @SubTab7_2_SpouseSsdiBenefitAdjust.id ,   :answer_choices => 'Yes, No'  )
@spouseSsdiOverPayDecreaseAmt                                       = Question.find_or_create_by_name('spouseSsdiOverPayDecreaseAmt'                                      , :text => 'spouseSsdiOverPayDecreaseAmt '                                       ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '178.00',   :workbook_order => '184.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @SubTab7_2_SpouseSsdiBenefitAdjust.id ,   :answer_choices => ''         )
@spouseSsiWhileSsdiOverPay                                          = Question.find_or_create_by_name('spouseSsiWhileSsdiOverPay'                                         , :text => 'spouseSsiWhileSsdiOverPay    '                                       ,  :display_rules => 'always', :default_answer => 'No',       :reference_id => '179.00',   :workbook_order => '185.00',  :question_type => 'select',        :question_order =>  5,    :group_id => @SubTab7_2_SpouseSsdiBenefitAdjust.id ,   :answer_choices => 'Yes, No'  )
                                                                                                                                                                                                                                                             
@ssiUserUnderPayAddAmt                                              = Question.find_or_create_by_name('ssiUserUnderPayAddAmt'                                             , :text => 'ssiUserUnderPayAddAmt    '                                           ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '183.00',   :workbook_order => '189.00',  :question_type => 'text_field',    :question_order =>  1,    :group_id => @SubTab7_3_SsiBenefitAdjust.id ,   :answer_choices => '')
@ssiUserOverPayDeductAmt                                            = Question.find_or_create_by_name('ssiUserOverPayDeductAmt'                                           , :text => 'ssiUserOverPayDeductAmt  '                                           ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '184.00',   :workbook_order => '190.00',  :question_type => 'text_field',    :question_order =>  2,    :group_id => @SubTab7_3_SsiBenefitAdjust.id ,   :answer_choices => '')
@ssiCoupleUnderPayAddAmt                                            = Question.find_or_create_by_name('ssiCoupleUnderPayAddAmt'                                           , :text => 'ssiCoupleUnderPayAddAmt  '                                           ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '185.00',   :workbook_order => '191.00',  :question_type => 'text_field',    :question_order =>  3,    :group_id => @SubTab7_3_SsiBenefitAdjust.id ,   :answer_choices => '')
@ssiCoupleOverPayDeductAmt                                          = Question.find_or_create_by_name('ssiCoupleOverPayDeductAmt'                                         , :text => 'ssiCoupleOverPayDeductAmt'                                           ,  :display_rules => 'always', :default_answer => '0.00',     :reference_id => '186.00',   :workbook_order => '192.00',  :question_type => 'text_field',    :question_order =>  4,    :group_id => @SubTab7_3_SsiBenefitAdjust.id ,   :answer_choices => '')
                                                                                                                                                                                                                                                                         


# Create Rates
FederalRate.delete_all
FederalRate.find_or_create_by_start_date(Date.new(2011,01,01), 
                    :fbr_amount => 674.00, 
                    :fbr_couple_amount => 1011.00, 
                    :pmv_amount => 244.67, 
                    :pmv_couple_amount => 357.00,
                    :two_thirds_fbr_amount => 449.34,
                    :two_thirds_fbr_couple_amount => 674.00,
                    :services_amount => 700.00,
                    :sga_disabled_amount => 1000.00,
                    :sga_blind_amount => 1640.00,
                    :gen_exclude_amount => 20.00,
                    :earned_inc_disregard_amount => 65.00,
                    :seie_max_monthly => 1640.00,
                    :seie_max_year => 6600.00,
                    :RateCareBPremium => 96.40,
                    :RateSsiResourceLimit => 2000.00,
                    :RateCoupleSsiResourceLimit => 3000.00,
                    :RateCaidMostGroupsResourceLimit => 2000.00,
                    :RateCoupleCaidMostGroupsResourceLimit => 3000.00,
                    :RateQwdiResouceLimit => 4000.00,
                    :RateCoupleQwdiResouceLimit => 6000.00,
                    :RateQmbSlmbQiResouceLimit => 6680.00,
                    :RateCoupleQmbSlmbQiResouceLimit => 10020.00,
                    :RateLtcCaidSpousalResourceStandard => 21912.00,
                    :RateLtcCaidSpousalMaxResourceStandard => 109560.00,
                    :RateInfreqOrIrregUnearnPerQuarterAmt => 60.00,
                    :RateInfreqOrIrregEarnPerQuarterAmt => 30.00
)

 FederalPovertyLevel.delete_all
 FederalPovertyLevel.find_or_create_by_start_date(Date.new(2011,01,01), 
                      :family_size_1 => 10890, 
                      :family_size_2 => 14710, 
                      :family_size_3 => 18530, 
                      :family_size_4 => 22350,
                      :family_size_5 => 26170,
                      :family_size_6 => 29990,
                      :family_size_7 => 33810,
                      :family_size_8 => 37630,
                      :family_size_9 => 41450,
                      :family_size_10 => 45270,
                      :family_size_11 => 49090,
                      :family_size_12 => 52910,
                      :family_size_13 => 56730,
                      :family_size_14 => 60550,
                      :family_size_15 => 64370,
                      :additional => 3820.00
  )
  
MedicaidAnnualThreshold.delete_all
MedicaidAnnualThreshold.find_or_create_by_start_date(Date.new(2011,01,01), 
                    :alabama => 24438.00,
                    :alaska => 51525.00,
                    :arizona	=> 30870.00,
                    :arkansas	=> 28730.00,
                    :california	=> 35023.00,
                    :colorado	=> 31990.00,
                    :connecticut => 56502.00,
                    :delaware	=> 38668.00,
                    :district_of_columbia	=> 43037.00,
                    :florida	=> 28753.00,
                    :georgia	=>27509.00,
                    :hawaii	=> 36977.00,
                    :idaho	=> 38495.00,
                    :illinois	=> 26141.00,
                    :indiana	=> 34713.00,
                    :iowa	=> 30811.00,
                    :kansas	=>	34071.00,
                    :kentucky	=> 27345.00,
                    :louisiana	=> 29763.00,
                    :maine	=>	32403.00,
                    :maryland	=>	38660.00,
                    :massachusetts	=>	36391.00,
                    :michigan	=>	29036.00,
                    :minnesota	=>	49550.00,
                    :mississippi	=>	25923.00,
                    :missouri	=>	31180.00,
                    :montana	=>	29429.00,
                    :nebraska	=> 36295.00,
                    :nevada	=> 30135.00,
                    :new_hampshire => 40720.00,
                    :new_jersey	=> 33487.00,
                    :new_mexico	=> 36421.00,
                    :new_york => 45454.00,
                    :north_carolina	=>33568.00,
                    :north_dakota => 38049.00,
                    :ohio => 34013.00,
                    :oklahoma => 26480.00,
                    :oregon => 31462.00,
                    :pennsylvania	=> 29410.00,
                    :rhode_island	=> 36324.00,
                    :south_carolina	=> 28141.00,
                    :south_dakota	=> 32991.00,
                    :tennessee	=> 26645.00,
                    :texas	=> 29329.00,
                    :utah	=> 29176.00,
                    :vermont	=> 35554.00,
                    :virginia	=> 32545.00,
                    :washington	=> 28160.00,
                    :west_virginia => 28283.00,
                    :wisconsin	=>31468.00,
                    :wyoming	=> 33855.00
)

#medicaid_annual_blind_thresholds table name
MedicaidAnnualBlindThreshold.delete_all
MedicaidAnnualBlindThreshold.find_or_create_by_start_date(Date.new(2011,01,01), 
                      :alabama => 24438.00,
                      :alaska => 51525.00,
                      :arizona	=> 30870.00,
                      :arkansas	=> 28730.00,
                      :california	=> 35716.00,
                      :colorado	=> 31990.00,
                      :connecticut => 56502.00,
                      :delaware	=> 38668.00,
                      :district_of_columbia	=> 43037.00,
                      :florida	=> 28753.00,
                      :georgia	=>27509.00,
                      :hawaii	=> 36977.00,
                      :idaho	=> 38495.00,
                      :illinois	=> 26141.00,
                      :indiana	=> 34713.00,
                      :iowa	=> 31339.00,
                      :kansas	=>	34071.00,
                      :kentucky	=> 27345.00,
                      :louisiana	=> 29763.00,
                      :maine	=>	32403.00,
                      :maryland	=>	38660.00,
                      :massachusetts	=>	37240.00,
                      :michigan	=>	29036.00,
                      :minnesota	=>	49550.00,
                      :mississippi	=>	25923.00,
                      :missouri	=>	31180.00,
                      :montana	=>	29429.00,
                      :nebraska	=> 36295.00,
                      :nevada	=> 32759.00,
                      :new_hampshire => 40720.00,
                      :new_jersey	=> 33487.00,
                      :new_mexico	=> 36421.00,
                      :new_york => 45454.00,
                      :north_carolina	=>33568.00,
                      :north_dakota => 38049.00,
                      :ohio => 34013.00,
                      :oklahoma => 26480.00,
                      :oregon => 31462.00,
                      :pennsylvania	=> 29410.00,
                      :rhode_island	=> 36324.00,
                      :south_carolina	=> 28141.00,
                      :south_dakota	=> 32991.00,
                      :tennessee	=> 26645.00,
                      :texas	=> 29329.00,
                      :utah	=> 29176.00,
                      :vermont	=> 35554.00,
                      :virginia	=> 32545.00,
                      :washington	=> 28160.00,
                      :west_virginia => 28283.00,
                      :wisconsin	=>31468.00,
                      :wyoming	=> 33855.00
  )

VaMaxAuxiliaryGrantFacilityRate.delete_all
VaMaxAuxiliaryGrantFacilityRate.find_or_create_by_start_date(Date.new(2011,01,01),
                      :ag_personal_allowance           =>  81.00,
                      :ag_max_payment_pd8              =>  686.00,
                      :ag_couple_max_payment_pd8       => 1709.00,
                      :ag_max_payment_elsewhere        =>  519.00,
                      :ag_couple_max_payment_elsewhere => 1375.00)

#MedicaidFplBasedIncomeLimits
#medicaid_fpl_based_income_limits
MedicaidFplBasedIncomeLimit.delete_all
MedicaidFplBasedIncomeLimit.find_or_create_by_start_date(Date.new(2011,01,01),
                      :caid_80percent_fpl_inc_limit_assist_unit_1    =>  726.00,
                      :caid_80percent_fpl_inc_limit_assist_unit_2    =>  981.00,
                      :caid_qmb_inc_limit_assist_unit_1              =>  908.00,
                      :caid_qmb_inc_limit_assist_unit_2              => 1226.00,
                      :caid_slmb_inc_limit_assist_unit_1             => 1089.00,
                      :caid_slmb_inc_limit_assist_unit_2             => 1471.00,
                      :caid_qi_inc_limit_assist_unit_1               => 1226.00,
                      :caid_qi_inc_limit_assist_unit_2               => 1655.00,
                      :caid_qdwi_works_earn_inc_limit_assist_unit_1  => 1815.00,
                      :caid_qdwi_works_earn_inc_limit_assist_unit_2  => 2452.00)

VaMedicaidRate.delete_all
  @VaMedicaidRate =  VaMedicaidRate.find_or_create_by_start_date(Date.new(2010,01,01), 
                      :va_rate_caid_works_resource_limit => 32545.00,
                      :va_rate_caid_real_estate_resource_limit => 5000.00,
                      :va_rate_caid_ltc_home_equity_limit => 506000.00
     )

     VaMedicallyNeedyMonthlyIncomeLimit.delete_all
     @VaMedicaidRate1 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 1, :group1 => 280.79, :group2 => 323.99, :group3 => 421.18)
     @VaMedicaidRate2 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 2, :group1 => 357.52, :group2 => 399.00, :group3 => 507.84)
     @VaMedicaidRate3 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 3, :group1 => 421.18, :group2 => 464.38, :group3 => 572.38)    
     @VaMedicaidRate4 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 4, :group1 => 475.18, :group2 => 518.38, :group3 => 626.38) 
     @VaMedicaidRate5 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 5, :group1 => 529.18, :group2 => 572.38, :group3 => 680.38) 
     @VaMedicaidRate6 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 6, :group1 => 583.18, :group2 => 626.38, :group3 => 734.38) 
     @VaMedicaidRate7 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 7, :group1 => 637.18, :group2 => 680.38, :group3 => 788.38) 
     @VaMedicaidRate8 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 8, :group1 => 701.98, :group2 => 745.18, :group3 => 842.38)   
     @VaMedicaidRate9 =  VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 9, :group1 => 774.55, :group2 => 817.88, :group3 => 914.95)
     @VaMedicaidRate10 = VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 10, :group1 => 847.12, :group2 => 890.45, :group3 => 987.52) 
     @VaMedicaidRate99 = VaMedicallyNeedyMonthlyIncomeLimit.find_or_create_by_start_date(Date.new(2010,07,01), :assist_size => 99, :group1 => 72.57, :group2 => 72.57, :group3 => 72.57)
        
    
    CountyOrCity.find_or_create_by_name('Accomack'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Albemarle'        , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Alexandria'       , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Alleghany'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Amelia'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Amherst'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Appomattox'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Arlington'        , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Augusta'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Bath'             , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Bedford'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Bland'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Botetourt'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Bristol'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Brunswick'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Buchanan'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Buckingham'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Buena Vista'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Campbell'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Caroline'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Carroll'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Charles City'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Charlotte'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Charlottesville'  , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Chesapeake'       , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Chesterfield'     , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Clarke'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Colonial Heights' , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Covington'        , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Craig'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Culpeper'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Cumberland'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Danville'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Dickenson'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Dinwiddie'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Emporia'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Essex'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Fairfax'          , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Falls Church'     , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Fauquier'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Floyd'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Fluvanna'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Franklin'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Franklin'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Frederick'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Fredericksburg'   , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Galax'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Giles'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Gloucester'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Goochland'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Grayson'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Greene'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Greensville'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Halifax'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Hampton'          , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Hanover'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Harrisonburg'     , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Henrico'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Henry'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Highland'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Hopewell'         , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Isle of Wight'    , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('James City'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('King & Queen'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('King George'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('King William'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Lancaster'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Lee'              , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Lexington'        , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Loudoun'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Louisa'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Lunenburg'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Lynchburg'        , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Madison'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Manassas'         , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Manassas Park'    , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Martinsville'     , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Mathews'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Mecklenburg'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Middlesex'        , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Montgomery'       , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Nelson'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('New Kent'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Newport News'     , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Norfolk'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Northampton'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Northumberland'   , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Norton'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Nottoway'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Orange'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Page'             , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Patrick'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Petersburg'       , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Pittsylvania'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Portsmouth'       , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Powhatan'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Prince Edward'    , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Prince George'    , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Prince William'   , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Pulaski'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Radford'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Rappahannock'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Richmond'         , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Richmond County'  , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Roanoke'          , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Roanoke County'   , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Rockbridge'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Rockingham'       , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Russell'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Scott'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Shenandoah'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Smyth'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Southampton'      , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Spotsylvania'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Stafford'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Staunton'         , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Suffolk'          , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Surry'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Sussex'           , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Tazewell'         , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Virginia Beach'   , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Warren'           , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Washington'       , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Waynesboro'       , :medically_needy_group => 3)
    CountyOrCity.find_or_create_by_name('Westmoreland'     , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Williamsburg'     , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Winchester'       , :medically_needy_group => 2)
    CountyOrCity.find_or_create_by_name('Wise'             , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('Wythe'            , :medically_needy_group => 1)
    CountyOrCity.find_or_create_by_name('York'             , :medically_needy_group => 1)
    
#Start of webcalcs   
#q_ indicates a questoin answer webcalc

@q_ssiParDeemAmt  = WebCalc.find_or_create_by_name('q_ssiParDeemAmt')
@q_ssiParDeemAmt.operation = "
q_ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt')
if q_ssiParDeemAmt != nil then
   Float(q_ssiParDeemAmt)
else
   0
end
"
@q_ssiParDeemAmt.save!

@q_vA_CaidParDeemAmt  = WebCalc.find_or_create_by_name('q_vA_CaidParDeemAmt')
@q_vA_CaidParDeemAmt.operation = "
q_vA_CaidParDeemAmt = manager.get_answer_by_question_name('vA_CaidParDeemAmt')
if q_vA_CaidParDeemAmt != nil then
   Float(q_vA_CaidParDeemAmt)
else
   0
end
"
@q_vA_CaidParDeemAmt.save!

@q_vA_CaidCoupleParDeemAmt  = WebCalc.find_or_create_by_name('q_vA_CaidCoupleParDeemAmt')
@q_vA_CaidCoupleParDeemAmt.operation = "
q_vA_CaidCoupleParDeemAmt = manager.get_answer_by_question_name('vA_CaidCoupleParDeemAmt')
if q_vA_CaidCoupleParDeemAmt != nil then
   Float(q_vA_CaidCoupleParDeemAmt)
else
   0
end
"
@q_vA_CaidCoupleParDeemAmt.save!

@q_ssiSpouseDeemUnearnAmt  = WebCalc.find_or_create_by_name('q_ssiSpouseDeemUnearnAmt')
@q_ssiSpouseDeemUnearnAmt.operation = "
q_ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
if q_ssiSpouseDeemUnearnAmt != nil then
   Float(q_ssiSpouseDeemUnearnAmt)
else
   0
end
"
@q_ssiSpouseDeemUnearnAmt.save!

@q_vA_CaidSpouseDeemUnearnAmt  = WebCalc.find_or_create_by_name('q_vA_CaidSpouseDeemUnearnAmt')
@q_vA_CaidSpouseDeemUnearnAmt.operation = "
q_vA_CaidSpouseDeemUnearnAmt = manager.get_answer_by_question_name('vA_CaidSpouseDeemUnearnAmt')
if q_vA_CaidSpouseDeemUnearnAmt != nil then
   Float(q_vA_CaidSpouseDeemUnearnAmt)
else
   0
end
"
@q_vA_CaidSpouseDeemUnearnAmt.save!


@q_ssiSpouseDeemEarnAmt  = WebCalc.find_or_create_by_name('q_ssiSpouseDeemEarnAmt')
@q_ssiSpouseDeemEarnAmt.operation = "
q_ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
if q_ssiSpouseDeemEarnAmt != nil then
   Float(q_ssiSpouseDeemEarnAmt)
else
   0
end
"
@q_ssiSpouseDeemEarnAmt.save!

@q_vA_CaidSpouseDeemEarnAmt  = WebCalc.find_or_create_by_name('q_vA_CaidSpouseDeemEarnAmt')
@q_vA_CaidSpouseDeemEarnAmt.operation = "
q_vA_CaidSpouseDeemEarnAmt = manager.get_answer_by_question_name('vA_CaidSpouseDeemEarnAmt')
if q_vA_CaidSpouseDeemEarnAmt != nil then
   Float(q_vA_CaidSpouseDeemEarnAmt)
else
   0
end
"
@q_vA_CaidSpouseDeemEarnAmt.save!

#How much of your ~$unearnAmt~ of unearned income is infrequent or irregular?
@q_unearnAmt  = WebCalc.find_or_create_by_name('q_unearnAmt')
@q_unearnAmt.operation = "
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
if unearnAmt != nil then
   Float(unearnAmt)
else
   0
end
"
@q_unearnAmt.save!

#How much of your spouse's ~$spouseUnEarnAmt~ of unearned income does your spouse receive infrequently or irregularly?

@q_spouseUnEarnAmt  = WebCalc.find_or_create_by_name('q_spouseUnEarnAmt')
@q_spouseUnEarnAmt.operation = "
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
if spouseUnEarnAmt != nil then
   Float(spouseUnEarnAmt)
else
   0
end
"
@q_spouseUnEarnAmt.save!
 
#ssiOrCaidEarnAmt 
 @q_ssiOrCaidEarnAmt  = WebCalc.find_or_create_by_name('q_ssiOrCaidEarnAmt')
 @q_ssiOrCaidEarnAmt.operation = "
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
 if ssiOrCaidEarnAmt != nil then
    Float(ssiOrCaidEarnAmt)
 else
    0
 end
 "
 @q_ssiOrCaidEarnAmt.save!

 #ssiOrCaidEarnAmt_x_12
@q_ssiOrCaidEarnAmt_x_12  = WebCalc.find_or_create_by_name('q_ssiOrCaidEarnAmt_x_12')
@q_ssiOrCaidEarnAmt_x_12.operation = "
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
if ssiOrCaidEarnAmt != nil then
   Float(ssiOrCaidEarnAmt) * 12
else
   0
end
"
@q_ssiOrCaidEarnAmt_x_12.save!

#spouseSsiOrCaidEarnAmt
@q_spouseSsiOrCaidEarnAmt  = WebCalc.find_or_create_by_name('q_spouseSsiOrCaidEarnAmt')
@q_spouseSsiOrCaidEarnAmt.operation = "
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
if spouseSsiOrCaidEarnAmt != nil then
   Float(spouseSsiOrCaidEarnAmt)
else
  0
end
"
 @q_spouseSsiOrCaidEarnAmt.save!
 
 
 #spouseSsiOrCaidEarnAmt_x_12
 @q_spouseSsiOrCaidEarnAmt_x_12  = WebCalc.find_or_create_by_name('q_spouseSsiOrCaidEarnAmt_x_12')
 @q_spouseSsiOrCaidEarnAmt_x_12.operation = "
 spouseSsiOrCaidEarnAmt12 = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
 if spouseSsiOrCaidEarnAmt12 != nil then
    Float(spouseSsiOrCaidEarnAmt12) * 12
 else
   0
 end
 "
  @q_spouseSsiOrCaidEarnAmt_x_12.save!
 
 
 #q_ssdiEarnAmt
 @q_ssdiEarnAmt  = WebCalc.find_or_create_by_name('q_ssdiEarnAmt')
 @q_ssdiEarnAmt.operation = "
  q_ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
  if q_ssdiEarnAmt != nil then
    Float(q_ssdiEarnAmt)
  else
    0
  end
  "
  @q_ssdiEarnAmt.save! 
 
 #spouseSsdiEarnAmt
 @q_spouseSsdiEarnAmt  = WebCalc.find_or_create_by_name('q_spouseSsdiEarnAmt')
  @q_spouseSsdiEarnAmt.operation = "
   q_spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt')
   if q_spouseSsdiEarnAmt != nil then
      Float(q_spouseSsdiEarnAmt)
   else
      0
   end
   "
   @q_spouseSsdiEarnAmt.save!
 
 @q_ssiAnnualIndividThresholdAmt  = WebCalc.find_or_create_by_name('q_ssiAnnualIndividThresholdAmt')
  @q_ssiAnnualIndividThresholdAmt.operation = "
   q_ssiAnnualIndividThresholdAmt = manager.get_answer_by_question_name('ssiAnnualIndividThresholdAmt')
   if q_ssiAnnualIndividThresholdAmt != nil then
      Float(q_ssiAnnualIndividThresholdAmt)
   else
      0
   end
   "
   @q_ssiAnnualIndividThresholdAmt.save!

#   Alert - Spouse Medicaid Lost (Individualized Threshold):  Your spouse's annualized gross earned income (~spouseSsiOrCaidEarnAmt~ X 12) is greater than ~spouseAnnualIndividThresholdAmt~, your spouse's Individualized Threshold amount.  Unless your state has other special Medicaid provisions, your spouse will lose Medicaid coverage.
 
@q_spouseAnnualIndividThresholdAmt  = WebCalc.find_or_create_by_name('q_spouseAnnualIndividThresholdAmt')
 @q_spouseAnnualIndividThresholdAmt.operation = "
  q_spouseAnnualIndividThresholdAmt = manager.get_answer_by_question_name('spouseAnnualIndividThresholdAmt')
  if q_spouseAnnualIndividThresholdAmt != nil then
     Float(q_spouseAnnualIndividThresholdAmt)
  else
     0
  end
  "
  @q_spouseAnnualIndividThresholdAmt.save!
 
  
 #seieAmt
 @q_seieAmt  = WebCalc.find_or_create_by_name('q_seieAmt')
 @q_seieAmt.operation = "
  q_seieAmt = manager.get_answer_by_question_name('seieAmt')
  if q_seieAmt != nil then
     Float(q_seieAmt)
  else
     0
  end
  "
  @q_seieAmt.save! 
 
 #spouseSeieAmt
 @q_spouseSeieAmt  = WebCalc.find_or_create_by_name('q_spouseSeieAmt')
  @q_spouseSeieAmt.operation = "
   q_spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
   if q_spouseSeieAmt != nil then
      Float(q_spouseSeieAmt)
   else
      0
   end
   "
   @q_spouseSeieAmt.save!
 
 #disWorkExpAmt
 
@q_disWorkExpAmt  = WebCalc.find_or_create_by_name('q_disWorkExpAmt')
@q_disWorkExpAmt.operation = "
q_disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
if q_disWorkExpAmt != nil then
   Float(q_disWorkExpAmt)
else
   0
end
 "
 @q_disWorkExpAmt.save!

#spouseDisWorkExpAmt

@q_spouseDisWorkExpAmt  = WebCalc.find_or_create_by_name('q_spouseDisWorkExpAmt')
@q_spouseDisWorkExpAmt.operation = "
q_spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
if q_spouseDisWorkExpAmt != nil then
   Float(q_spouseDisWorkExpAmt)
else
   0
end
 "
@q_spouseDisWorkExpAmt.save! 

#othWorkExpAmt
@q_othWorkExpAmt  = WebCalc.find_or_create_by_name('q_othWorkExpAmt')
@q_othWorkExpAmt.operation = "
q_othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
if q_othWorkExpAmt != nil then
   Float(q_othWorkExpAmt)
else
   0
end
 "
@q_othWorkExpAmt.save!

#q_estEarnTaxAmt
@q_estEarnTaxAmt  = WebCalc.find_or_create_by_name('q_estEarnTaxAmt')
@q_estEarnTaxAmt.operation = "
q_estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
if q_estEarnTaxAmt != nil then
   Float(q_estEarnTaxAmt)
else
   0
end
 "
@q_estEarnTaxAmt.save!

#spouseOthWorkExpAmt
@q_spouseOthWorkExpAmt  = WebCalc.find_or_create_by_name('q_spouseOthWorkExpAmt')
@q_spouseOthWorkExpAmt.operation = "
q_spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
if q_spouseOthWorkExpAmt != nil then
   Float(q_spouseOthWorkExpAmt)
else
   0
end
 "
@q_spouseOthWorkExpAmt.save!


#q_spouseEstEarnTaxAmt
@q_spouseEstEarnTaxAmt  = WebCalc.find_or_create_by_name('q_spouseEstEarnTaxAmt')
@q_spouseEstEarnTaxAmt.operation = "
q_spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
if q_spouseEstEarnTaxAmt != nil then
   Float(q_spouseEstEarnTaxAmt)
else
   0
end
"
@q_spouseEstEarnTaxAmt.save!

@q_otherExpAmt  = WebCalc.find_or_create_by_name('q_otherExpAmt')
@q_otherExpAmt.operation = "
q_otherExpAmt = manager.get_answer_by_question_name('otherExpAmt')
if q_otherExpAmt != nil then
   Float(q_otherExpAmt)
else
   0
end
"
@q_otherExpAmt.save!

@q_spouseOtherExpAmt  = WebCalc.find_or_create_by_name('q_spouseOtherExpAmt')
@q_spouseOtherExpAmt.operation = "
q_spouseOtherExpAmt = manager.get_answer_by_question_name('spouseOtherExpAmt')
if q_spouseOtherExpAmt != nil then
   Float(q_spouseOtherExpAmt)
else
   0
end
"
@q_spouseOtherExpAmt.save!

#q_employInvestAmt
@q_employInvestAmt  = WebCalc.find_or_create_by_name('q_employInvestAmt')
@q_employInvestAmt.operation = "
q_employInvestAmt = manager.get_answer_by_question_name('employInvestAmt')
if q_employInvestAmt != nil then
   Float(q_employInvestAmt)
else
   0
end
 "
@q_employInvestAmt.save!

#spouseEmployInvestAmt
@q_spouseEmployInvestAmt  = WebCalc.find_or_create_by_name('q_spouseEmployInvestAmt')
@q_spouseEmployInvestAmt.operation = "
q_spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
if q_spouseEmployInvestAmt != nil then
   Float(q_spouseEmployInvestAmt)
else
   0
end
 "
@q_spouseEmployInvestAmt.save!

#q_vA_AuxGrantFacilityRateAmt
@q_vA_AuxGrantFacilityRateAmt  = WebCalc.find_or_create_by_name('q_vA_AuxGrantFacilityRateAmt')
@q_vA_AuxGrantFacilityRateAmt.operation = "
q_vA_AuxGrantFacilityRateAmt = manager.get_answer_by_question_name('vA_AuxGrantFacilityRateAmt')
if q_vA_AuxGrantFacilityRateAmt != nil then
   Float(q_vA_AuxGrantFacilityRateAmt)
else
   0
end
 "
@q_vA_AuxGrantFacilityRateAmt.save!
 
#q_vA_CoupleAuxGrantFacilityRateAmt
@q_vA_CoupleAuxGrantFacilityRateAmt  = WebCalc.find_or_create_by_name('q_vA_CoupleAuxGrantFacilityRateAmt')
@q_vA_CoupleAuxGrantFacilityRateAmt.operation = "
q_vA_CoupleAuxGrantFacilityRateAmt = manager.get_answer_by_question_name('vA_CoupleAuxGrantFacilityRateAmt')
if q_vA_CoupleAuxGrantFacilityRateAmt != nil then
   Float(q_vA_CoupleAuxGrantFacilityRateAmt)
else
   0
end
 "
@q_vA_CoupleAuxGrantFacilityRateAmt.save! 
 
#q_careBPremiumAmt
@q_careBPremiumAmt  = WebCalc.find_or_create_by_name('q_careBPremiumAmt')
@q_careBPremiumAmt.operation = "
q_careBPremiumAmt = manager.get_answer_by_question_name('careBPremiumAmt')
if q_careBPremiumAmt != nil then
   Float(q_careBPremiumAmt)
else
   0
end
"
@q_careBPremiumAmt.save! 

#q_spouseCareBPremiumAmt
@q_spouseCareBPremiumAmt  = WebCalc.find_or_create_by_name('q_spouseCareBPremiumAmt')
@q_spouseCareBPremiumAmt.operation = "
q_spouseCareBPremiumAmt = manager.get_answer_by_question_name('spouseCareBPremiumAmt')
if q_spouseCareBPremiumAmt != nil then
   Float(q_spouseCareBPremiumAmt)
else
   0
end
"
@q_spouseCareBPremiumAmt.save!

 @q_ssiUserActualAmt  = WebCalc.find_or_create_by_name('q_ssiUserActualAmt')
 @q_ssiUserActualAmt.operation = "
 q_ssiUserActualAmt = manager.get_answer_by_question_name('ssiUserActualAmt')
 if q_ssiUserActualAmt != nil then
    Float(q_ssiUserActualAmt)
 else
    0
 end
"
 @q_ssiUserActualAmt.save!

#q_ssdiActualAmt
@q_ssdiActualAmt  = WebCalc.find_or_create_by_name('q_ssdiActualAmt')
@q_ssdiActualAmt.operation = "
q_ssdiActualAmt = manager.get_answer_by_question_name('ssdiActualAmt')
if q_ssdiActualAmt != nil then
  Float(q_ssdiActualAmt)
else
  0
end
"
 @q_ssdiActualAmt.save!
 
#q_passAmt
@q_passAmt  = WebCalc.find_or_create_by_name('q_passAmt')
@q_passAmt.operation = "
q_passAmt = manager.get_answer_by_question_name('passAmt')
if q_passAmt != nil then
 Float(q_passAmt)
else
 0
end
"
@q_passAmt.save!
 
#q_spousePassAmt
@q_spousePassAmt  = WebCalc.find_or_create_by_name('q_spousePassAmt')
@q_spousePassAmt.operation = "
q_spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
if q_spousePassAmt != nil then
 Float(q_spousePassAmt)
else
 0
end
"
@q_spousePassAmt.save!

#q_ssiCaidIrweAmt #xxxx
@q_ssiCaidIrweAmt  = WebCalc.find_or_create_by_name('q_ssiCaidIrweAmt')
@q_ssiCaidIrweAmt.operation = "
q_ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
if q_ssiCaidIrweAmt != nil then
 Float(q_ssiCaidIrweAmt)
else
 0
end
"
@q_ssiCaidIrweAmt.save!

#spouseSsiCaidIrweAmt
@q_spouseSsiCaidIrweAmt  = WebCalc.find_or_create_by_name('q_spouseSsiCaidIrweAmt')
@q_spouseSsiCaidIrweAmt.operation = "
q_spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
if q_spouseSsiCaidIrweAmt != nil then
 Float(q_spouseSsiCaidIrweAmt)
else
 0
end
"
@q_spouseSsiCaidIrweAmt.save!

#q_sgaIrweAmt
@q_sgaIrweAmt  = WebCalc.find_or_create_by_name('q_sgaIrweAmt')
@q_sgaIrweAmt.operation = "
q_sgaIrweAmt = manager.get_answer_by_question_name('sgaIrweAmt')
if q_sgaIrweAmt != nil then
 Float(q_sgaIrweAmt)
else
 0
end
"
@q_sgaIrweAmt.save!

#q_bweAmt
@q_bweAmt  = WebCalc.find_or_create_by_name('q_bweAmt')
@q_bweAmt.operation = "
q_bweAmt = manager.get_answer_by_question_name('bweAmt')
if q_bweAmt != nil then
 Float(q_bweAmt)
else
 0
end
"
@q_bweAmt.save!

#q_twpComplete
@q_twpComplete  = WebCalc.find_or_create_by_name('q_twpComplete')
@q_twpComplete.operation = "
q_twpComplete = manager.get_answer_by_question_name('twpComplete')
"
@q_twpComplete.save!

#q_subsidyEmpSupAmt
@q_subsidyEmpSupAmt  = WebCalc.find_or_create_by_name('q_subsidyEmpSupAmt')
@q_subsidyEmpSupAmt.operation = "
q_subsidyEmpSupAmt = manager.get_answer_by_question_name('subsidyEmpSupAmt')
"
@q_subsidyEmpSupAmt.save!

#q_subsidyWkDutiesReducAmt
@q_subsidyWkDutiesReducAmt  = WebCalc.find_or_create_by_name('q_subsidyWkDutiesReducAmt')
@q_subsidyWkDutiesReducAmt.operation = "
q_subsidyWkDutiesReducAmt = manager.get_answer_by_question_name('subsidyWkDutiesReducAmt')
"
@q_subsidyWkDutiesReducAmt.save!

#q_spouseSgaIrweAmt
@q_spouseSgaIrweAmt  = WebCalc.find_or_create_by_name('q_spouseSgaIrweAmt')
@q_spouseSgaIrweAmt.operation = "
q_spouseSgaIrweAmt = manager.get_answer_by_question_name('spouseSgaIrweAmt')
if q_spouseSgaIrweAmt != nil then
 Float(q_spouseSgaIrweAmt)
else
 0
end
"
@q_spouseSgaIrweAmt.save!

#q_spouseBweAmt
@q_spouseBweAmt  = WebCalc.find_or_create_by_name('q_spouseBweAmt')
@q_spouseBweAmt.operation = "
q_spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
if q_spouseBweAmt != nil then
 Float(q_spouseBweAmt)
else
 0
end
"
@q_spouseBweAmt.save!

#q_spouseTwpComplete
@q_spouseTwpComplete  = WebCalc.find_or_create_by_name('q_spouseTwpComplete')
@q_spouseTwpComplete.operation = "
q_spouseTwpComplete = manager.get_answer_by_question_name('spouseTwpComplete')
"
@q_spouseTwpComplete.save!

#spouseSubsidyEmpSupAmt
@q_spouseSubsidyEmpSupAmt  = WebCalc.find_or_create_by_name('q_spouseSubsidyEmpSupAmt')
@q_spouseSubsidyEmpSupAmt.operation = "
q_spouseSubsidyEmpSupAmt = manager.get_answer_by_question_name('spouseSubsidyEmpSupAmt')
"
@q_spouseSubsidyEmpSupAmt.save!

#q_spouseSubsidyWkDutiesReducAmt
@q_spouseSubsidyWkDutiesReducAmt  = WebCalc.find_or_create_by_name('q_spouseSubsidyWkDutiesReducAmt')
@q_spouseSubsidyWkDutiesReducAmt.operation = "
q_spouseSubsidyWkDutiesReducAmt = manager.get_answer_by_question_name('spouseSubsidyWkDutiesReducAmt')
"
@q_spouseSubsidyWkDutiesReducAmt.save!


 #~ssiUserActualAmt + ssiSpouseActualAmt~
# ssiUserActualAmt_plus_ssiSpouseActualAmt~
@q_ssiUserActualAmt_plus_ssiSpouseActualAmt  = WebCalc.find_or_create_by_name('q_ssiUserActualAmt_plus_ssiSpouseActualAmt')
@q_ssiUserActualAmt_plus_ssiSpouseActualAmt.operation = "
ssiUserActualAmt = manager.get_answer_by_question_name('ssiUserActualAmt')
 reportedCheck = 0
if ssiUserActualAmt != nil then
   reportedCheck = Float(ssiUserActualAmt)
else
   reportedCheck = 0
end

ssiSpouseActualAmt = manager.get_answer_by_question_name('ssiSpouseActualAmt')
if ssiSpouseActualAmt != nil then
   reportedCheck =  reportedCheck + Float(ssiSpouseActualAmt)
end
reportedCheck
"
@q_ssiUserActualAmt_plus_ssiSpouseActualAmt.save!
 
  #THis calc is used inside spouseSeieAmt question as an insert into text
   #Ques 136 How much of your spouse's monthly earnings (spouseSsiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt) are excluded as a Student Earned Income Exclusion (SEIE)?

   @q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt  = WebCalc.find_or_create_by_name('q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt')
   @q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt.operation = "
   spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
   spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt') 
   spouseSsiOrCaidEarnAmt.to_f + spouseWhoIsDeemedEarnAmt.to_f
  "
  @q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt.save!
   
 @q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt  = WebCalc.find_or_create_by_name('q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt')
 @q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt.operation = "
  disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
  estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
  othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt') 
  disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f 
 "
 @q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt.save!

#spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt
@q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt  = WebCalc.find_or_create_by_name('q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt')
  @q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt.operation = "
  spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
  spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
  spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt') 
  spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f 
 "
 @q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt.save!
 
#employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt 
@q_EmployInvestAmt_plus_disWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt  = WebCalc.find_or_create_by_name('q_EmployInvestAmt_plus_disWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minusBweAmt')
@q_EmployInvestAmt_plus_disWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt.operation = "
employInvestAmt = manager.get_answer_by_question_name('employInvestAmt')
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt = manager.get_answer_by_question_name('bweAmt')
employInvestAmt.to_f + disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f - ssiCaidIrweAmt.to_f - bweAmt.to_f
 "
@q_EmployInvestAmt_plus_disWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt.save! 

#You can not enter a monthly PASS amount greater than the total amount of work expenses and employability investments your spouse has after subtracting any money already included in an IRWE or BWE
# ($spouseEmployInvestAmt + spouseDisWorkExpAmt + (RMC mail Ruth abt tax, RMC adds) + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt).  Enter numbers only.  Do not enter $ or a decimal point. 
@r_SpousePassPossible  = WebCalc.find_or_create_by_name('r_SpousePassPossible')
@r_SpousePassPossible.operation = "
spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
spouseEmployInvestAmt.to_f + spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f
"
@r_SpousePassPossible.save!

 
#@spouseSsiOrCaidEarnAmt's display rule used 2 times, Make a calc out of it
#IF (spouseSsiGet = Y AND ssiCoupleResourceLimitExceed <> Y) OR ((caidSpouseGet = Y OR caidSpouseApply = Y) AND caidCoupleMostGroupsResourceLimitExceed <> Y)
@rSpouseSsiOrCaidEarnAmtDisplayRule  = WebCalc.find_or_create_by_name('rSpouseSsiOrCaidEarnAmtDisplayRule')
@rSpouseSsiOrCaidEarnAmtDisplayRule.operation = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiCoupleResourceLimitExceed = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
((spouseSsiGet == 'Yes') && ssiCoupleResourceLimitExceed != 'Yes') || ((caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') && caidCoupleMostGroupsResourceLimitExceed != 'Yes')
"
 @rSpouseSsiOrCaidEarnAmtDisplayRule.save!   
     
@rAge = WebCalc.find_or_create_by_name('rAge')
@rAge.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? || manager.get_answer_by_question_name('birthDate').blank?
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  birthDate = Date.strptime(manager.get_answer_by_question_name('birthDate'), '%m/%d/%Y')
  answer = (sitDate.year - birthDate.year)
  subyear = 0
  if birthDate.month > sitDate.month then
    subyear = 1
  elsif birthDate.month == sitDate.month then
    if birthDate.day > sitDate.day  then
      subyear = 1
    end
  end
    answer = answer - subyear
   
  else 
    0
end
"
@rAge.save!

@rSpouseAge = WebCalc.find_or_create_by_name('rSpouseAge')
@rSpouseAge.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? || manager.get_answer_by_question_name('spouseBirthDate').blank?
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  spouseBirthDate = Date.strptime(manager.get_answer_by_question_name('spouseBirthDate'), '%m/%d/%Y')
  answer = (sitDate.year - spouseBirthDate.year)
  subyear = 0
  if spouseBirthDate.month > sitDate.month then
    subyear = 1
  elsif spouseBirthDate.month == sitDate.month then
    if spouseBirthDate.day > sitDate.day  then
      subyear = 1
    end
  end
    answer = answer - subyear
   
  else 
   0
end
"
@rSpouseAge.save!

@r_SgaAmt  = WebCalc.find_or_create_by_name('r_SgaAmt')
@r_SgaAmt.operation = "
blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')

  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateSgaBlindAmt = rate.sga_blind_amount
    rateSgaDisabledAmt = rate.sga_disabled_amount
  else
    rateSgaBlindAmt = 1640
    rateSgaDisabledAmt = 1000
  end 

  if blind == 'Yes'
    rateSgaBlindAmt
  elsif disability == 'Yes'
     rateSgaDisabledAmt
  else
     1000
  end

else
 if blind == 'Yes'
    1640
 elsif disability == 'Yes'
    1000
 else
   1000
  end
end
"
@r_SgaAmt.save!

@rateSgaDisabledAmt  = WebCalc.find_or_create_by_name('rateSgaDisabledAmt')
@rateSgaDisabledAmt.operation = "
disability = manager.get_answer_by_question_name('disability')
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
   rateSgaDisabledAmt = rate.sga_disabled_amount
 else
     1000
 end
else
  1000
end
"
@rateSgaDisabledAmt.save!

@rateSgaBlindAmt  = WebCalc.find_or_create_by_name('rateSgaBlindAmt')
@rateSgaBlindAmt.operation = "
blind = manager.get_answer_by_question_name('blind')
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
    rateSgaBlindAmt = rate.sga_blind_amount
 else 
   rateSgaBlindAmt = 1640
 end
else
  1640
end
"
@rateSgaBlindAmt.save!

@rSsiIndividThreshold  = WebCalc.find_or_create_by_name('rSsiIndividThreshold')
@rSsiIndividThreshold.operation = "
blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
state = manager.get_answer_by_question_name('state')
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 
  if blind == 'Yes' then
      rate = MedicaidAnnualBlindThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
  else
    rate = MedicaidAnnualThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
  end

  if !(rate.blank?) && state == 'Virginia'
       ((rate.virginia).to_f)/12
  elsif !(rate.blank?) && state == 'Oklahoma'
      ((rate.oklahoma).to_f)/12
  else 
    (32545/12)
  end
 else
  (32545/12)
 end
"
@rSsiIndividThreshold.save!

@rSsiIndividThresholdAnnual  = WebCalc.find_or_create_by_name('rSsiIndividThresholdAnnual')
@rSsiIndividThresholdAnnual.operation = "
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
rSsiIndividThreshold = Float(rSsiIndividThreshold.calculate manager)
rSsiIndividThreshold * 12
"
@rSsiIndividThresholdAnnual.save!

@rateSEIEMaxMonthly  = WebCalc.find_or_create_by_name('rateSEIEMaxMonthly')
@rateSEIEMaxMonthly.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
      rateSEIEMonthly = rate.seie_max_monthly
  else
      rateSEIEMonthly = 1640
  end
  
   rateSEIEMonthly

else 
   1640
end
"
@rateSEIEMaxMonthly.save!

@rateSEIEMaxYear  = WebCalc.find_or_create_by_name('rateSEIEMaxYear')
@rateSEIEMaxYear.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
      rateSEIEMaxYear = rate.seie_max_year
  else
      rateSEIEMaxYear = 6600
  end
  
   rateSEIEMaxYear

else 
   6600
end
"
@rateSEIEMaxYear.save!
 

@rateGenExcludeAmt  = WebCalc.find_or_create_by_name('rateGenExcludeAmt')
@rateGenExcludeAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
   rateGenExcludeAmt = rate.gen_exclude_amount
 else
   rateGenExcludeAmt = 20
 end
 
  rateGenExcludeAmt
 else 
  20
end
"
@rateGenExcludeAmt.save!

@rateEarnedIncDisregardAmt  = WebCalc.find_or_create_by_name('rateEarnedIncDisregardAmt')
@rateEarnedIncDisregardAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateEarnedIncDisregardAmt = rate.earned_inc_disregard_amount
  else
    rateEarnedIncDisregardAmt = 65
  end
    rateEarnedIncDisregardAmt
 else 
  65
end
"
@rateEarnedIncDisregardAmt.save!

@rateFbrAmt  = WebCalc.find_or_create_by_name('rateFbrAmt')
@rateFbrAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateFbrAmt = rate.fbr_amount
  else
    rateFbrAmt = 674
  end
   rateFbrAmt
 else 
  674
end
"
@rateFbrAmt.save!

@rateFbrCoupleAmt  = WebCalc.find_or_create_by_name('rateFbrCoupleAmt')
@rateFbrCoupleAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateFbrCoupleAmt = rate.fbr_couple_amount
  else
    rateFbrCoupleAmt = 1011
  end
   rateFbrCoupleAmt
 else 
  1011
end
"
@rateFbrCoupleAmt.save!

@ratePmvAmt  = WebCalc.find_or_create_by_name('ratePmvAmt')
@ratePmvAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
   ratePmvAmt = rate.pmv_amount
 else
   ratePmvAmt = 244.67
 end
   ratePmvAmt
 else 
  244.67
end
"
@ratePmvAmt.save!

@ratePmvCoupleAmt  = WebCalc.find_or_create_by_name('ratePmvCoupleAmt')
@ratePmvCoupleAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
   ratePmvCoupleAmt = rate.pmv_couple_amount
  else
    ratePmvCoupleAmt = 357
  end
   ratePmvCoupleAmt
 else 
  357
end
"
@ratePmvCoupleAmt.save!

@rateTwoThirdsFbrAmt  = WebCalc.find_or_create_by_name('rateTwoThirdsFbrAmt')
@rateTwoThirdsFbrAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
 if !(rate.blank?) then
   rateTwoThirdsFbrAmt = rate.two_thirds_fbr_amount
  else
    rateTwoThirdsFbrAmt = 450
  end
   rateTwoThirdsFbrAmt
 else 
  450
end
"
@rateTwoThirdsFbrAmt.save!

@rateTwoThirdsFbrCoupleAmt  = WebCalc.find_or_create_by_name('rateTwoThirdsFbrCoupleAmt')
@rateTwoThirdsFbrCoupleAmt.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateTwoThirdsFbrCoupleAmt = rate.two_thirds_fbr_couple_amount
  else
    rateTwoThirdsFbrCoupleAmt = 674
  end
   rateTwoThirdsFbrCoupleAmt
 else 
  674
end
"
@rateTwoThirdsFbrCoupleAmt.save!

@rateSsiResourceLimit  = WebCalc.find_or_create_by_name('rateSsiResourceLimit')
@rateSsiResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateSsiResourceLimit = rate.RateSsiResourceLimit
  else
    rateSsiResourceLimit = 2000
  end
   rateSsiResourceLimit
 else 
  2000
end
"
@rateSsiResourceLimit.save!

@RateCoupleSsiResourceLimit  = WebCalc.find_or_create_by_name('RateCoupleSsiResourceLimit')
@RateCoupleSsiResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateCoupleSsiResourceLimit = rate.RateCoupleSsiResourceLimit
  else
    rateCoupleSsiResourceLimit = 3000
  end
   rateCoupleSsiResourceLimit
 else 
  2000
end
"
@RateCoupleSsiResourceLimit.save!


#RateCaidMostGroupsResourceLimit
@RateCaidMostGroupsResourceLimit  = WebCalc.find_or_create_by_name('RateCaidMostGroupsResourceLimit')
@RateCaidMostGroupsResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateCaidMostGroupsResourceLimit = rate.RateCaidMostGroupsResourceLimit
  else
    rateCaidMostGroupsResourceLimit = 2000
  end
  rateCaidMostGroupsResourceLimit
 else 
  2000
end
"
@RateCaidMostGroupsResourceLimit.save!


#RateCoupleCaidMostGroupsResourceLimit
@RateCoupleCaidMostGroupsResourceLimit  = WebCalc.find_or_create_by_name('RateCoupleCaidMostGroupsResourceLimit')
@RateCoupleCaidMostGroupsResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateCoupleCaidMostGroupsResourceLimit = rate.RateCoupleCaidMostGroupsResourceLimit
  else
    rateCoupleCaidMostGroupsResourceLimit = 3000
  end
  rateCoupleCaidMostGroupsResourceLimit
 else 
  3000
end
"
@RateCoupleCaidMostGroupsResourceLimit.save!


#VA_RateCaidRealEstateResourceLimit
@VA_RateCaidRealEstateResourceLimit  = WebCalc.find_or_create_by_name('VA_RateCaidRealEstateResourceLimit')
@VA_RateCaidRealEstateResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = VaMedicaidRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   vA_RateCaidRealEstateResourceLimit = rate.va_rate_caid_real_estate_resource_limit
  else
    vA_RateCaidRealEstateResourceLimit = 5000
  end
  vA_RateCaidRealEstateResourceLimit
 else 
  5000
end
"
@VA_RateCaidRealEstateResourceLimit.save!

#Do you have a home and property that has an equity value over the  ~VA_RateCaidLtcHomeEquityLimit~ LTC Home Equity Limit?

@VA_RateCaidLtcHomeEquityLimit  = WebCalc.find_or_create_by_name('VA_RateCaidLtcHomeEquityLimit')
@VA_RateCaidLtcHomeEquityLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = VaMedicaidRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   vA_RateCaidLtcHomeEquityLimit = rate.va_rate_caid_ltc_home_equity_limit
  else
    vA_RateCaidLtcHomeEquityLimit = 506000
  end
   vA_RateCaidLtcHomeEquityLimit
 else 
  506000
end
"
@VA_RateCaidLtcHomeEquityLimit.save!

#VA_RateCaidWorksResourceLimit
@VA_RateCaidWorksResourceLimit  = WebCalc.find_or_create_by_name('VA_RateCaidWorksResourceLimit')
@VA_RateCaidWorksResourceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = VaMedicaidRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   vA_RateCaidWorksResourceLimit = rate.va_rate_caid_works_resource_limit
  else
    vA_RateCaidWorksResourceLimit = 32545
  end
  vA_RateCaidWorksResourceLimit
 else 
  32545
end
"
@VA_RateCaidWorksResourceLimit.save!

#RateQwdiResouceLimit
@RateQwdiResouceLimit  = WebCalc.find_or_create_by_name('RateQwdiResouceLimit')
@RateQwdiResouceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateQwdiResouceLimit = rate.RateQwdiResouceLimit
  else
    rateQwdiResouceLimit = 4000
  end
   rateQwdiResouceLimit
 else 
  4000
end
"
@RateQwdiResouceLimit.save!


#RateCoupleQwdiResouceLimit
@RateCoupleQwdiResouceLimit  = WebCalc.find_or_create_by_name('RateCoupleQwdiResouceLimit')
@RateCoupleQwdiResouceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateCoupleQwdiResouceLimit = rate.RateCoupleQwdiResouceLimit
  else
    rateCoupleQwdiResouceLimit = 6000
  end
  rateCoupleQwdiResouceLimit
 else 
  6000
end
"
@RateCoupleQwdiResouceLimit.save!


#RateQmbSlmbQiResouceLimit
@RateQmbSlmbQiResouceLimit  = WebCalc.find_or_create_by_name('RateQmbSlmbQiResouceLimit')
@RateQmbSlmbQiResouceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateQmbSlmbQiResouceLimit = rate.RateQmbSlmbQiResouceLimit
  else
    rateQmbSlmbQiResouceLimit = 6680
  end
  rateQmbSlmbQiResouceLimit
 else 
  6680
end
"
@RateQmbSlmbQiResouceLimit.save!

#RateCoupleQmbSlmbQiResouceLimit
@RateCoupleQmbSlmbQiResouceLimit  = WebCalc.find_or_create_by_name('RateCoupleQmbSlmbQiResouceLimit')
@RateCoupleQmbSlmbQiResouceLimit.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
   rateQmbSlmbQiResouceLimit = rate.RateCoupleQmbSlmbQiResouceLimit
  else
    rateQmbSlmbQiResouceLimit = 10020
  end
  rateQmbSlmbQiResouceLimit
 else 
  10020
end
"
@RateCoupleQmbSlmbQiResouceLimit.save!

@rateVaMaxAuxiliaryGrantPd8  = WebCalc.find_or_create_by_name('rateVaMaxAuxiliaryGrantPd8')
@rateVaMaxAuxiliaryGrantPd8.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = VaMaxAuxiliaryGrantFacilityRate.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateVaMaxAuxiliaryGrantPd8 = rate.ag_max_payment_pd8
     else
       answer = 686
     end
  else 
    686
  end"
@rateVaMaxAuxiliaryGrantPd8.save!

#EXPRESSION: IF vA_CityCounty = Arlington OR Louden OR Prince William OR Fairfax OR Alexandria, THEN VA_RateMaxAuxGrantFaciltyRatePd8Amt, ELSE VA_RateMaxAuxGrantFaciltyRateElseAmt
@rateVaMaxAuxiliaryGrantElsewhere  = WebCalc.find_or_create_by_name('rateVaMaxAuxiliaryGrantElsewhere')
@rateVaMaxAuxiliaryGrantElsewhere.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = VaMaxAuxiliaryGrantFacilityRate.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateVaMaxAuxiliaryGrantElsewhere = rate.ag_max_payment_elsewhere
     else
       answer = 519
     end
  else 
    519
  end"
@rateVaMaxAuxiliaryGrantElsewhere.save!

#couplePd8
@rateVaMaxAuxiliaryGrantCouplePd8  = WebCalc.find_or_create_by_name('rateVaMaxAuxiliaryGrantCouplePd8')
@rateVaMaxAuxiliaryGrantCouplePd8.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = VaMaxAuxiliaryGrantFacilityRate.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateVaMaxAuxiliaryGrantCouplePd8 = rate.ag_couple_max_payment_pd8
     else
       answer = 1709
     end
  else 
    1709
  end"
@rateVaMaxAuxiliaryGrantCouplePd8.save!

#couple elsewhere
@rateVaMaxAuxiliaryGrantCoupleElsewhere  = WebCalc.find_or_create_by_name('rateVaMaxAuxiliaryGrantCoupleElsewhere')
@rateVaMaxAuxiliaryGrantCoupleElsewhere.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = VaMaxAuxiliaryGrantFacilityRate.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateVaMaxAuxiliaryGrantCoupleElsewhere = rate.ag_couple_max_payment_elsewhere
     else
       answer = 1375
     end
  else 
    1375
  end"
@rateVaMaxAuxiliaryGrantCoupleElsewhere.save!

@rateAgPersonalAllowance  = WebCalc.find_or_create_by_name('rateAgPersonalAllowance')
@rateAgPersonalAllowance.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = VaMaxAuxiliaryGrantFacilityRate.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.ag_personal_allowance
     else
       answer = 81
     end
  else 
    81
  end"
@rateAgPersonalAllowance.save!


@rateCaid_80percent_fpl_inc_limit_assist_unit_1  = WebCalc.find_or_create_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
@rateCaid_80percent_fpl_inc_limit_assist_unit_1.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_80percent_fpl_inc_limit_assist_unit_1
     else
       answer = 726
     end
  else 
    726
  end"
@rateCaid_80percent_fpl_inc_limit_assist_unit_1.save!

@rateCaid_80percent_fpl_inc_limit_assist_unit_2  = WebCalc.find_or_create_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_2')
@rateCaid_80percent_fpl_inc_limit_assist_unit_2.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_80percent_fpl_inc_limit_assist_unit_2
     else
       answer = 981
     end
  else 
    981
  end"
@rateCaid_80percent_fpl_inc_limit_assist_unit_2.save!

@rateCaid_qmb_inc_limit_assist_unit_1  = WebCalc.find_or_create_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
@rateCaid_qmb_inc_limit_assist_unit_1.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qmb_inc_limit_assist_unit_1
     else
       answer = 908
     end
  else 
    908
  end"
@rateCaid_qmb_inc_limit_assist_unit_1.save!

@rateCaid_qmb_inc_limit_assist_unit_2  = WebCalc.find_or_create_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
@rateCaid_qmb_inc_limit_assist_unit_2.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qmb_inc_limit_assist_unit_2
     else
       answer = 908
     end
  else 
    908
  end"
@rateCaid_qmb_inc_limit_assist_unit_2.save!

@rateCaid_slmb_inc_limit_assist_unit_1  = WebCalc.find_or_create_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
@rateCaid_slmb_inc_limit_assist_unit_1.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_slmb_inc_limit_assist_unit_1
     else
       answer = 1089
     end
  else 
    1089
  end"
@rateCaid_slmb_inc_limit_assist_unit_1.save!

@rateCaid_slmb_inc_limit_assist_unit_2  = WebCalc.find_or_create_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
@rateCaid_slmb_inc_limit_assist_unit_2.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_slmb_inc_limit_assist_unit_2
     else
       answer = 1471
     end
  else 
    1471
  end"
@rateCaid_slmb_inc_limit_assist_unit_2.save!

@rateCaid_qi_inc_limit_assist_unit_1  = WebCalc.find_or_create_by_name('rateCaid_qi_inc_limit_assist_unit_1')
@rateCaid_qi_inc_limit_assist_unit_1.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qi_inc_limit_assist_unit_1
     else
       answer = 1226
     end
  else 
    1226
  end"
@rateCaid_qi_inc_limit_assist_unit_1.save!

@rateCaid_qi_inc_limit_assist_unit_2  = WebCalc.find_or_create_by_name('rateCaid_qi_inc_limit_assist_unit_2')
@rateCaid_qi_inc_limit_assist_unit_2.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qi_inc_limit_assist_unit_2
     else
       answer = 1655
     end
  else 
    1655
  end"
@rateCaid_qi_inc_limit_assist_unit_2.save!

@rateCaid_qdwi_works_earn_inc_limit_assist_unit_1  = WebCalc.find_or_create_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_1')
@rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qdwi_works_earn_inc_limit_assist_unit_1
     else
       answer = 1815
     end
  else 
    1815
  end"
@rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.save!

@rateCaid_qdwi_works_earn_inc_limit_assist_unit_2  = WebCalc.find_or_create_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_2')
@rateCaid_qdwi_works_earn_inc_limit_assist_unit_2.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
     sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
     rate = MedicaidFplBasedIncomeLimit.find(:last, :conditions => ['start_date <= ?', sitDate])
     if !(rate.blank?) then
       rateAgPersonalAllowance = rate.caid_qdwi_works_earn_inc_limit_assist_unit_2
     else
       answer = 2452
     end
  else 
    2452
  end"
@rateCaid_qdwi_works_earn_inc_limit_assist_unit_2.save!


@rateLtcCaidSpousalResourceStandard  = WebCalc.find_or_create_by_name('rateLtcCaidSpousalResourceStandard')
@rateLtcCaidSpousalResourceStandard.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateLtcCaidSpousalResourceStandard = rate.RateLtcCaidSpousalResourceStandard
  else
    rateLtcCaidSpousalResourceStandard = 21912
  end
   rateLtcCaidSpousalResourceStandard
 else 
  21912
end
"
@rateLtcCaidSpousalResourceStandard.save!

#rateLtcCaidSpousalMaxResourceStandard
@rateLtcCaidSpousalMaxResourceStandard  = WebCalc.find_or_create_by_name('rateLtcCaidSpousalMaxResourceStandard')
@rateLtcCaidSpousalMaxResourceStandard.operation = "
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:last, :conditions => ['start_date <= ?', sitDate])
  if !(rate.blank?) then
    rateLtcCaidSpousalMaxResourceStandard = rate.RateLtcCaidSpousalMaxResourceStandard
  else
    rateLtcCaidSpousalMaxResourceStandard = 109560
  end
   rateLtcCaidSpousalMaxResourceStandard
 else 
  109560
end
"
@rateLtcCaidSpousalMaxResourceStandard.save!

#xcc
#MedicaidFplBasedIncomeLimits.find_or_create_by_start_date(Date.new(2011,01,01),
#M                     :caid_80percent_fpl_inc_limit_assist_unit_1    =>  726.00,
#M                     :caid_80percent_fpl_inc_limit_assist_unit_2    =>  981.00,
#M                     :caid_qmb_inc_limit_assist_unit_1              =>  908.00,
#M                     :caid_qmb_inc_limit_assist_unit_2              => 1226.00,
#M                     :caid_slmb_inc_limit_assist_unit_1             => 1089.00
#M                     :caid_slmb_inc_limit_assist_unit_2             => 1471.00,
#M                     :caid_qi_inc_limit_assist_unit_1               => 1226.00,
#M                     :caid_qi_inc_limit_assist_unit_2               => 1655.00,
#M                     :caid_qdwi_works_earn_inc_limit_assist_unit_1  => 1815.00,
#M                     :caid_qdwi_works_earn_inc_limit_assist_unit_2  => 2452.00)


#items from WebVaCalc here to avoid ordering/presedence problem
#This needed to be moved above due to dependency
#56	2340	IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = SSI Recipient, THEN r_VA_CaidCovGroupSsiRecipient = TRUE, ELSE FALSE 	
#r_VA_CaidCovGroupSsiRecipient
#=IF(OR(E$314="SSI Recipient";E$315="SSI Recipient");1;0)
#314 vA_CaidGetCoveredGroup
#315 vA_CaidApplyCoveredGroup
@r_VA_CaidCovGroupSsiRecipient  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupSsiRecipient')
@r_VA_CaidCovGroupSsiRecipient.operation = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if vA_CaidGetCoveredGroup == 'SSI Recipient' || vA_CaidApplyCoveredGroup == 'SSI Recipient' then
   true
else
  false
end
"
@r_VA_CaidCovGroupSsiRecipient.save!


#56	2350	IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = SSI Recipient, THEN r_VA_CaidSpouseCovGroupSsiRecipient = TRUE, ELSE FALSE 	
#r_VA_CaidSpouseCovGroupSsiRecipient
@r_VA_CaidSpouseCovGroupSsiRecipient  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupSsiRecipient')
@r_VA_CaidSpouseCovGroupSsiRecipient.operation = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if vA_caidSpouseGetCoveredGroup == 'SSI Recipient' || vA_caidSpouseApplyCoveredGroup == 'SSI Recipient' then
   true
else
  false
end
"
@r_VA_CaidSpouseCovGroupSsiRecipient.save!


#More WebVaCalc added Sept 29 2011
#r_VA_CaidUserSpouseBothGetOrApply
@r_VA_CaidUserSpouseBothGetOrApply  = WebCalc.find_or_create_by_name('r_VA_CaidUserSpouseBothGetOrApply')
#IF (caidGet OR caidApply = YES) AND (caidSpouseGet OR caidSpouseApply = YES), THEN r_VA_CaidUserSpouseBothGetOrApply = YES
@r_VA_CaidUserSpouseBothGetOrApply.operation = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
if (caidGet == 'Yes' || caidApply == 'Yes') && (caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes')
then 
   true
else
  false
end
"
@r_VA_CaidUserSpouseBothGetOrApply.save!

#another WebVaCalc
#r_VA_CaidUserSpouseSameCovGroup
@r_VA_CaidUserSpouseSameCovGroup  = WebCalc.find_or_create_by_name('r_VA_CaidUserSpouseSameCovGroup')
#IF r_VA_CaidUserSpouseBothGetOrApply = YES 
#AND (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) [excluding nulls], 
#THEN r_VA_CaidUserSpouseSameCovGroup = TRUE, ELSE FALSE
@r_VA_CaidUserSpouseSameCovGroup.operation = "
r_VA_CaidUserSpouseBothGetOrApply = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if (((vA_CaidGetCoveredGroup == vA_caidSpouseGetCoveredGroup && !(vA_CaidGetCoveredGroup.blank?)) || 
   ( vA_CaidGetCoveredGroup == vA_caidSpouseApplyCoveredGroup && !(vA_CaidGetCoveredGroup.blank?)) || 
   (vA_CaidApplyCoveredGroup == vA_caidSpouseGetCoveredGroup && !(vA_CaidApplyCoveredGroup.blank?)) || 
   (vA_CaidApplyCoveredGroup == vA_caidSpouseApplyCoveredGroup && !(vA_CaidApplyCoveredGroup.blank?))) &&
   (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true) then
  true
else 
  false
end
"
@r_VA_CaidUserSpouseSameCovGroup.save!

#WebVaCalc 2570
#Calculate if covered group for user and covered group for spouse is PSDC, PADC, or 1619b
#IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = Protected SSI Disabled Child, THEN r_VA_CaidCovGroupPsdc = TRUE, ELSE FALSE 
#r_VA_CaidCovGroupPsdc
 @r_VA_CaidCovGroupPsdc  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupPsdc')
 #IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = Protected SSI Disabled Child, THEN r_VA_CaidCovGroupPsdc = TRUE, ELSE FALSE 
 @r_VA_CaidCovGroupPsdc.operation = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if (vA_CaidGetCoveredGroup == 'Protected SSI Disabled Child'  || vA_CaidApplyCoveredGroup == 'Protected SSI Disabled Child') then
  true
else
  false
end
 "
 @r_VA_CaidCovGroupPsdc.save!

#WebVaCalc 2580 A bit out of order but needed here
# IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = Protected SSI Disabled Child, THEN r_VA_CaidSpouseCovGroupPsdc = TRUE, ELSE FALSE 	
#r_VA_CaidSpouseCovGroupPsdc
 @r_VA_CaidSpouseCovGroupPsdc  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupPsdc')
 @r_VA_CaidSpouseCovGroupPsdc.operation = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if (vA_caidSpouseGetCoveredGroup == 'Protected SSI Disabled Child'  || vA_caidSpouseApplyCoveredGroup == 'Protected SSI Disabled Child') then
  true
else
  false
end
 "
 @r_VA_CaidSpouseCovGroupPsdc.save!

#WebVaCalc 2590
# IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = Protected Adult Disabled Child, THEN r_VA_CaidCovGroupPadc = TRUE, ELSE FALSE 	
#r_VA_CaidCovGroupPadc
 @r_VA_CaidCovGroupPadc  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupPadc')
 @r_VA_CaidCovGroupPadc.operation = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if (vA_CaidGetCoveredGroup == 'Protected Adult Disabled Child'  || vA_CaidApplyCoveredGroup == 'Protected Adult Disabled Child') then
  true
else
  false
end
"
 @r_VA_CaidCovGroupPadc.save!

#webVaCalc 2600
# IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = Protected Adult Disabled Child, THEN r_VA_CaidSpouseCovGroupPadc = TRUE, ELSE FALSE 	
#r_VA_CaidSpouseCovGroupPadc
@r_VA_CaidSpouseCovGroupPadc  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupPadc')
@r_VA_CaidSpouseCovGroupPadc.operation = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if (vA_caidSpouseGetCoveredGroup == 'Protected Adult Disabled Child'  || vA_caidSpouseApplyCoveredGroup == 'Protected Adult Disabled Child') then
  true
else
  false
end
"
@r_VA_CaidSpouseCovGroupPadc.save!

#WebVaCalc 2610
# IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = 1619b (Medicaid While Working), THEN r_VA_CaidCovGroup1619b = TRUE, ELSE FALSE 	
#r_VA_CaidCovGroup1619b
@r_VA_CaidCovGroup1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroup1619b')
@r_VA_CaidCovGroup1619b.operation = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if (vA_CaidGetCoveredGroup == 'c'  || vA_CaidApplyCoveredGroup == '1619b (Medicaid While Working)') then
  true
else
  false
end
"
@r_VA_CaidCovGroup1619b.save!

#WebVaCalc 2620
#IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = 1619b (Medicaid While Working), THEN r_VA_CaidSpouseCovGroup1619b = TRUE, ELSE FALSE 	
#r_VA_CaidSpouseCovGroup1619b
#Nov 4 review
#IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = 1619b (Medicaid While Working), THEN r_VA_CaidSpouseCovGroup1619b = TRUE, ELSE FALSE 
#=IF(OR(E331="1619b (Medicaid While Working)";E332="1619b (Medicaid While Working)");1;0)
#331 vA_caidSpouseGetCoveredGroup
#332 vA_caidSpouseApplyCoveredGroup
@r_VA_CaidSpouseCovGroup1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroup1619b')
@r_VA_CaidSpouseCovGroup1619b.operation = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if (vA_caidSpouseGetCoveredGroup == '1619b (Medicaid While Working)'  || vA_caidSpouseApplyCoveredGroup == '1619b (Medicaid While Working)') then
  true
else
  false
end
"
@r_VA_CaidSpouseCovGroup1619b.save!

#WebVaCalc 2630                                                                             r_VA_CaidCovGroupPsdcPadc1619b
#IF (r_VA_CaidCovGroupPsdc OR r_VA_CaidCovGroupPadc OR r_VA_CaidCovGroup1619b) = TRUE, THEN r_VA_CaidCovGroupPsdcPadc1619b = TRUE, ELSE FALSE	
#r_VA_CaidCovGroupPsdcPadc1619b
#Nov 2 review
#IF (r_VA_CaidCovGroupPsdc OR r_VA_CaidCovGroupPadc OR r_VA_CaidCovGroup1619b) = TRUE, THEN r_VA_CaidCovGroupPsdcPadc1619b = TRUE, ELSE FALSE

#Nov 8 2011 review using WBk 58   Name change too from r_VA_CaidCovGroupPsdcPadc1619b to  r_VA_CaidCovGroupSsiPsdcPadc1619b
#56 58	2630	IF (r_VA_CaidCovGroupSsiRecipient OR r_VA_CaidCovGroupPsdc OR r_VA_CaidCovGroupPadc OR r_VA_CaidCovGroup1619b) = TRUE, THEN r_VA_CaidCovGroupSsiPsdcPadc1619b = TRUE, ELSE FALSE	
#r_VA_CaidCovGroupSsiPsdcPadc1619b
#IF (r_VA_CaidCovGroupSsiRecipient OR r_VA_CaidCovGroupPsdc OR r_VA_CaidCovGroupPadc OR r_VA_CaidCovGroup1619b) = TRUE, THEN r_VA_CaidCovGroupSsiPsdcPadc1619b = TRUE, ELSE FALSE
#=IF(OR(E347=1;E349=1;E351=1;E353=1);1;0)
#347 r_VA_CaidCovGroupSsiRecipient
#349 r_VA_CaidCovGroupPsdc
#351 r_VA_CaidCovGroupPadc
#353 r_VA_CaidCovGroup1619b
@r_VA_CaidCovGroupSsiPsdcPadc1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupSsiPsdcPadc1619b')
@r_VA_CaidCovGroupSsiPsdcPadc1619b.operation = "
r_VA_CaidCovGroupSsiRecipient = WebCalc.find_by_name('r_VA_CaidCovGroupSsiRecipient')
r_VA_CaidCovGroupPsdc         = WebCalc.find_by_name('r_VA_CaidCovGroupPsdc')
r_VA_CaidCovGroupPadc         = WebCalc.find_by_name('r_VA_CaidCovGroupPadc')
r_VA_CaidCovGroup1619b        = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
if ((r_VA_CaidCovGroupSsiRecipient.calculate manager) == true || (r_VA_CaidCovGroupPsdc.calculate manager) == true  || (r_VA_CaidCovGroupPadc.calculate manager) == true || (r_VA_CaidCovGroup1619b.calculate manager) == true) then
  true
else
  false
end
"
@r_VA_CaidCovGroupSsiPsdcPadc1619b.save!

#WebVaCalc 2640
#IF (r_VA_CaidSpouseCovGroupPsdc OR r_VA_CaidSpouseCovGroupPadc OR r_VA_CaidSpouseCovGroup1619b) = TRUE, THEN r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE, ELSE FALSE	
#r_VA_CaidSpouseCovGroupPsdcPadc1619b

#Nov 8 2011 change Includes name change New name r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b  Old name r_VA_CaidSpouseCovGroupPsdcPadc1619b
#56 58	2640	IF (r_VA_CaidSpouseCovGroupSsiRecipient OR r_VA_CaidSpouseCovGroupPsdc OR r_VA_CaidSpouseCovGroupPadc OR r_VA_CaidSpouseCovGroup1619b) = TRUE, THEN r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE, ELSE FALSE	
#r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b
#=IF(OR(E348=1;E350=1;E352=1;E354=1);1;0)
#348 r_VA_CaidSpouseCovGroupSsiRecipient
#350 r_VA_CaidSpouseCovGroupPsdc
#352 r_VA_CaidSpouseCovGroupPadc
#354 r_VA_CaidSpouseCovGroup1619b
@r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b')
@r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b.operation = "
r_VA_CaidSpouseCovGroupSsiRecipient = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiRecipient')
r_VA_CaidSpouseCovGroupPsdc         = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPsdc')
r_VA_CaidSpouseCovGroupPadc         = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPadc')
r_VA_CaidSpouseCovGroup1619b        = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
if ((r_VA_CaidSpouseCovGroupSsiRecipient.calculate manager) == true || (r_VA_CaidSpouseCovGroupPsdc.calculate manager) == true  || (r_VA_CaidSpouseCovGroupPadc.calculate manager) == true || (r_VA_CaidSpouseCovGroup1619b.calculate manager) == true) then
  true
else
  false
end
"
@r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b.save!

##
#continue with WebVaCalcs here

#Bob would like to change 'true' to a boolean true but its too hard to trace all the dependencies in all of the files, maybe later, Hopefully Bob did this on Nov 4 2011
@r_SsdiSgaExceeded  = WebCalc.find_or_create_by_name('r_SsdiSgaExceeded')
#r_SsdiSgaExceeded = IF (ssdiEarnAmt - sgaIrweAmt - subsidyEmpSupAmt - subsidyWkDutiesReducAmt) > r_SgaAmt, THEN TRUE, ELSE FALSE
##=IF((E20-E21-E22-E23)>E24;TRUE();FALSE())
##20 ssdiEarnAmt
##21 sgaIrweAmt
##22 subsidyEmpSupAmt
##23 subsidyWkDutiesReducAmt
##24 r_SgaAmt
#ssdiEarnAmt = (WebCalc.find_by_name(manager.'nssdiEarnAmt'))
@r_SsdiSgaExceeded.operation = "
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt') 
sgaIrweAmt = manager.get_answer_by_question_name('sgaIrweAmt') 
subsidyEmpSupAmt = manager.get_answer_by_question_name('subsidyEmpSupAmt') 
subsidyWkDutiesReducAmt = manager.get_answer_by_question_name('subsidyWkDutiesReducAmt') 
r_SgaAmt = WebCalc.find_by_name('r_SgaAmt')
workVar = Float(ssdiEarnAmt.to_f - sgaIrweAmt.to_f - subsidyEmpSupAmt.to_f - subsidyWkDutiesReducAmt.to_f)
if (workVar > Float(r_SgaAmt.calculate manager)) then
   true
else
  false
end
"
@r_SsdiSgaExceeded.save!

#320	Calculate if SSDI Cash Payment Stops	
#330	r_SsdiBenefitStops = IF r_SsdiSgaExceeded = TRUE AND twpComplete = Y, THEN TRUE, ELSE FALSE	r_SsdiBenefitStops
#=IF(AND(E32=TRUE();E31="YES");TRUE();FALSE())
#e32 r_SsdiSgaExceeded
#e31 twpComplete
#r_SsdiBenefitStops
@r_SsdiBenefitStops  = WebCalc.find_or_create_by_name('r_SsdiBenefitStops')
@r_SsdiBenefitStops.operation = "
r_SsdiSgaExceeded = WebCalc.find_by_name('r_SsdiSgaExceeded')
twpComplete = manager.get_answer_by_question_name('twpComplete')
if  (twpComplete == 'Yes') && ((r_SsdiSgaExceeded.calculate manager) == true) then 
  true
else
  false
end
"
@r_SsdiBenefitStops.save!

#25	350	r_SsdiEseCeases 
#= IF r_SsdiSgaExceeded = TRUE AND twpComplete = Y AND BlindSkillsBefore55 <> Y AND BlindSkillsBeforeOnset <> Y, THEN TRUE, ELSE FALSE	
#=IF(AND(E32=TRUE();E31="YES";E30<>"YES";E29<>"YES");TRUE();FALSE())
#32 r_SsdiSgaExceeded
#31 twpComplete
#30 blindSkillsBeforeOnset
#29 blindSkillsBefore55
#
@r_SsdiEseCeases  = WebCalc.find_or_create_by_name('r_SsdiEseCeases')
@r_SsdiEseCeases.operation = "
r_SsdiSgaExceeded = WebCalc.find_by_name('r_SsdiSgaExceeded')
twpComplete = manager.get_answer_by_question_name('twpComplete')
blindSkillsBeforeOnset = manager.get_answer_by_question_name('blindSkillsBeforeOnset')
blindSkillsBefore55 = manager.get_answer_by_question_name('blindSkillsBefore55')
if (twpComplete == 'Yes' && blindSkillsBeforeOnset != 'Yes' && blindSkillsBefore55 != 'Yes' && ((r_SsdiSgaExceeded.calculate manager) == true)) then
    true
  else
    false
end  
"
@r_SsdiEseCeases.save!

#25	470	r_SsdiPayNoAdjustAmt = IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE MAX of (ssdiAmtSelfFull OR ssdiAmtOtherFull)	
#=IF(E46=TRUE();0;MAX(E39;E40))
#e46 r_SsdiBenefitStops
#e39 ssdiAmtSelfFull
#e40 ssdiAmtOtherFull

@r_SsdiPayNoAdjustAmt  = WebCalc.find_or_create_by_name('r_SsdiPayNoAdjustAmt')
@r_SsdiPayNoAdjustAmt.operation = "
r_SsdiBenefitStops = WebCalc.find_by_name('r_SsdiBenefitStops')
ssdiAmtSelfFull  = manager.get_answer_by_question_name('ssdiAmtSelfFull')
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull')
if ((r_SsdiBenefitStops.calculate manager) == true) then
   0
else
  (ssdiAmtSelfFull.to_f + ssdiAmtOtherFull.to_f)
end
"
@r_SsdiPayNoAdjustAmt.save!

#25	480	r_SsdiPayCareBAdjustAmt = 
#IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE IF careBDeduct = Y, THEN r_SsdiPayNoAdjustAmt - RateCareBPremium, ELSE r_SsdiPayNoAdjustAmt	
@r_SsdiPayCareBAdjustAmt  = WebCalc.find_or_create_by_name('r_SsdiPayCareBAdjustAmt')
#=IF(E46=TRUE();0;IF(E41="YES";E48-E42;E48))
#e46 r_SsdiBenefitStops
#41 careBDeduct
#48 r_SsdiPayNoAdjustAmt
#42 RateCareBPremium
#r_SsdiPayCareBAdjustAmt = IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE IF careBDeduct = Y, THEN r_SsdiPayNoAdjustAmt - careBPremiumAmt, ELSE r_SsdiPayNoAdjustAmt
@r_SsdiPayCareBAdjustAmt.operation = "
r_SsdiBenefitStops = WebCalc.find_by_name('r_SsdiBenefitStops')
careBDeduct = manager.get_answer_by_question_name('careBDeduct')
r_SsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
if ((r_SsdiBenefitStops.calculate manager) == true)  then
  0
elsif (careBDeduct == 'Yes') then
    careBPremiumAmt = manager.get_answer_by_question_name('careBPremiumAmt')
    (Float(r_SsdiPayNoAdjustAmt.calculate manager) - careBPremiumAmt.to_f)
else
   Float(r_SsdiPayNoAdjustAmt.calculate manager)
end
"
@r_SsdiPayCareBAdjustAmt.save!

#25	490	r_SsdiPayWcOrPdbAdjustAmt = IF r_SsdiBenefitStops = TRUE, 0, ELSE r_SsdiPayCareBAdjustAmt - ssdiWcOrPdbDecreaseAmt	
# =IF(E46=TRUE();0;E49-E43)
#46 r_SsdiBenefitStops
#49 r_SsdiPayCareBAdjustAmt
#43 ssdiWcOrPdbDecreaseAmt ssdiWcOrPdbDecreaseAmt = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')  can't use need to convert to float if not nill Hoping to do this in one spot once

#55 review
#25 55	490	r_SsdiPayWcOrPdbAdjustAmt = IF r_SsdiBenefitStops = TRUE, 0, ELSE r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt	
#r_SsdiPayWcOrPdbAdjustAmt	0.00	Here SSDI is adjusted for any Workers Comp or Public disability Benefit that reduces the SSDI payment amount.  We start with the CarB adjusted amount because it takes into account whether or not the premium is deducted.  We may not need this calc.  We can delete later if so.
#56 review
#r_SsdiPayWcOrPdbAdjustAmt = IF r_SsdiBenefitStops = TRUE, 0, ELSE r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt
#=IF(E58=1;0;E60-E55)
@r_SsdiPayWcOrPdbAdjustAmt  = WebCalc.find_or_create_by_name('r_SsdiPayWcOrPdbAdjustAmt')
@r_SsdiPayWcOrPdbAdjustAmt.operation = "
r_SsdiBenefitStops = WebCalc.find_by_name('r_SsdiBenefitStops')
r_SsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
ssdiWcOrPdbDecreaseAmt = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')
if (r_SsdiBenefitStops.calculate manager) == true then
   0
else
   (Float(r_SsdiPayNoAdjustAmt.calculate manager) - ssdiWcOrPdbDecreaseAmt.to_f)
end
"
@r_SsdiPayWcOrPdbAdjustAmt.save!

#25 500	r_SsdiPayOverUnderAdjustAmt = IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SsdiPayCareBAdjustAmt + ssdiUnderPayIncreaseAmt - ssdiOverPayDecreaseAmt	
#=IF(E46=TRUE();0;E49+E44-E45)
#46 r_SsdiBenefitStops
#49 r_SsdiPayCareBAdjustAmt
#44 ssdiUnderPayIncreaseAmt
#45 ssdiOverPayDecreaseAmt
@r_SsdiPayOverUnderAdjustAmt  = WebCalc.find_or_create_by_name('r_SsdiPayOverUnderAdjustAmt')
@r_SsdiPayOverUnderAdjustAmt.operation = "
r_SsdiBenefitStops = WebCalc.find_by_name('r_SsdiBenefitStops')
r_SsdiPayCareBAdjustAmt = WebCalc.find_by_name('r_SsdiPayCareBAdjustAmt')
ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')  
ssdiOverPayDecreaseAmt = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')  
if (r_SsdiBenefitStops.calculate manager) == true then
   0
else
   (Float(r_SsdiPayCareBAdjustAmt.calculate manager) + ssdiUnderPayIncreaseAmt.to_f - ssdiOverPayDecreaseAmt.to_f)
end
"
@r_SsdiPayOverUnderAdjustAmt.save!

# 25 510	r_SsdiPayAllAdjustAmt = IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SsdiPayCareBAdjustAmt - ssdiWcOrPdbDecreaseAmt + ssdiUnderPayIncreaseAmt - ssdiOverPayDecreaseAmt	
#=IF(E46=TRUE();0;E49-E43+E44-E45)
#46 r_SsdiBenefitStops
#49 r_SsdiPayCareBAdjustAmt
#43 ssdiWcOrPdbDecreaseAmt = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')  can't use need to convert to float if not nill Hoping to do this in one spot once
#44 ssdiUnderPayIncreaseAmt
#45 ssdiOverPayDecreaseAmt
@r_SsdiPayAllAdjustAmt  = WebCalc.find_or_create_by_name('r_SsdiPayAllAdjustAmt')
@r_SsdiPayAllAdjustAmt.operation = "
r_SsdiBenefitStops      = WebCalc.find_by_name('r_SsdiBenefitStops')
r_SsdiPayCareBAdjustAmt = WebCalc.find_by_name('r_SsdiPayCareBAdjustAmt')
ssdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')  
ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')  
ssdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')  
if (r_SsdiBenefitStops.calculate manager) == true then
  0
else
   (Float(r_SsdiPayCareBAdjustAmt.calculate manager) - ssdiWcOrPdbDecreaseAmt.to_f + ssdiUnderPayIncreaseAmt.to_f - ssdiOverPayDecreaseAmt.to_f)
end
"
@r_SsdiPayAllAdjustAmt.save!

#25 515	r_SsdiPayAllAdjustAmt = IF r_SsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt + ssdiUnderPayIncreaseAmt - ssdiOverPayDecreaseAmt	
#=IF(E46=TRUE();0;E48-E43+E44-E45)
#46 r_SsdiBenefitStops
#48 r_SsdiPayNoAdjustAmt
#43 ssdiWcOrPdbDecreaseAmt = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')  can't use need to convert to float if not nill Hoping to do this in one spot once
#44 ssdiUnderPayIncreaseAmt
#45 ssdiOverPayDecreaseAmt
@r_SsdiPayAllAdjustButCareBAmt  = WebCalc.find_or_create_by_name('r_SsdiPayAllAdjustButCareBAmt')
@r_SsdiPayAllAdjustButCareBAmt.operation = "
r_SsdiBenefitStops      = WebCalc.find_by_name('r_SsdiBenefitStops')
r_SsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
ssdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')  
ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')  
ssdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')  
if (r_SsdiBenefitStops.calculate manager) == true then
  0
else
   (Float(r_SsdiPayNoAdjustAmt.calculate manager) - ssdiWcOrPdbDecreaseAmt.to_f + ssdiUnderPayIncreaseAmt.to_f - ssdiOverPayDecreaseAmt.to_f)
end
"
@r_SsdiPayAllAdjustButCareBAmt.save!

#Bob decided to put WebVaCalcs "the Determine ABD Individual's Unearned Income Amount" section here due to dependencies
#WebVaCalc 43	340	Individual's Unearned Income amount 	unearnAmt
#=MAX(0;E31-E32+E33-E34+E35)
#31 r_SsdiPayNoAdjustAmt
#32 ssdiWcOrPdbDecreaseAmt
#33 ssdiUnderPayIncreaseAmt
#34 ssdiOverPayDecreaseAmt
#35 unearnAmt
 @r_VA_CaidUnearnNoDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUnearnNoDeemAmt')
  @r_VA_CaidUnearnNoDeemAmt.operation = "
 r_SsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
 ssdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')
 ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')
 ssdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')
 unearnAmt               = manager.get_answer_by_question_name('unearnAmt') 
 Float(r_SsdiPayNoAdjustAmt.calculate manager) + ssdiUnderPayIncreaseAmt.to_f + unearnAmt.to_f - ssdiWcOrPdbDecreaseAmt.to_f - ssdiOverPayDecreaseAmt.to_f
"
@r_VA_CaidUnearnNoDeemAmt.save!

#WebVaCalc 38	410	Individual's Resulting Deemed Income	r_VA_CaidDeemedAmt
#=SUM(E38:E41)
#vA_CaidParDeemAmt
#vA_CaidSpouseDeemUnearnAmt
@r_VA_CaidDeemedAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidDeemedAmt')
@r_VA_CaidDeemedAmt.operation = "
vA_CaidParDeemAmt = manager.get_answer_by_question_name('vA_CaidParDeemAmt')
vA_CaidSpouseDeemUnearnAmt = manager.get_answer_by_question_name('vA_CaidSpouseDeemUnearnAmt') 
vA_CaidParDeemAmt.to_f + vA_CaidSpouseDeemUnearnAmt.to_f
"
@r_VA_CaidDeemedAmt.save!

#WebVaCalc 38	430	Individual's Unearned Income	r_VA_CaidUnearnAmt
#=E37+E42
#37 r_VA_CaidUnearnNoDeemAmt
#42 r_VA_CaidDeemedAmt
@r_VA_CaidUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUnearnAmt')
@r_VA_CaidUnearnAmt.operation = "
r_VA_CaidUnearnNoDeemAmt = WebCalc.find_by_name('r_VA_CaidUnearnNoDeemAmt')
r_VA_CaidUnearnNoDeemAmt = Float(r_VA_CaidUnearnNoDeemAmt.calculate manager)
r_VA_CaidDeemedAmt = WebCalc.find_by_name('r_VA_CaidDeemedAmt')
r_VA_CaidDeemedAmt = Float(r_VA_CaidDeemedAmt.calculate manager)
r_VA_CaidUnearnNoDeemAmt + r_VA_CaidDeemedAmt
"
@r_VA_CaidUnearnAmt.save!

#WebVaCalc 38	490	Individual's Gross Earned Income	r_VA_CaidEarnAmt
#=SUM(E46:E49)
#ssiOrCaidEarnAmt
#vA_CaidSpouseDeemEarnAmt
@r_VA_CaidEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidEarnAmt')
@r_VA_CaidEarnAmt.operation = "
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
vA_CaidSpouseDeemEarnAmt = manager.get_answer_by_question_name('vA_CaidSpouseDeemEarnAmt') 
ssiOrCaidEarnAmt.to_f + vA_CaidSpouseDeemEarnAmt.to_f
"
@r_VA_CaidEarnAmt.save!

#WebVaCalc 38	560	Individual's Gross Income	r_VA_CaidGrossIncomeAmt
#=SUM(E52:E56)
#r_VA_CaidUnearnAmt
#r_VA_CaidEarnAmt
@r_VA_CaidGrossIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidGrossIncomeAmt')
@r_VA_CaidGrossIncomeAmt.operation = "
r_VA_CaidUnearnAmt = WebCalc.find_by_name('r_VA_CaidUnearnAmt')
r_VA_CaidEarnAmt   = WebCalc.find_by_name('r_VA_CaidEarnAmt')
Float(r_VA_CaidUnearnAmt.calculate manager) + Float(r_VA_CaidEarnAmt.calculate manager)
"
@r_VA_CaidGrossIncomeAmt.save!

# 25 610	 r_ActualSsdiPayNotEqualNoAdjust = IF Current/What-If Button = Current AND ssdiActualAmt <> r_SsdiPayNoAdjustAmt THEN TRUE, ELSE FALSE	
#r_ActualSsdiPayNotEqualNoAdjust
#=IF(AND(E56="Current";E57<>E58);TRUE();FALSE())
#56 Current/What-If Button
#57 ssdiActualAmt  manager.get_answer_by_question_name('ssdiActualAmt') 
#58 r_SsdiPayNoAdjustAmt
#Bob is ignoring whatIf/current distinctions for now
#Nov 18 2011 edit 
@r_ActualSsdiPayNotEqualNoAdjust  = WebCalc.find_or_create_by_name('r_ActualSsdiPayNotEqualNoAdjust')
@r_ActualSsdiPayNotEqualNoAdjust.operation = "
ssdiActualAmt        = manager.get_answer_by_question_name('ssdiActualAmt')  
r_SsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
if (!manager.situation.what_if? && ssdiActualAmt.to_f != Float(r_SsdiPayNoAdjustAmt.calculate manager)) then
  true
else
  false
end
"
@r_ActualSsdiPayNotEqualNoAdjust.save!

#25	620	r_ActualSsdiPayNotEqualCareBAdjust = IF Current/What-If Button = Current AND ssdiActualAmt <> r_SsdiPayCareBAdjustAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsdiPayNotEqualCareBAdjust
#=IF(AND(E56="Current";E57<>E59);TRUE();FALSE())
#56 Current/What-If Button  Bob again ignores current/WhatIf implications
#57 ssdiActualAmt  manager.get_answer_by_question_name('ssdiActualAmt') 
#59 r_SsdiPayCareBAdjustAmt
@r_ActualSsdiPayNotEqualCareBAdjust  = WebCalc.find_or_create_by_name('r_ActualSsdiPayNotEqualCareBAdjust')
@r_ActualSsdiPayNotEqualCareBAdjust.operation = "
ssdiActualAmt           = manager.get_answer_by_question_name('ssdiActualAmt')  
r_SsdiPayCareBAdjustAmt = WebCalc.find_by_name('r_SsdiPayCareBAdjustAmt')
if (!manager.situation.what_if? && ssdiActualAmt.to_f != Float(r_SsdiPayCareBAdjustAmt.calculate manager)) then
  true
else
  false
end
"
@r_ActualSsdiPayNotEqualCareBAdjust.save!

#25	630	 r_ActualSsdiPayNotEqualWcOrPbdAdjust = IF Current/What-If Button = Current AND ssdiActualAmt <> r_SsdiPayWcOrPdbAdjustAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsdiPayNotEqualWcOrPbdAdjust
#=IF(AND(E56="Current";E57<>E60);TRUE();FALSE())
#56 Current/What-If Button  Bob again ignores current/WhatIf implications
#57 ssdiActualAmt  manager.get_answer_by_question_name('ssdiActualAmt')
#60 r_SsdiPayWcOrPdbAdjustAmt
@r_ActualSsdiPayNotEqualWcOrPbdAdjust  = WebCalc.find_or_create_by_name('r_ActualSsdiPayNotEqualWcOrPbdAdjust')
@r_ActualSsdiPayNotEqualWcOrPbdAdjust.operation = "
ssdiActualAmt             = manager.get_answer_by_question_name('ssdiActualAmt')  
r_SsdiPayWcOrPdbAdjustAmt = WebCalc.find_by_name('r_SsdiPayWcOrPdbAdjustAmt')
if (!manager.situation.what_if? && ssdiActualAmt.to_f != Float(r_SsdiPayWcOrPdbAdjustAmt.calculate manager)) then
   true
else
  false
end
"
@r_ActualSsdiPayNotEqualWcOrPbdAdjust.save!

#25	640	r_ActualSsdiPayNotEqualAllAdjust = IF Current/What-If Button = Current AND ssdiActualAmt <> r_SsdiPayAllAdjustAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsdiPayNotEqualAllAdjust
#=IF(AND(E56="Current";E57<>E62);TRUE();FALSE())
#56 Current/What-If Button  Bob again ignores current/WhatIf implications
#57 ssdiActualAmt  manager.get_answer_by_question_name('ssdiActualAmt')
#62 r_SsdiPayAllAdjustAmt
@r_ActualSsdiPayNotEqualAllAdjust  = WebCalc.find_or_create_by_name('r_ActualSsdiPayNotEqualAllAdjust')
@r_ActualSsdiPayNotEqualAllAdjust.operation = "
ssdiActualAmt = manager.get_answer_by_question_name('ssdiActualAmt')  
r_SsdiPayAllAdjustAmt = WebCalc.find_by_name('r_SsdiPayAllAdjustAmt')
if (!manager.situation.what_if? && ssdiActualAmt.to_f != Float(r_SsdiPayAllAdjustAmt.calculate manager)) then
  true
else
  false
end
"
@r_ActualSsdiPayNotEqualAllAdjust.save!

#25	730	r_SpouseSgaAmt = IF spouseDisability = Y AND spouseBlind = Y, THEN rateSgaBlindAmt, ELSE IF r_SpouseSgaAmt = IF spouseDisability = Y AND spouseBlind = N, THEN rateSgaDisabledAmt, ELSE 0	
#r_SpouseSgaAmt
#=IF(AND(E73="YES";E71="YES");E72;IF(AND(E73="YES";E71="NO");E74;0))
#e73 spouseDisability
#e71 spouseBlind
#e72 rateSgaBlindAmt
#e74 rateSgaDisabledAmt
#Note Bob is not following the workbook due to a hicup, need to review afrer DR makes a corrections
# NOte 2 need to adjust reading of rate table to reflect correct sit date rate
@r_SpouseSgaAmt  = WebCalc.find_or_create_by_name('r_SpouseSgaAmt')
@r_SpouseSgaAmt.operation = "
spouseBlind       = manager.get_answer_by_question_name('spouseBlind')
spouseDisability  = manager.get_answer_by_question_name('spouseDisability')
unless manager.get_answer_by_question_name('sitDate').blank? 
 sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 rate = FederalRate.find(:first, :conditions => ['start_date <= ?', sitDate])
 rateSgaBlindAmt = rate.sga_blind_amount
 rateSgaDisabledAmt = rate.sga_disabled_amount
 if spouseBlind == 'Yes' then
    rateSgaBlindAmt
 elsif spouseDisability == 'Yes' then
    rateSgaDisabledAmt
 else
    0
 end
 
else
  0
end
"
@r_SpouseSgaAmt.save!

#820	r_SpouseSsdiSgaExceeded = IF (spouseSsdiEarnAmt - spouseSgaIrweAmt - spouseSubsidyEmpSupAmt - spouseSubsidyWkDutiesReducAmt) > r_SpouseSgaAmt, THEN TRUE, ELSE FALSE	
#r_SpouseSsdiSgaExceeded
#=IF((E79-E80-E81-E82)>E83;TRUE();FALSE())
#E79 spouseSsdiEarnAmt 
#e80 spouseSgaIrweAmt
#e81 spouseSubsidyEmpSupAmt
#e82 spouseSubsidyWkDutiesReducAmt
#e83 r_SpouseSgaAmt
@r_SpouseSsdiSgaExceeded  = WebCalc.find_or_create_by_name('r_SpouseSsdiSgaExceeded')
@r_SpouseSsdiSgaExceeded.operation = "
spouseSsdiEarnAmt             = manager.get_answer_by_question_name('spouseSsdiEarnAmt') 
spouseSgaIrweAmt              = manager.get_answer_by_question_name('spouseSgaIrweAmt') 
spouseSubsidyEmpSupAmt        = manager.get_answer_by_question_name('spouseSubsidyEmpSupAmt') 
spouseSubsidyWkDutiesReducAmt = manager.get_answer_by_question_name('spouseSubsidyWkDutiesReducAmt') 
r_SpouseSgaAmt                = WebCalc.find_by_name('r_SpouseSgaAmt')
workVar = Float(spouseSsdiEarnAmt.to_f - spouseSgaIrweAmt.to_f - spouseSubsidyEmpSupAmt.to_f - spouseSubsidyWkDutiesReducAmt.to_f)
if (workVar > Float(r_SpouseSgaAmt.calculate manager)) then
   true
else
  false
end
"
@r_SpouseSsdiSgaExceeded.save!

#25	900	r_SpouseSsdiBenefitStops = IF r_SpouseSsdiSgaExceeded = TRUE AND spouseTwpComplete = Y, THEN TRUE, ELSE FALSE	
#r_SpouseSsdiBenefitStops
#=IF(AND(E91=TRUE();E90="YES");TRUE();FALSE())
#91 r_SpouseSsdiSgaExceeded
#90 spouseTwpComplete
@r_SpouseSsdiBenefitStops  = WebCalc.find_or_create_by_name('r_SpouseSsdiBenefitStops')
@r_SpouseSsdiBenefitStops.operation = "
r_SpouseSsdiSgaExceeded = WebCalc.find_by_name('r_SpouseSsdiSgaExceeded')
spouseTwpComplete       = manager.get_answer_by_question_name('spouseTwpComplete')
if spouseTwpComplete == 'Yes' && (r_SpouseSsdiSgaExceeded.calculate manager) == true then
  true
else
  false
end
"
@r_SpouseSsdiBenefitStops.save!

#25	920	r_SpouseSsdiEseCeases = IF r_SpouseSsdiSgaExceeded = TRUE AND spouseTwpComplete = Y AND spouseBlindSkillsBefore55 <> Y AND spouseBlindSkillsBeforeOnset <> Y, THEN TRUE, ELSE FALSE	
#r_SpouseSsdiEseCeases
#=IF(AND(E91=TRUE();E90="YES";E89<>"YES";E88<>"YES");TRUE();FALSE())
#91 r_SpouseSsdiSgaExceeded 
#90 spouseTwpComplete
#89 spouseBlindSkillsBeforeOnset
#88 spouseBlindSkillsBefore55
#=IF(AND(E91=TRUE();E90="YES";E89<>"YES";E88<>"YES");TRUE();FALSE())   
@r_SpouseSsdiEseCeases  = WebCalc.find_or_create_by_name('r_SpouseSsdiEseCeases')
@r_SpouseSsdiEseCeases.operation = "
r_SpouseSsdiSgaExceeded      = WebCalc.find_by_name('r_SpouseSsdiSgaExceeded')
spouseTwpComplete            = manager.get_answer_by_question_name('spouseTwpComplete')
spouseBlindSkillsBeforeOnset = manager.get_answer_by_question_name('spouseBlindSkillsBeforeOnset')
spouseBlindSkillsBefore55    = manager.get_answer_by_question_name('spouseBlindSkillsBefore55')
if spouseTwpComplete == 'Yes' && spouseBlindSkillsBefore55 != 'Yes' && spouseBlindSkillsBeforeOnset != 'Yes' && (r_SpouseSsdiSgaExceeded.calculate manager) == true then
  true
else
  false
end
"
@r_SpouseSsdiEseCeases.save!

#25	1040	r_SpouseSsdiPayNoAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE MAX of (spouseDiAmtSelfFull OR spouseDiAmtOtherFull)	
#r_SpouseSsdiPayNoAdjustAmt
#=IF(E105=TRUE();0;MAX(E98;E99))
#105 r_SpouseSsdiBenefitStops
#98 spouseDiAmtSelfFull
#99 spouseDiAmtOtherFull  Note bob adds these together thinking they are mutually exclusive but could be wrong  The max function might be better but i'm not sure how to do this within the seed file
#12/13/2010 review 
#=IF(E114=1;0;MAX(E107;E108))
#114 r_SpouseSsdiBenefitStops
#107 spouseDiAmtSelfFull
#108 spouseDiAmtOtherFull
@r_SpouseSsdiPayNoAdjustAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayNoAdjustAmt')
@r_SpouseSsdiPayNoAdjustAmt.operation = "
r_SpouseSsdiBenefitStops = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
spouseDiAmtSelfFull      = manager.get_answer_by_question_name('spouseDiAmtSelfFull') 
spouseDiAmtOtherFull     = manager.get_answer_by_question_name('spouseDiAmtOtherFull') 
if ((r_SpouseSsdiBenefitStops.calculate manager) == true) then 
   0
else
  spouseDiAmtSelfFull.to_f + spouseDiAmtOtherFull.to_f
end
"
@r_SpouseSsdiPayNoAdjustAmt.save!

#25	1050	r_SpouseSsdiPayCareBAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, ELSE IF spouseCareBDeduct = Y, THEN r_SpouseSsdiPayNoAdjustAmt - RateCareBPremium, ELSE r_SpouseSsdiPayNoAdjustAmt	
#r_SpouseSsdiPayCareBAdjustAmt
#=IF(E105=TRUE();0;IF(E100="YES";E107-E101;E107))
#105 r_SpouseSsdiBenefitStops
#100 spouseCareBDeduct
#107 r_SpouseSsdiPayNoAdjustAmt
#101 RateCareBPremium  NOte will bee are changing this from using the rate to using how they answer a new question 
#spouseCareBPremiumAmt

@r_SpouseSsdiPayCareBAdjustAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayCareBAdjustAmt')
#r_SpouseSsdiPayCareBAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, ELSE IF spouseCareBDeduct = Y, THEN r_SpouseSsdiPayNoAdjustAmt - spouseCareBPremiumAmt, ELSE r_SpouseSsdiPayNoAdjustAmt

@r_SpouseSsdiPayCareBAdjustAmt.operation = "
r_SpouseSsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
r_SpouseSsdiBenefitStops   = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
spouseCareBDeduct          = manager.get_answer_by_question_name('spouseCareBDeduct') 
spouseCareBPremiumAmt      = manager.get_answer_by_question_name('spouseCareBPremiumAmt') 
if (r_SpouseSsdiBenefitStops.calculate manager) == true then
   0
elsif spouseCareBDeduct == 'Yes' then
    Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) - spouseCareBPremiumAmt.to_f
else 
    Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager)	
end
"
@r_SpouseSsdiPayCareBAdjustAmt.save!

#25	1060	r_SpouseSsdiPayWcOrPdbAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayCareBAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt	
#r_SpouseSsdiPayWcOrPdbAdjustAmt
#=IF(E105=TRUE();0;E108-E102)
#105 r_SpouseSsdiBenefitStops
#108 r_SpouseSsdiPayCareBAdjustAmt
#102 spouseSsdiWcOrPdbDecreaseAmt
#56 review
#r_SpouseSsdiPayWcOrPdbAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt
#=IF(E117=1;0;E119-E114)
#117 r_SpouseSsdiBenefitStops
#119 r_SpouseSsdiPayNoAdjustAmt
#114 spouseSsdiWcOrPdbDecreaseAmt
@r_SpouseSsdiPayWcOrPdbAdjustAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayWcOrPdbAdjustAmt')
@r_SpouseSsdiPayWcOrPdbAdjustAmt.operation = "
r_SpouseSsdiBenefitStops     = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
r_SpouseSsdiPayNoAdjustAmt   = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiWcOrPdbDecreaseAmt = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt') 
if (r_SpouseSsdiBenefitStops.calculate manager) == true then
  0
else 
  (Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) - spouseSsdiWcOrPdbDecreaseAmt.to_f)
end	
"
@r_SpouseSsdiPayWcOrPdbAdjustAmt.save!

#1070	r_SpouseSsdiPayOverUnderAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayCareBAdjustAmt + spouseSsdiUnderPayIncreaseAmt - spouseSsdiOverPayDecreaseAmt	
#r_SpouseSsdiPayOverUnderAdjustAmt
#=IF(E105=TRUE();0;E108+E103-E104)
#105 r_SpouseSsdiBenefitStops
#108 r_SpouseSsdiPayCareBAdjustAmt
#103 spouseSsdiUnderPayIncreaseAmt 
#104 spouseSsdiOverPayDecreaseAmt
#56 review
#r_SpouseSsdiPayOverUnderAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayNoAdjustAmt + spouseSsdiUnderPayIncreaseAmt - spouseSsdiOverPayDecreaseAmt
#=IF(E117=1;0;E119+E115-E116)
#117 r_SpouseSsdiBenefitStops
#119 r_SpouseSsdiPayNoAdjustAmt
#115 spouseSsdiUnderPayIncreaseAmt
#116 spouseSsdiOverPayDecreaseAmt
@r_SpouseSsdiPayOverUnderAdjustAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayOverUnderAdjustAmt')
@r_SpouseSsdiPayOverUnderAdjustAmt.operation = "
r_SpouseSsdiBenefitStops      = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
r_SpouseSsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt') 
spouseSsdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt') 
if (r_SpouseSsdiBenefitStops.calculate manager) == true then
  0
else 
  (Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) + spouseSsdiUnderPayIncreaseAmt.to_f - spouseSsdiOverPayDecreaseAmt.to_f)
end
"
@r_SpouseSsdiPayOverUnderAdjustAmt.save!

#1080	r_SpouseSsdiPayAllAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayCareBAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + spouseSsdiUnderPayIncreaseAmt - spouseSsdiOverPayDecreaseAmt	
#r_SpouseSsdiPayAllAdjustAmt
#=IF(E105=TRUE();0;E108-E102+E103-E104)
#105 r_SpouseSsdiBenefitStops
#108 r_SpouseSsdiPayCareBAdjustAmt
#102 spouseSsdiWcOrPdbDecreaseAmt
#103 spouseSsdiUnderPayIncreaseAmt  
#104 spouseSsdiOverPayDecreaseAmt
@r_SpouseSsdiPayAllAdjustAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayAllAdjustAmt')
@r_SpouseSsdiPayAllAdjustAmt.operation = "
r_SpouseSsdiBenefitStops      = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
r_SpouseSsdiPayCareBAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayCareBAdjustAmt')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt')
if (r_SpouseSsdiBenefitStops.calculate manager) == true then
    0 
else 
  (Float(r_SpouseSsdiPayCareBAdjustAmt.calculate manager) - spouseSsdiWcOrPdbDecreaseAmt.to_f + spouseSsdiUnderPayIncreaseAmt.to_f - spouseSsdiOverPayDecreaseAmt.to_f)
end
"
@r_SpouseSsdiPayAllAdjustAmt.save!

#26	1085	r_SpouseSsdiPayAllAdjustAmt = IF r_SpouseSsdiBenefitStops = TRUE, THEN 0.00, ELSE r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt
#                                                                                           + spouseSsdiUnderPayIncreaseAmt - spouseSsdiOverPayDecreaseAmt
#r_SpouseSsdiPayAllAdjustButCareBAmt
#=IF(E105=TRUE();0;E107-E102+E103-E104)
#105 r_SpouseSsdiBenefitStops
#107 r_SpouseSsdiPayNoAdjustAmt
#102 spouseSsdiWcOrPdbDecreaseAmt
#103 spouseSsdiUnderPayIncreaseAmt  
#104 spouseSsdiOverPayDecreaseAmt
#Nov 3 2011 review
#=IF(E117=1;0;E119-E114+E115-E116)
#117 r_SpouseSsdiBenefitStops
#119 r_SpouseSsdiPayNoAdjustAmt
#114 spouseSsdiWcOrPdbDecreaseAmt
#115 spouseSsdiUnderPayIncreaseAmt
#116 spouseSsdiOverPayDecreaseAmt
@r_SpouseSsdiPayAllAdjustButCareBAmt  = WebCalc.find_or_create_by_name('r_SpouseSsdiPayAllAdjustButCareBAmt')
@r_SpouseSsdiPayAllAdjustButCareBAmt.operation = "
r_SpouseSsdiBenefitStops      = WebCalc.find_by_name('r_SpouseSsdiBenefitStops')
r_SpouseSsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt')
if (r_SpouseSsdiBenefitStops.calculate manager) == true then
     0 
else
   (Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) - spouseSsdiWcOrPdbDecreaseAmt.to_f + spouseSsdiUnderPayIncreaseAmt.to_f - spouseSsdiOverPayDecreaseAmt.to_f).to_s
end  
  "
@r_SpouseSsdiPayAllAdjustButCareBAmt.save!

#WebCalc 25	1090	Determine Whether Spouse's Actual SSDI Amount = Calculated Amounts
#25	1180	r_SpouseActualSsdiPayNotEqualNoAdjust = IF Current/What-If Button = Current AND spouseSsdiActualAmt <> r_SpouseSsdiPayNoAdjustAmt THEN TRUE, ELSE FALSE
#r_SpouseActualSsdiPayNotEqualNoAdjust
#=IF(AND(E114="Current";E115<>E116);TRUE();FALSE())
#114 Current/What-If Button
#115 spouseSsdiActualAmt
#116 r_SpouseSsdiPayNoAdjustAmt
@r_SpouseActualSsdiPayNotEqualNoAdjust  = WebCalc.find_or_create_by_name('r_SpouseActualSsdiPayNotEqualNoAdjust')
@r_SpouseActualSsdiPayNotEqualNoAdjust.operation = "
spouseSsdiActualAmt = manager.get_answer_by_question_name('spouseSsdiActualAmt')
r_SpouseSsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
if (!manager.situation.what_if? && spouseSsdiActualAmt.to_f != Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager)) then
   true
else
  false
end
"
@r_SpouseActualSsdiPayNotEqualNoAdjust.save!

#1190	r_SpouseActualSsdiPayNotEqualCareBAdjust = IF Current/What-If Button = Current AND spouseSsdiActualAmt <> r_SpouseSsdiPayCareBAdjustAmt, THEN TRUE, ELSE FALSE	
#r_SpouseActualSsdiPayNotEqualCareBAdjust
#=IF(AND(E114="Current";E115<>E117);TRUE();FALSE())
#114 Current/What-If Button
#115 spouseSsdiActualAmt
#117 r_SpouseSsdiPayCareBAdjustAmt
# 12/13/2010 review
#=IF(AND(E123= "Current";E124<>E126);1;0)
#124 spouseSsdiActualAmt
#126 r_SpouseSsdiPayCareBAdjustAmt

@r_SpouseActualSsdiPayNotEqualCareBAdjust  = WebCalc.find_or_create_by_name('r_SpouseActualSsdiPayNotEqualCareBAdjust')
@r_SpouseActualSsdiPayNotEqualCareBAdjust.operation = "
spouseSsdiActualAmt = manager.get_answer_by_question_name('spouseSsdiActualAmt')
r_SpouseSsdiPayCareBAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayCareBAdjustAmt')
if (!manager.situation.what_if? && spouseSsdiActualAmt.to_f != Float(r_SpouseSsdiPayCareBAdjustAmt.calculate manager)) then 
  true
else
  false
end
"
@r_SpouseActualSsdiPayNotEqualCareBAdjust.save!

#25	1200	r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust = IF Current/What-If Button = Current AND spouseSsdiActualAmt <> r_SpouseSsdiPayWcOrPdbAdjustAmt, THEN TRUE, ELSE FALSE	
#r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust
#=IF(AND(E114="Current";E115<>E118);TRUE();FALSE())
#114 Current/What-If Button
#115 spouseSsdiActualAmt
#118 r_SpouseSsdiPayWcOrPdbAdjustAmt
@r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust  = WebCalc.find_or_create_by_name('r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust')
@r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust.operation = "
spouseSsdiActualAmt = manager.get_answer_by_question_name('spouseSsdiActualAmt')
r_SpouseSsdiPayWcOrPdbAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayWcOrPdbAdjustAmt')
if (!manager.situation.what_if? && spouseSsdiActualAmt.to_f != Float(r_SpouseSsdiPayWcOrPdbAdjustAmt.calculate manager)) then 
  true
else
  false
end
"
@r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust.save!

#current wrinkle
#1210	r_SpouseActualSsdiPayNotEqualAllAdjust = IF Current/What-If Button = Current AND spouseSsdiActualAmt <> r_SpouseSsdiPayAllAdjustAmt, THEN TRUE, ELSE FALSE	
#r_SpouseActualSsdiPayNotEqualAllAdjust
#=IF(AND(E114="Current";E115<>E120);TRUE();FALSE())
#114 Current/What-If Button
#115 spouseSsdiActualAmt
#120 r_SpouseSsdiPayAllAdjustAmt
@r_SpouseActualSsdiPayNotEqualAllAdjust  = WebCalc.find_or_create_by_name('r_SpouseActualSsdiPayNotEqualAllAdjust')
@r_SpouseActualSsdiPayNotEqualAllAdjust.operation = "
spouseSsdiActualAmt         = manager.get_answer_by_question_name('spouseSsdiActualAmt')
r_SpouseSsdiPayAllAdjustAmt = WebCalc.find_by_name('r_SpouseSsdiPayAllAdjustAmt')
if (!manager.situation.what_if? && spouseSsdiActualAmt.to_f != Float(r_SpouseSsdiPayAllAdjustAmt.calculate manager) ) then 
  true
else
  false
end
"
@r_SpouseActualSsdiPayNotEqualAllAdjust.save!

#25	1330	r_SsdiForSsiCalcAmt = IF ssiGet = Y, THEN (r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt 
#     + (IF SsiWhileSsdiUnderPay = Y THEN SsdiUnderPayIncreaseAmt, ELSE 0)
#     - (IF ssiWhileSsdiOverPay = Y, THEN SsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	
#r_SsdiForSsiCalcAmt
#=IF(E129="YES";E130-E131+IF(E133="YES";E132;0)-IF(E135="YES";E134;0);0)
#129 ssiGet
#130 r_SsdiPayNoAdjustAmt
#131 ssdiWcOrPdbDecreaseAmt can't do this because of nil possibility manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')
#133 ssiWhileSsdiUnderPay
#132 SsdiUnderPayIncreaseAmt
#135 ssiWhileSsdiOverPay
#134 ssdiOverPayDecreaseAmt


#1330 replaced with
#25 54 55	1330	r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt = IF r_VA_CaidCovGroupSsiPsdcPadc1619b = TRUE, THEN (r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt + (IF ssiWhileSsdiUnderPay = Y THEN ssdiUnderPayIncreaseAmt, ELSE 0) 
#  - (IF ssiWhileSsdiOverPay = Y, THEN ssdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt	0.00	In WebCalcs, revised 1330 and added 1335 to calculate SSDI amounts separately for those who get SSI and those who are protected SSI child, DAC, or 1619b.  This helps keep clear the distinction between calculating SSI amount and SSI-related Medicaid for those who may not actually get SSI. This is especially important if one member of a married couple gets SSI and one does not as an SSI Protected Disabled Child or DAC.
@r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name('r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt')
@r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.operation = "
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')

r_SsdiPayNoAdjustAmt = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
ssdiWcOrPdbDecreaseAmt     = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')
ssiWhileSsdiUnderPay       = manager.get_answer_by_question_name('ssiWhileSsdiUnderPay')
ssdiUnderPayIncreaseAmt    = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')
ssiWhileSsdiOverPay        = manager.get_answer_by_question_name('ssiWhileSsdiOverPay')
ssdiOverPayDecreaseAmt     = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')

if  (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true then 
  workVar = (Float(r_SsdiPayNoAdjustAmt.calculate manager) - ssdiWcOrPdbDecreaseAmt.to_f)
  if (ssiWhileSsdiUnderPay == 'Yes') then
     workVar = workVar + ssdiUnderPayIncreaseAmt.to_f
  end
  if (ssiWhileSsdiOverPay == 'Yes') then
    workVar = workVar - ssdiOverPayDecreaseAmt.to_f
  end

    workVar

else
   0
end
"
@r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.save!

#9/16/2011 This is bbeing adjusted for changes in workbook 54
#r_SsdiForSsiCalcAmt = IF (ssiGet = Y OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE), 
#THEN (r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt + (IF ssiWhileSsdiUnderPay = Y THEN ssdiUnderPayIncreaseAmt, ELSE 0) - (IF ssiWhileSsdiOverPay = Y, THEN ssdiOverPayDecreaseAmt, ELSE 0)), ELSE 0
#review on 10/26/2011
#55	1335	r_SsdiForSsiCalcAmt = IF ssiGet = Y, THEN (r_SsdiPayNoAdjustAmt - ssdiWcOrPdbDecreaseAmt + (IF ssiWhileSsdiUnderPay = Y THEN ssdiUnderPayIncreaseAmt, ELSE 0) - (IF ssiWhileSsdiOverPay = Y, THEN ssdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	r_SsdiForSsiCalcAmt
@r_SsdiForSsiCalcAmt  = WebCalc.find_or_create_by_name('r_SsdiForSsiCalcAmt')
@r_SsdiForSsiCalcAmt.operation = "
ssiGet                  = manager.get_answer_by_question_name('ssiGet')
r_SsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SsdiPayNoAdjustAmt')
ssdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('ssdiWcOrPdbDecreaseAmt')
ssiWhileSsdiUnderPay    = manager.get_answer_by_question_name('ssiWhileSsdiUnderPay')
ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')
ssiWhileSsdiOverPay     = manager.get_answer_by_question_name('ssiWhileSsdiOverPay')
ssdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')

if (ssiGet == 'Yes') then 
  workVar = (Float(r_SsdiPayNoAdjustAmt.calculate manager) - ssdiWcOrPdbDecreaseAmt.to_f)
  if (ssiWhileSsdiUnderPay == 'Yes') then
     workVar = workVar + ssdiUnderPayIncreaseAmt.to_f
  end
  if (ssiWhileSsdiOverPay == 'Yes') then
    workVar = workVar - ssdiOverPayDecreaseAmt.to_f
  end

    workVar

else
   0
end
"
@r_SsdiForSsiCalcAmt.save!

#Bob is getting this ready for deletion don't see it used anywher and still uses the "Disabled Adult Child (DAC)" discontinued answer
##added on Sept 20 2011 for new WebVaCalc
##IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = (Protected SSI Disabled Child OR Disabled Adult Child (DAC) OR 1619b (Medicaid while working)), THEN r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b = TRUE, ELSE FALSE	
##r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b
#
##SSI Recipient:1619b (SSI Medicaid while working):MEDICAID WORKS:Auxiliary Grant:Protected Adult Disabled Child:Protected SSI Disabled Child:QMB:SLMB:QI:QDWI:80% FPL:300% SSI:Medically Needy (Spendown)
#
#@r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b  = WebCalc.find_or_create_by_name('r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b')
#@r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b.operation = "
#vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
#vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
#
#if (vA_caidSpouseGetCoveredGroup == 'Protected SSI Disabled Child' || vA_caidSpouseGetCoveredGroup == 'Disabled Adult Child (DAC)' || vA_caidSpouseGetCoveredGroup == '1619b (Medicaid while working)' ||
#    vA_caidSpouseApplyCoveredGroup == 'Protected SSI Disabled Child' || vA_caidSpouseApplyCoveredGroup == 'Disabled Adult Child (DAC)' || vA_caidSpouseApplyCoveredGroup == '1619b (Medicaid while working)' ) then 
#  
#   true
#else
#  false
#end
#"
#@r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b.save!

#25	1440	r_SpouseSsdiForSsiCalcAmt = IF spouseSsiGet = Y, THEN (r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + (IF spouseSsiWhileSsdiUnderPay = Y THEN SpousessdiUnderPayIncreaseAmt, ELSE 0) - (IF spouseSsiWhileSsdiOverPay = Y, THEN spouseSsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	
#r_SpouseSsdiForSsiCalcAmt
#=IF(E140="YES";E141-E142+IF(E144="YES";E143;0)-IF(E146="YES";E145;0);0)
#140 spouseSsiGet
#141 r_SpouseSsdiPayNoAdjustAmt
#142 spouseSsdiWcOrPdbDecreaseAmt
#144 spouseSsiWhileSsdiUnderPay
#143 spouseSsdiUnderPayIncreaseAmt
#146 spouseSsiWhileSsdiOverPay
#145 spouseSsdiOverPayDecreaseAmt

#Revised on Sept 20 2011
#25	1440	r_SpouseSsdiForSsiCalcAmt = IF (spouseSsiGet = Y OR r_VA_CaidSpouseCoveredGroupProtectedSsiChildDac1619b = TRUE), THEN (r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + (IF spouseSsiWhileSsdiUnderPay = Y THEN spouseSsdiUnderPayIncreaseAmt, ELSE 0) 
#                    - (IF spouseSsiWhileSsdiOverPay = Y, THEN spouseSsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	r_SpouseSsdiForSsiCalcAmt

#Oct 26 2011 revision
#25 54 55	1440	r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt = IF r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE, THEN (r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + (IF spouseSsiWhileSsdiUnderPay = Y THEN spouseSsdiUnderPayIncreaseAmt, ELSE 0) - (IF spouseSsiWhileSsdiOverPay = Y, THEN spouseSsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	
#r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt

@r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt')
@r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.operation = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b')
r_SpouseSsdiPayNoAdjustAmt              = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiWcOrPdbDecreaseAmt            = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt')
spouseSsiWhileSsdiUnderPay              = manager.get_answer_by_question_name('spouseSsiWhileSsdiUnderPay')
spouseSsdiUnderPayIncreaseAmt           = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsiWhileSsdiOverPay               = manager.get_answer_by_question_name('spouseSsiWhileSsdiOverPay')
spouseSsdiOverPayDecreaseAmt            = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt')
if ((r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b.calculate manager)  == true) then 
  workVar = (Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) - spouseSsdiWcOrPdbDecreaseAmt.to_f)
   if (spouseSsiWhileSsdiUnderPay == 'Yes') then
     workVar = workVar + spouseSsdiUnderPayIncreaseAmt.to_f
   end
   if (spouseSsiWhileSsdiOverPay == 'Yes') then
     workVar = workVar - spouseSsdiOverPayDecreaseAmt.to_f
   end

    workVar
else
   0
end
"
@r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.save!

#oct 26 2011 add based on workbook 55
#55	1445	r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt = IF r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE, THEN (r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + (IF spouseSsiWhileSsdiUnderPay = Y THEN spouseSsdiUnderPayIncreaseAmt, ELSE 0) - (IF spouseSsiWhileSsdiOverPay = Y, THEN spouseSsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0	
#r_SpouseSsdiForSsiCalcAmt  Note description does not match pattern, using Bob's hunch and notifying Ruth
#=IF(E154="YES";E156-E157+IF(E159="YES";E158;0)-IF(E161="YES";E160;0);0)
#56 review
#r_SpouseSsdiForSsiCalcAmt = IF spouseSsiGet = TRUE, THEN (r_SpouseSsdiPayNoAdjustAmt - spouseSsdiWcOrPdbDecreaseAmt + (IF spouseSsiWhileSsdiUnderPay = Y THEN spouseSsdiUnderPayIncreaseAmt, ELSE 0) - (IF spouseSsiWhileSsdiOverPay = Y, THEN spouseSsdiOverPayDecreaseAmt, ELSE 0)), ELSE 0
#=IF(E155="YES";E157-E158+IF(E160="YES";E159;0)-IF(E162="YES";E161;0);0)
#155 spouseSsiGet
#157 r_SpouseSsdiPayNoAdjustAmt
#158 spouseSsdiWcOrPdbDecreaseAmt
#160 spouseSsiWhileSsdiUnderPay
#159 spouseSsdiUnderPayIncreaseAmt
#162 spouseSsiWhileSsdiOverPay
#161 spouseSsdiOverPayDecreaseAmt
@r_SpouseSsdiForSsiCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SpouseSsdiForSsiCalcAmt')
@r_SpouseSsdiForSsiCalcAmt.operation = "
spouseSsiGet                  = manager.get_answer_by_question_name('spouseSsiGet')
r_SpouseSsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt')
spouseSsiWhileSsdiUnderPay    = manager.get_answer_by_question_name('spouseSsiWhileSsdiUnderPay')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsiWhileSsdiOverPay     = manager.get_answer_by_question_name('spouseSsiWhileSsdiOverPay')
spouseSsdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt')
if (spouseSsiGet == 'Yes' ) then 
  workVar = (Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) - spouseSsdiWcOrPdbDecreaseAmt.to_f)
   if (spouseSsiWhileSsdiUnderPay == 'Yes') then
     workVar = workVar + spouseSsdiUnderPayIncreaseAmt.to_f
   end
   if (spouseSsiWhileSsdiOverPay == 'Yes') then
     workVar = workVar - spouseSsdiOverPayDecreaseAmt.to_f
   end

    workVar

else
   0
end
"
@r_SpouseSsdiForSsiCalcAmt.save!

#25	1580	r_SsiUnearnNoSpouseDeemAmt = IF ssiGet = Y THEN (r_SsdiForSsiCalcAmt + r_SpouseSsdiForSsiCalcAmt + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt), ELSE 0.00	
#r_SsiUnearnNoSpouseDeemAmt
#=IF(E160="YES";E156+E157+E151+E152+E153+E158+E159;0)  Note 153 deleted CoupleParSsiDeemAmt
#160 ssiGet
#156 r_SsdiForSsiCalcAmt
#157 r_SpouseSsdiForSsiCalcAmt
#151 inKindPMVAmt
#152 ssiParDeemAmt
#158 unearnAmt
#159 spouseUnEarnAmt

#edit based on workbook 54
#29 54	1580	r_SsiUnearnNoSpouseDeemAmt = IF (ssiGet = Y OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE), THEN (r_SsdiForSsiCalcAmt + r_SpouseSsdiForSsiCalcAmt + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt), ELSE 0.00	
#r_SsiUnearnNoSpouseDeemAmt
#review 
#rv on Oct 26 2011
#29 54 55	1580	r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = 
#IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE, THEN (r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt + r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt), ELSE 0.00	
#r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#NOv 2 review based on WB 56  THIS NEEDS MORE WORK AFTER RESPONSE FROM RUTH, forula and description do not match
#29 54 55 56	1580	r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt 
#= IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE, THEN
 # (r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt + (MAX of r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt OR r_SpouseSsdiForSsiCalcAmt) + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt), ELSE 0.00	r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#=IF(E179=1;E172+E174+E168+E169+E176+E177;0)
#179 r_VA_CaidCovGroupPsdcPadc1619b
#172 r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt
#174 r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt
#168 inKindPMVAmt
#169 ssiParDeemAmt
#176 unearnAmt
#177 spouseUnEarnAmt
#Note email from Ruth
#In WebCalcs 1580, corrected the Excel calc to be same as the Operation Description.
@r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
ssiGet                                         = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiPsdcPadc1619b             = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt')
r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt      = WebCalc.find_by_name('r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt')
r_SpouseSsdiForSsiCalcAmt                     = WebCalc.find_by_name('r_SpouseSsdiForSsiCalcAmt')
inKindPMVAmt                                  = manager.get_answer_by_question_name('inKindPMVAmt')
ssiParDeemAmt                                 = manager.get_answer_by_question_name('ssiParDeemAmt')
unearnAmt                                     = manager.get_answer_by_question_name('unearnAmt')
spouseUnEarnAmt                               = manager.get_answer_by_question_name('spouseUnEarnAmt')
if ( (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true) then
   (Float(r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) + [Float(r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.calculate manager), Float(r_SpouseSsdiForSsiCalcAmt.calculate manager)].max + inKindPMVAmt.to_f + ssiParDeemAmt.to_f + unearnAmt.to_f  + spouseUnEarnAmt.to_f)
else 
   0
end  
"
@r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!
# (Float(r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) + [Float(r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.calculate manager), Float(r_SpouseSsdiForSsiCalcAmt.calculate manager)].max + inKindPMVAmt.to_f + ssiParDeemAmt.to_f + unearnAmt.to_f  + spouseUnEarnAmt.to_f)

#BOB want so look at this ssiget + Y and ssdi mix later
#55	1585	r_SsiUnearnNoSpouseDeemAmt = IF ssiGet = YES, THEN (r_SsdiForSsiCalcAmt + r_SpouseSsdiForSsiCalcAmt + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt), ELSE 0.00	
#r_SsiUnearnNoSpouseDeemAmt
@r_SsiUnearnNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnNoSpouseDeemAmt')
@r_SsiUnearnNoSpouseDeemAmt.operation = "
ssiGet                      = manager.get_answer_by_question_name('ssiGet')
r_SsdiForSsiCalcAmt         = WebCalc.find_by_name('r_SsdiForSsiCalcAmt')
r_SpouseSsdiForSsiCalcAmt   = WebCalc.find_by_name('r_SpouseSsdiForSsiCalcAmt')
inKindPMVAmt                = manager.get_answer_by_question_name('inKindPMVAmt')
ssiParDeemAmt               = manager.get_answer_by_question_name('ssiParDeemAmt')
unearnAmt                   = manager.get_answer_by_question_name('unearnAmt')
spouseUnEarnAmt             = manager.get_answer_by_question_name('spouseUnEarnAmt')
if (ssiGet == 'Yes') then
   (Float(r_SsdiForSsiCalcAmt.calculate manager) + Float(r_SpouseSsdiForSsiCalcAmt.calculate manager) + inKindPMVAmt.to_f + ssiParDeemAmt.to_f + unearnAmt.to_f  + spouseUnEarnAmt.to_f)
else 
   0
end  
"
@r_SsiUnearnNoSpouseDeemAmt.save!

#25	1600	r_SsiUnearnSpouseDeemAmt = If ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0, THEN r_SsiUnearnNoSpouseDeemAmt + ssiSpouseDeemUnearnAmt, ELSE 0.00	
#r_SsiUnearnSpouseDeemAmt
#=IF(E154+E155>0;E162+E154;0)
#154 ssiSpouseDeemUnearnAmt
#155 ssiSpouseDeemEarnAmt
#162 r_SsiUnearnNoSpouseDeemAmt
#Oct 26 2011 review
#25 55	1600	r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt =  IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE, THEN  THEN (r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt + r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt +
#  inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt + ssiSpouseDeemUnearnAmt), ELSE 0.00	
#r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_VA_CaidCovGroupSsiPsdcPadc1619b             = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt')
r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt      = WebCalc.find_by_name('r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt')
inKindPMVAmt                                  = manager.get_answer_by_question_name('inKindPMVAmt')
ssiParDeemAmt                                 = manager.get_answer_by_question_name('ssiParDeemAmt')
unearnAmt                                     = manager.get_answer_by_question_name('unearnAmt')
spouseUnEarnAmt                               = manager.get_answer_by_question_name('spouseUnEarnAmt')
ssiSpouseDeemUnearnAmt                        = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
if ((r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true) then
   (Float(r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) + Float(r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.calculate manager) + inKindPMVAmt.to_f + ssiParDeemAmt.to_f  + unearnAmt.to_f  + spouseUnEarnAmt.to_f + ssiSpouseDeemUnearnAmt.to_f)
else 
   0
end
"
@r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#55	1605	r_SsiUnearnSpouseDeemAmt = IF ssiGet = YES, THEN (r_SsdiForSsiCalcAmt + r_SpouseSsdiForSsiCalcAmt + inKindPMVAmt+ ssiParDeemAmt  + unearnAmt  + spouseUnEarnAmt + ssiSpouseDeemUnearnAmt), ELSE 0.00	
#r_SsiUnearnSpouseDeemAmt
#R_SsiUnearnSpouseDeemAmt
# = IF ssiGet = YES, THEN (R_SsdiForSsiCalcAmt + R_SpouseSsdiForSsiCalcAmt + InKindPMVAmt+ ssiParDeemAmt  + UnearnAmt  + spouseUnEarnAmt + ssiSpouseDeemUnearnAmt), ELSE 0.00

@r_SsiUnearnSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnSpouseDeemAmt')
@r_SsiUnearnSpouseDeemAmt.operation = "
ssiGet                      = manager.get_answer_by_question_name('ssiGet')
r_SsdiForSsiCalcAmt         = WebCalc.find_by_name('r_SsdiForSsiCalcAmt')
r_SpouseSsdiForSsiCalcAmt   = WebCalc.find_by_name('r_SpouseSsdiForSsiCalcAmt')
ssiSpouseDeemEarnAmt        = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
inKindPMVAmt                = manager.get_answer_by_question_name('inKindPMVAmt')
ssiParDeemAmt               = manager.get_answer_by_question_name('ssiParDeemAmt')
unearnAmt                   = manager.get_answer_by_question_name('unearnAmt')
spouseUnEarnAmt             = manager.get_answer_by_question_name('spouseUnEarnAmt')
ssiSpouseDeemUnearnAmt      = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
if (ssiGet == 'Yes') then
   (Float(r_SsdiForSsiCalcAmt.calculate manager) + Float(r_SpouseSsdiForSsiCalcAmt.calculate manager) + inKindPMVAmt.to_f + ssiParDeemAmt.to_f + unearnAmt.to_f + spouseUnEarnAmt.to_f + ssiSpouseDeemUnearnAmt.to_f)
else 
   0
end
"
@r_SsiUnearnSpouseDeemAmt.save!


#25	1730	r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt = r_SsiUnearnNoSpouseDeemAmt - unearnInfrequentAmt 
#   - unearnAssistanceBasedOnNeedAmt - up to $60 of spouseUnearnInfrequentAmt 
#   - spouseUnearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt - spouseUnearnIncomeBasedOnNeedAmt (not < 0)	
#r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt
#=MAX(0;E167-E169-E170-MIN(60;E171)-E172-E174-E175)
#167 r_SsiUnearnNoSpouseDeemAmt
#169 unearnInfrequentAmt
#170 unearnAssistanceBasedOnNeedAmt
#171 spouseUnearnInfrequentAmt
#172 spouseUnearnAssistanceBasedOnNeedAmt
#174 unearnIncomeBasedOnNeedAmt
#175 spouseUnearnIncomeBasedOnNeedAmt

#Sept 20 2011 RMC has an email out to Ruth concerning the "up to" vs Min confilct in this formula
#Oct 26 2011 review
#25 55	1730	r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = 
# r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - unearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt - up to $60 of spouseUnearnInfrequentAmt 
#          - spouseUnearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt - spouseUnearnIncomeBasedOnNeedAmt (not < 0)	
#r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
unearnInfrequentAmt                                 = manager.get_answer_by_question_name('unearnInfrequentAmt')
unearnAssistanceBasedOnNeedAmt                      = manager.get_answer_by_question_name('unearnAssistanceBasedOnNeedAmt')
spouseUnearnInfrequentAmt                           = manager.get_answer_by_question_name('spouseUnearnInfrequentAmt')
spouseUnearnAssistanceBasedOnNeedAmt                = manager.get_answer_by_question_name('spouseUnearnAssistanceBasedOnNeedAmt')
unearnIncomeBasedOnNeedAmt                          = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
spouseUnearnIncomeBasedOnNeedAmt                    = manager.get_answer_by_question_name('spouseUnearnIncomeBasedOnNeedAmt')
countablesSpouseUnearnInfrequentAmt = 0
if spouseUnearnInfrequentAmt.to_f > 60 then
  countablesSpouseUnearnInfrequentAmt = 60
else
  countablesSpouseUnearnInfrequentAmt = spouseUnearnInfrequentAmt.to_f
end
workVar = (Float(r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - unearnInfrequentAmt.to_f - unearnAssistanceBasedOnNeedAmt.to_f - countablesSpouseUnearnInfrequentAmt - spouseUnearnAssistanceBasedOnNeedAmt.to_f - unearnIncomeBasedOnNeedAmt.to_f - spouseUnearnIncomeBasedOnNeedAmt.to_f)
workVar = [workVar, 0].max
"
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review
#55	1735	r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt = r_SsiUnearnNoSpouseDeemAmt - unearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt - up to $60 of spouseUnearnInfrequentAmt - spouseUnearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt - spouseUnearnIncomeBasedOnNeedAmt (not < 0)	
#r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt')
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt.operation = "
r_SsiUnearnNoSpouseDeemAmt           = WebCalc.find_by_name('r_SsiUnearnNoSpouseDeemAmt')
unearnInfrequentAmt                  = manager.get_answer_by_question_name('unearnInfrequentAmt')
unearnAssistanceBasedOnNeedAmt       = manager.get_answer_by_question_name('unearnAssistanceBasedOnNeedAmt')
spouseUnearnInfrequentAmt            = manager.get_answer_by_question_name('spouseUnearnInfrequentAmt')
spouseUnearnAssistanceBasedOnNeedAmt = manager.get_answer_by_question_name('spouseUnearnAssistanceBasedOnNeedAmt')
unearnIncomeBasedOnNeedAmt           = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
spouseUnearnIncomeBasedOnNeedAmt     = manager.get_answer_by_question_name('spouseUnearnIncomeBasedOnNeedAmt')
countablesSpouseUnearnInfrequentAmt = 0
if spouseUnearnInfrequentAmt.to_f > 60 then
  countablesSpouseUnearnInfrequentAmt = 60
else
  countablesSpouseUnearnInfrequentAmt = spouseUnearnInfrequentAmt.to_f
end
workVar = (Float(r_SsiUnearnNoSpouseDeemAmt.calculate manager) - unearnInfrequentAmt.to_f - unearnAssistanceBasedOnNeedAmt.to_f - countablesSpouseUnearnInfrequentAmt - spouseUnearnAssistanceBasedOnNeedAmt.to_f - unearnIncomeBasedOnNeedAmt.to_f - spouseUnearnIncomeBasedOnNeedAmt.to_f)
workVar = [workVar, 0].max
"
@r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt.save!


#25	1750	r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt = r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt
#=MAX(0;E177-E173)
#177 r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt
#173 rateGenExcludeAmt

#Oct 26 2011 review based on V55
#25 55	1750	r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
rateGenExcludeAmt                                                          = WebCalc.find_by_name('rateGenExcludeAmt')

[0, Float(r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(rateGenExcludeAmt.calculate manager)].max
"
@r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26th review v55
#55	1755	r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt = r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt
@r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt')
@r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt.operation = "
r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt')
rateGenExcludeAmt                                 = WebCalc.find_by_name('rateGenExcludeAmt')
[0, Float(r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt.calculate manager) - Float(rateGenExcludeAmt.calculate manager)].max
"
@r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt.save!

#25	1770	r_UnearnForSsiCalcNoSpouseDeemAmt = r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt + unearnIncomeBasedOnNeedAmt + spouseUnearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcNoSpouseDeemAmt
#=E179+E$174+E175
#179 r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt
#174 unearnIncomeBasedOnNeedAmt
#175 spouseUnearnIncomeBasedOnNeedAmt
#oct 26 2011 review.  Change name and ref #, use diff Ref for same calc in 1775
#25 55	1770	r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt + unearnIncomeBasedOnNeedAmt + spouseUnearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
unearnIncomeBasedOnNeedAmt                                         = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
spouseUnearnIncomeBasedOnNeedAmt                                   = manager.get_answer_by_question_name('spouseUnearnIncomeBasedOnNeedAmt')
(Float(r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) + unearnIncomeBasedOnNeedAmt.to_f + spouseUnearnIncomeBasedOnNeedAmt.to_f)
"
@r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#55	1775	r_UnearnForSsiCalcNoSpouseDeemAmt = r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt + unearnIncomeBasedOnNeedAmt + spouseUnearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcNoSpouseDeemAmt
@r_UnearnForSsiCalcNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_UnearnForSsiCalcNoSpouseDeemAmt')
@r_UnearnForSsiCalcNoSpouseDeemAmt.operation = "
r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt')
unearnIncomeBasedOnNeedAmt                = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
spouseUnearnIncomeBasedOnNeedAmt          = manager.get_answer_by_question_name('spouseUnearnIncomeBasedOnNeedAmt')
(Float(r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt.calculate manager) + unearnIncomeBasedOnNeedAmt.to_f + spouseUnearnIncomeBasedOnNeedAmt.to_f)
"
@r_UnearnForSsiCalcNoSpouseDeemAmt.save!

#25	1790	r_SsiUnusedGenExcludeNoSpouseDeemAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeNoSpouseDeemAmt
#=MAX(0;E$173-E177)
#173 rateGenExcludeAmt
#177 r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt
#OCt 26 2011 review
#25 55	1790	r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
rateGenExcludeAmt                                                          = WebCalc.find_by_name('rateGenExcludeAmt')
r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
[(Float(rateGenExcludeAmt.calculate manager) - Float(r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)),0].max
"
@r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#55	 (should be 1795)	r_SsiUnusedGenExcludeNoSpouseDeemAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeNoSpouseDeemAmt
@r_SsiUnusedGenExcludeNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnusedGenExcludeNoSpouseDeemAmt')
@r_SsiUnusedGenExcludeNoSpouseDeemAmt.operation = "
rateGenExcludeAmt                                 = WebCalc.find_by_name('rateGenExcludeAmt')
r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt')
[(Float(rateGenExcludeAmt.calculate manager) - Float(r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt.calculate manager)),0].max
"
@r_SsiUnusedGenExcludeNoSpouseDeemAmt.save!

#Sept 20 2011 RMC has a note to Ruth concerning mismatch between up-to and Min
#25	1810	r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt = r_SsiUnearnSpouseDeemAmt 
# - up to $60 of unearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt (not < 0)	
#r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt
#=MAX(0;E168-MIN(60;E169)-E170-E174)
#168 r_SsiUnearnSpouseDeemAmt
#    rate60
#169 unearnInfrequentAmt
#170 unearnAssistanceBasedOnNeedAmt
#174 unearnIncomeBasedOnNeedAmt
#Oct 26 2011 review V55
#25 55	1810	r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt - up to $60 of unearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt (not < 0)	r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
rate60                                            = 60
unearnInfrequentAmt                               = manager.get_answer_by_question_name('unearnInfrequentAmt')
unearnAssistanceBasedOnNeedAmt                    = manager.get_answer_by_question_name('unearnAssistanceBasedOnNeedAmt')
unearnIncomeBasedOnNeedAmt                        = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
if unearnInfrequentAmt.to_f > rate60 then
  upto60ofUnearnInfrequentAmt = 60
else
  upto60ofUnearnInfrequentAmt = unearnInfrequentAmt.to_f
end
[(Float(r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - upto60ofUnearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt.to_f - unearnIncomeBasedOnNeedAmt.to_f), 0].max
"
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#55	1815	r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt = r_SsiUnearnSpouseDeemAmt - up to $60 of unearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt - unearnIncomeBasedOnNeedAmt (not < 0)	
#r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt')
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt.operation = "
r_SsiUnearnSpouseDeemAmt        = WebCalc.find_by_name('r_SsiUnearnSpouseDeemAmt')
rate60                          = 60
unearnInfrequentAmt             = manager.get_answer_by_question_name('unearnInfrequentAmt')
unearnAssistanceBasedOnNeedAmt  = manager.get_answer_by_question_name('unearnAssistanceBasedOnNeedAmt')
unearnIncomeBasedOnNeedAmt      = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
if unearnInfrequentAmt.to_f > rate60 then
  upto60ofUnearnInfrequentAmt = 60
else
  upto60ofUnearnInfrequentAmt = unearnInfrequentAmt.to_f
end
 [(Float(r_SsiUnearnSpouseDeemAmt.calculate manager) - upto60ofUnearnInfrequentAmt - unearnAssistanceBasedOnNeedAmt.to_f - unearnIncomeBasedOnNeedAmt.to_f), 0].max
"
@r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt.save!

#25	1830	r_SsiUnearnMinusGenExcludeSpouseDeemAmt = r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeSpouseDeemAmt
#=MAX(0;E185-E173)
#185 r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt
#173 rateGenExcludeAmt
#Oct 26, 2011 review based on v55
#25 55	1830	r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
rateGenExcludeAmt                                                         = WebCalc.find_by_name('rateGenExcludeAmt')
[0, (Float(r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(rateGenExcludeAmt.calculate manager))].max
"
@r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 revision based on v55,  name same new ref#
#55	1835	r_SsiUnearnMinusGenExcludeSpouseDeemAmt = r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt - rateGenExcludeAmt (Not < 0)	
#r_SsiUnearnMinusGenExcludeSpouseDeemAmt
@r_SsiUnearnMinusGenExcludeSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnearnMinusGenExcludeSpouseDeemAmt')
@r_SsiUnearnMinusGenExcludeSpouseDeemAmt.operation = "
r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt')
rateGenExcludeAmt                               = WebCalc.find_by_name('rateGenExcludeAmt')

[0, (Float(r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt.calculate manager) - Float(rateGenExcludeAmt.calculate manager))].max
"
@r_SsiUnearnMinusGenExcludeSpouseDeemAmt.save!

#25	1850	r_UnearnForSsiCalcSpouseDeemAmt = r_SsiUnearnMinusGenExcludeSpouseDeemAmt + unearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcSpouseDeemAmt
#=E187+E$174
#187 r_SsiUnearnMinusGenExcludeSpouseDeemAmt
#174 unearnIncomeBasedOnNeedAmt
#oct 26, 2011 review based on v55
#25 55	1850	r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt + unearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
unearnIncomeBasedOnNeedAmt                                        = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
(Float(r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) + unearnIncomeBasedOnNeedAmt.to_f)
"
@r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review based on Wbk v55
#55	1855	r_UnearnForSsiCalcSpouseDeemAmt = r_SsiUnearnMinusGenExcludeSpouseDeemAmt + unearnIncomeBasedOnNeedAmt	
#r_UnearnForSsiCalcSpouseDeemAmt
@r_UnearnForSsiCalcSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_UnearnForSsiCalcSpouseDeemAmt')
@r_UnearnForSsiCalcSpouseDeemAmt.operation = "
r_SsiUnearnMinusGenExcludeSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusGenExcludeSpouseDeemAmt')
unearnIncomeBasedOnNeedAmt              = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
(Float(r_SsiUnearnMinusGenExcludeSpouseDeemAmt.calculate manager) + unearnIncomeBasedOnNeedAmt.to_f)
"
@r_UnearnForSsiCalcSpouseDeemAmt.save!

#25	1870	r_SsiUnusedGenExcludeSpouseDeemAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeSpouseDeemAmt
#=MAX(0;E$173-E185)
#173 rateGenExcludeAmt
#185 r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt
#OCt 26 2011 review based on v55
#25 55	1870	r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
rateGenExcludeAmt                                                        = WebCalc.find_by_name('rateGenExcludeAmt')
r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
[0, (Float(rateGenExcludeAmt.calculate manager) - Float(r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager))].max
"
@r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#OCt 26 2011 review, same name diff ref number in 55
#55	1875	r_SsiUnusedGenExcludeSpouseDeemAmt = rateGenExcludeAmt - r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt (Cannot be < 0)	
#r_SsiUnusedGenExcludeSpouseDeemAmt
@r_SsiUnusedGenExcludeSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUnusedGenExcludeSpouseDeemAmt')
@r_SsiUnusedGenExcludeSpouseDeemAmt.operation = "
rateGenExcludeAmt                               = WebCalc.find_by_name('rateGenExcludeAmt')
r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt = WebCalc.find_by_name('r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt')
[0, (Float(rateGenExcludeAmt.calculate manager) - Float(r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt.calculate manager))].max
"
@r_SsiUnusedGenExcludeSpouseDeemAmt.save!

#25	2030	r_SeiePlusIrweAmt = Minimum of (ssiOrCaidEarnAmt OR (seieAmt + ssiCaidIrweAmt))	
#r_SeiePlusIrweAmt
#=MIN(E197;E202+E204)
#197 ssiOrCaidEarnAmt
#202 seieAmt
#204 ssiCaidIrweAmt
@r_SeiePlusIrweAmt  = WebCalc.find_or_create_by_name(:name => 'r_SeiePlusIrweAmt')
@r_SeiePlusIrweAmt.operation = "
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
seieAmt = manager.get_answer_by_question_name('seieAmt')
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
[ssiOrCaidEarnAmt.to_f, (seieAmt.to_f + ssiCaidIrweAmt.to_f)].min
"
@r_SeiePlusIrweAmt.save!

#25	2050	r_SpouseSeiePlusIrweAmt = Minimum of (spouseSsiOrCaidEarnAmt OR (spouseSeieAmt + spouseSsiCaidIrweAmt))	
#r_SpouseSeiePlusIrweAmt
#=MIN(E198;E203+E205)
#198 spouseSsiOrCaidEarnAmt
#203 spouseSeieAmt
#205 spouseSsiCaidIrweAmt
@r_SpouseSeiePlusIrweAmt  = WebCalc.find_or_create_by_name(:name => 'r_SpouseSeiePlusIrweAmt')
@r_SpouseSeiePlusIrweAmt.operation = "
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
[spouseSsiOrCaidEarnAmt.to_f, (spouseSeieAmt.to_f + spouseSsiCaidIrweAmt.to_f)].min
"
@r_SpouseSeiePlusIrweAmt.save!

#25	2070	r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt = IF ssiGet = Y, 
#THEN ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - r_SsiUnusedGenExcludeNoSpouseDeemAmt - rateEarnedIncDisregardAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt
#=MAX(0;IF(E194="YES";E197+E198-E199-E201;0))
#194 ssiGet
#197 ssiOrCaidEarnAmt
#198 spouseSsiOrCaidEarnAmt
#199 r_SsiUnusedGenExcludeNoSpouseDeemAmt
#201 rateEarnedIncDisregardAmt

#note updated in WorkBook 54
#25 54	2070	r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt = IF (ssiGet = Y OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b=TRUE), 
#THEN ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - r_SsiUnusedGenExcludeNoSpouseDeemAmt - rateEarnedIncDisregardAmt, ELSE 0 (not < 0)	r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt
#review
#review on Oct 26 2011 per 55
#25 54 55	2070	r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE, THEN ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt 
#- rateEarnedIncDisregardAmt - earnInfrequentAmt - spouseEarnInfrequentAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_VA_CaidCovGroupSsiPsdcPadc1619b                             = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
ssiOrCaidEarnAmt                                              = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt                                        = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
rateEarnedIncDisregardAmt                                     = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
earnInfrequentAmt                                             = manager.get_answer_by_question_name('earnInfrequentAmt')
spouseEarnInfrequentAmt                                       = manager.get_answer_by_question_name('spouseEarnInfrequentAmt')

if ((r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true) then
  [(ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f - Float(r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(rateEarnedIncDisregardAmt.calculate manager) - earnInfrequentAmt.to_f - spouseEarnInfrequentAmt.to_f) , 0].max
else
  0
end
"
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#oct 26 2011 review
#55	2075	r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt = IF ssiGet = Y, THEN ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - r_SsiUnusedGenExcludeNoSpouseDeemAmt - rateEarnedIncDisregardAmt - earnInfrequentAmt - spouseEarnInfrequentAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt')
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt.operation = "
ssiGet                                  = manager.get_answer_by_question_name('ssiGet')
ssiOrCaidEarnAmt                        = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt                  = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
r_SsiUnusedGenExcludeNoSpouseDeemAmt    = WebCalc.find_by_name('r_SsiUnusedGenExcludeNoSpouseDeemAmt')
rateEarnedIncDisregardAmt               = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
earnInfrequentAmt                       = manager.get_answer_by_question_name('earnInfrequentAmt')
spouseEarnInfrequentAmt                 = manager.get_answer_by_question_name('spouseEarnInfrequentAmt')
if (ssiGet == 'Yes') then
  [(ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f - Float(r_SsiUnusedGenExcludeNoSpouseDeemAmt.calculate manager) - Float(rateEarnedIncDisregardAmt.calculate manager) - earnInfrequentAmt.to_f - spouseEarnInfrequentAmt.to_f) , 0].max
else
  0
end
"
@r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt.save!

#25	2090	r_EarnBeforeDivideNoSpouseDeemAmt = r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt - r_SeiePlusIrweAmt - r_SpouseSeiePlusIrweAmt (Not < 0)	
#r_EarnBeforeDivideNoSpouseDeemAmt
#=MAX(0;E211-E207-E209)
#211 r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt
#207 r_SeiePlusIrweAmt
#209 r_SpouseSeiePlusIrweAmt
#oct 26 2011 review
#25 55	2090	r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - r_SeiePlusIrweAmt - r_SpouseSeiePlusIrweAmt (Not < 0)	
#r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_SeiePlusIrweAmt                                                     = WebCalc.find_by_name('r_SeiePlusIrweAmt')
r_SpouseSeiePlusIrweAmt                                               = WebCalc.find_by_name('r_SpouseSeiePlusIrweAmt')
[0, (Float(r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(r_SeiePlusIrweAmt.calculate manager) - Float(r_SpouseSeiePlusIrweAmt.calculate manager))].max
"
@r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#55	2095	r_EarnBeforeDivideNoSpouseDeemAmt = r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt - r_SeiePlusIrweAmt - r_SpouseSeiePlusIrweAmt (Not < 0)	
#r_EarnBeforeDivideNoSpouseDeemAmt  Oct 26 2011 review
@r_EarnBeforeDivideNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnBeforeDivideNoSpouseDeemAmt')
@r_EarnBeforeDivideNoSpouseDeemAmt.operation = "
r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt = WebCalc.find_by_name('r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt')
r_SeiePlusIrweAmt                           = WebCalc.find_by_name('r_SeiePlusIrweAmt')
r_SpouseSeiePlusIrweAmt                     = WebCalc.find_by_name('r_SpouseSeiePlusIrweAmt')
[0, (Float(r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt.calculate manager) - Float(r_SeiePlusIrweAmt.calculate manager) - Float(r_SpouseSeiePlusIrweAmt.calculate manager))].max
"
@r_EarnBeforeDivideNoSpouseDeemAmt.save!

#25	2110	r_EarnAfterDivideNoSpouseDeemAmt = r_EarnBeforeDivideNoSpouseDeemAmt divided by 2	
#r_EarnAfterDivideNoSpouseDeemAmt
#=E213/2
#213 r_EarnBeforeDivideNoSpouseDeemAmt
#oct 26 2011 review
#25 55	2110	r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt divided by 2	
#r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
(Float(r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)/2)
"
@r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review v55
#55	2115	r_EarnAfterDivideNoSpouseDeemAmt = r_EarnBeforeDivideNoSpouseDeemAmt divided by 2	
#r_EarnAfterDivideNoSpouseDeemAmt
@r_EarnAfterDivideNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnAfterDivideNoSpouseDeemAmt')
@r_EarnAfterDivideNoSpouseDeemAmt.operation = "
r_EarnBeforeDivideNoSpouseDeemAmt = WebCalc.find_by_name('r_EarnBeforeDivideNoSpouseDeemAmt')
(Float(r_EarnBeforeDivideNoSpouseDeemAmt.calculate manager)/2)
"
@r_EarnAfterDivideNoSpouseDeemAmt.save!


#25	2130	r_EarnMinusGenAndEarnExcludeSpouseDeemAmt = IF ssiSpouseDeemEarnAmt + ssiSpouseDeemUnearnAmt > 0, THEN ssiOrCaidEarnAmt + ssiSpouseDeemEarnAmt 
#      - r_SsiUnusedGenExcludeSpouseDeemAmt - rateEarnedIncDisregardAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeSpouseDeemAmt
#=IF(E195+E196>0;MAX(0;E197+E195-E200-E201);0)
#195 ssiSpouseDeemEarnAmt
#196 ssiSpouseDeemUnearnAmt
#197 ssiOrCaidEarnAmt
#200 r_SsiUnusedGenExcludeSpouseDeemAmt
#201 rateEarnedIncDisregardAmt
#Oct 26 2011 review v55
#25 55	2130	r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt = IF ssiSpouseDeemEarnAmt + ssiSpouseDeemUnearnAmt > 0, THEN ssiOrCaidEarnAmt + ssiSpouseDeemEarnAmt - r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt - rateEarnedIncDisregardAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
ssiSpouseDeemEarnAmt                                        = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
ssiSpouseDeemUnearnAmt                                      = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiOrCaidEarnAmt                                            = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
rateEarnedIncDisregardAmt                                   = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
if (ssiSpouseDeemEarnAmt.to_f + ssiSpouseDeemUnearnAmt.to_f > 0) then 
  [(ssiOrCaidEarnAmt.to_f + ssiSpouseDeemEarnAmt.to_f - Float(r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(rateEarnedIncDisregardAmt.calculate manager)), 0].max
else 
   0
end
"
@r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review
#55	2135	r_EarnMinusGenAndEarnExcludeSpouseDeemAmt = IF ssiSpouseDeemEarnAmt + ssiSpouseDeemUnearnAmt > 0, THEN ssiOrCaidEarnAmt + ssiSpouseDeemEarnAmt - r_SsiUnusedGenExcludeSpouseDeemAmt - rateEarnedIncDisregardAmt, ELSE 0 (not < 0)	
#r_EarnMinusGenAndEarnExcludeSpouseDeemAmt
@r_EarnMinusGenAndEarnExcludeSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnMinusGenAndEarnExcludeSpouseDeemAmt')
@r_EarnMinusGenAndEarnExcludeSpouseDeemAmt.operation = "
ssiSpouseDeemEarnAmt                = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
ssiSpouseDeemUnearnAmt              = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiOrCaidEarnAmt                    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
r_SsiUnusedGenExcludeSpouseDeemAmt  = WebCalc.find_by_name('r_SsiUnusedGenExcludeSpouseDeemAmt')
rateEarnedIncDisregardAmt           = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
if (ssiSpouseDeemEarnAmt.to_f + ssiSpouseDeemUnearnAmt.to_f > 0) then 
  [(ssiOrCaidEarnAmt.to_f + ssiSpouseDeemEarnAmt.to_f - Float(r_SsiUnusedGenExcludeSpouseDeemAmt.calculate manager) - Float(rateEarnedIncDisregardAmt.calculate manager)), 0].max
else 
   0
end
"
@r_EarnMinusGenAndEarnExcludeSpouseDeemAmt.save!

#25	2150	r_EarnBeforeDivideSpouseDeemAmt = r_EarnMinusGenAndEarnExcludeSpouseDeemAmt - r_SeiePlusIrweAmt (not < 0)	
#r_EarnBeforeDivideSpouseDeemAmt
#=MAX(0;E217-E207)
#217 r_EarnMinusGenAndEarnExcludeSpouseDeemAmt
#207 r_SeiePlusIrweAmt

#Oct 26 2011 Review v55
#25 55	2150	r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt - r_SeiePlusIrweAmt (not < 0)	
#r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_SeiePlusIrweAmt                                                  = WebCalc.find_by_name('r_SeiePlusIrweAmt')
[0, (Float(r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - Float(r_SeiePlusIrweAmt.calculate manager))].max
"
@r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!


#Oct 26 2011 review Diff ref# same calc
#55	2155	r_EarnBeforeDivideSpouseDeemAmt = r_EarnMinusGenAndEarnExcludeSpouseDeemAmt - r_SeiePlusIrweAmt (not < 0)	
#r_EarnBeforeDivideSpouseDeemAmt
@r_EarnBeforeDivideSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnBeforeDivideSpouseDeemAmt')
@r_EarnBeforeDivideSpouseDeemAmt.operation = "
r_EarnMinusGenAndEarnExcludeSpouseDeemAmt = WebCalc.find_by_name('r_EarnMinusGenAndEarnExcludeSpouseDeemAmt')
r_SeiePlusIrweAmt                         = WebCalc.find_by_name('r_SeiePlusIrweAmt')
[0, (Float(r_EarnMinusGenAndEarnExcludeSpouseDeemAmt.calculate manager) - Float(r_SeiePlusIrweAmt.calculate manager))].max
"
@r_EarnBeforeDivideSpouseDeemAmt.save!

#25	2170	r_EarnAfterDivideSpouseDeemAmt = r_EarnBeforeDivideSpouseDeemAmt divided by 2	
#r_EarnAfterDivideSpouseDeemAmt
#=E219/2
#219 r_EarnBeforeDivideSpouseDeemAmt
#oct 26 2011 review based on V55
#25 55	2170	r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt divided by 2	
#r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
(Float(r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)/2)
"
@r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#oct 26 2011 review based on WB v55
#55	2175	r_EarnAfterDivideSpouseDeemAmt = r_EarnBeforeDivideSpouseDeemAmt divided by 2	
#r_EarnAfterDivideSpouseDeemAmt
@r_EarnAfterDivideSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_EarnAfterDivideSpouseDeemAmt')
@r_EarnAfterDivideSpouseDeemAmt.operation = "
r_EarnBeforeDivideSpouseDeemAmt = WebCalc.find_by_name('r_EarnBeforeDivideSpouseDeemAmt')
(Float(r_EarnBeforeDivideSpouseDeemAmt.calculate manager)/2)
"
@r_EarnAfterDivideSpouseDeemAmt.save!

#25	2260	IF blind = N AND ssiGetFinalDetermination = N AND (ssiOrCaidEarnAmt - sgaIrweAmt) > rateSgaDisabledAmt, THEN TRUE. ELSE FALSE	
#r_SgaExceededNotSsiElig
#=IF(AND(E224="NO";E225="NO";(E227-E228)>E226);TRUE();FALSE())
#224 blind
#225 ssiGetFinalDetermination
#227 ssiOrCaidEarnAmt
#228 sgaIrweAmt
#226 rateSgaDisabledAmt
@r_SgaExceededNotSsiElig  = WebCalc.find_or_create_by_name(:name => 'r_SgaExceededNotSsiElig')
@r_SgaExceededNotSsiElig.operation = "
blind = manager.get_answer_by_question_name('blind')
ssiGetFinalDetermination  = manager.get_answer_by_question_name('ssiGetFinalDetermination')
ssiOrCaidEarnAmt          = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
sgaIrweAmt                = manager.get_answer_by_question_name('sgaIrweAmt')
rateSgaDisabledAmt        = WebCalc.find_by_name('rateSgaDisabledAmt')
if blind == 'No' && ssiGetFinalDetermination == 'No' && ((ssiOrCaidEarnAmt.to_f - sgaIrweAmt.to_f) > Float(rateSgaDisabledAmt.calculate manager)) then
   true
else 
  false
end
"
@r_SgaExceededNotSsiElig.save!

#25	2380	r_TotalIncMinusBweNoSpouseDeemAmt = r_UnearnForSsiCalcNoSpouseDeemAmt + r_EarnAfterDivideNoSpouseDeemAmt - bweAmt - spouseBweAmt (not < 0)	
#r_TotalIncMinusBweNoSpouseDeemAmt
#=MAX(0;E233+E235-E237-E238)
#233 r_UnearnForSsiCalcNoSpouseDeemAmt
#235 r_EarnAfterDivideNoSpouseDeemAmt
#237 bweAmt
#238 spouseBweAmt
#Oct 26 2011 review based on v55
#25 55	2380	r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt + r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - bweAmt - spouseBweAmt (not < 0)	
#r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt   = WebCalc.find_by_name('r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
bweAmt                                                      = manager.get_answer_by_question_name('bweAmt')
spouseBweAmt                                                = manager.get_answer_by_question_name('spouseBweAmt')
[0, (Float(r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) + Float(r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - bweAmt.to_f - spouseBweAmt.to_f)].max
"
@r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review based on wb v 55
#55	2385	r_TotalIncMinusBweNoSpouseDeemAmt = r_UnearnForSsiCalcNoSpouseDeemAmt + r_EarnAfterDivideNoSpouseDeemAmt - bweAmt - spouseBweAmt (not < 0)	
#r_TotalIncMinusBweNoSpouseDeemAmt
@r_TotalIncMinusBweNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBweNoSpouseDeemAmt')
@r_TotalIncMinusBweNoSpouseDeemAmt.operation = "
r_UnearnForSsiCalcNoSpouseDeemAmt = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemAmt')
r_EarnAfterDivideNoSpouseDeemAmt  = WebCalc.find_by_name('r_EarnAfterDivideNoSpouseDeemAmt')
bweAmt                            = manager.get_answer_by_question_name('bweAmt')
spouseBweAmt                      = manager.get_answer_by_question_name('spouseBweAmt')
[0, (Float(r_UnearnForSsiCalcNoSpouseDeemAmt.calculate manager) + Float(r_EarnAfterDivideNoSpouseDeemAmt.calculate manager) - bweAmt.to_f - spouseBweAmt.to_f)].max
"
@r_TotalIncMinusBweNoSpouseDeemAmt.save!

#25	2400	r_TotalIncMinusBweSpouseDeemAmt = r_UnearnForSsiCalcSpouseDeemAmt + r_EarnAfterDivideSpouseDeemAmt - bweAmt (not < 0)	
#r_TotalIncMinusBweSpouseDeemAmt
#=MAX(0;E234+E236-E237)
#234 r_UnearnForSsiCalcSpouseDeemAmt
#236 r_EarnAfterDivideSpouseDeemAmt
#237 bweAmt
#Oct 26 2011 review wb v55
#25 55	2400	r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt + r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt - bweAmt (not < 0)	
#r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
bweAmt                                                   = manager.get_answer_by_question_name('bweAmt')
[0, (Float(r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) + Float(r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - bweAmt.to_f)].max
"
@r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 26 2011 review wb 55
#55	2405	r_TotalIncMinusBweSpouseDeemAmt = r_UnearnForSsiCalcSpouseDeemAmt + r_EarnAfterDivideSpouseDeemAmt - bweAmt (not < 0)	
#r_TotalIncMinusBweSpouseDeemAmt
@r_TotalIncMinusBweSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBweSpouseDeemAmt')
@r_TotalIncMinusBweSpouseDeemAmt.operation = "
r_UnearnForSsiCalcSpouseDeemAmt = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemAmt')
r_EarnAfterDivideSpouseDeemAmt  = WebCalc.find_by_name('r_EarnAfterDivideSpouseDeemAmt')
bweAmt                          = manager.get_answer_by_question_name('bweAmt')
[0, (Float(r_UnearnForSsiCalcSpouseDeemAmt.calculate manager) + Float(r_EarnAfterDivideSpouseDeemAmt.calculate manager) - bweAmt.to_f)].max
"
@r_TotalIncMinusBweSpouseDeemAmt.save!

#25	2420	r_TotalIncMinusBwePassNoSpouseDeemAmt = r_TotalIncMinusBweNoSpouseDeemAmt - passAmt - spousePassAmt (not < 0)	
#r_TotalIncMinusBwePassNoSpouseDeemAmt
#=MAX(0;E242-E239-E240)
#242 r_TotalIncMinusBweNoSpouseDeemAmt
#239 passAmt
#240 spousePassAmt

#oct 26 2011 review based on Wb 55
#25 55	2420	r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - passAmt - spousePassAmt (not < 0)	
#r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
passAmt                                                    = manager.get_answer_by_question_name('passAmt')
spousePassAmt                                              = manager.get_answer_by_question_name('spousePassAmt')
[0, (Float(r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - passAmt.to_f - spousePassAmt.to_f)].max
"
@r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#continue on Thursday Oct 27th
#55	2425	r_TotalIncMinusBwePassNoSpouseDeemAmt = r_TotalIncMinusBweNoSpouseDeemAmt - passAmt - spousePassAmt (not < 0)	
#r_TotalIncMinusBwePassNoSpouseDeemAmt
@r_TotalIncMinusBwePassNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBwePassNoSpouseDeemAmt')
@r_TotalIncMinusBwePassNoSpouseDeemAmt.operation = "
r_TotalIncMinusBweNoSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBweNoSpouseDeemAmt')
passAmt                           = manager.get_answer_by_question_name('passAmt')
spousePassAmt                     = manager.get_answer_by_question_name('spousePassAmt')
[0, (Float(r_TotalIncMinusBweNoSpouseDeemAmt.calculate manager) - passAmt.to_f - spousePassAmt.to_f)].max
"
@r_TotalIncMinusBwePassNoSpouseDeemAmt.save!

#25	2440	r_TotalIncMinusBwePassSpouseDeemAmt = r_TotalIncMinusBweSpouseDeemAmt - passAmt (not< 0)	
#r_TotalIncMinusBwePassSpouseDeemAmt
#=MAX(0;E244-E239)
#244 r_TotalIncMinusBweSpouseDeemAmt
#239 passAmt

#Oct 27th edit v55 of workbook
#2440	r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt = r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt - passAmt (not< 0)	
#r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
@r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt.operation = "
r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
passAmt                                                  = manager.get_answer_by_question_name('passAmt')
[0, (Float(r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - passAmt.to_f)].max
"
@r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 27 edit
#55	2445	r_TotalIncMinusBwePassSpouseDeemAmt = r_TotalIncMinusBweSpouseDeemAmt - passAmt (not< 0)	
#r_TotalIncMinusBwePassSpouseDeemAmt
@r_TotalIncMinusBwePassSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_TotalIncMinusBwePassSpouseDeemAmt')
@r_TotalIncMinusBwePassSpouseDeemAmt.operation = "
r_TotalIncMinusBweSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBweSpouseDeemAmt')
passAmt                         = manager.get_answer_by_question_name('passAmt')
[0, (Float(r_TotalIncMinusBweSpouseDeemAmt.calculate manager) - passAmt.to_f)].max
"
@r_TotalIncMinusBwePassSpouseDeemAmt.save!

#25	2590	r_FbrNoSpouseDeemAmt = IF ssiGet = Y AND spouseSsiGet <> Y AND inKindThird <> Y, THEN rateFbrAmt, 
#ELSE IF ssiGet = Y AND spouseSsiGet = Y AND inKindThird <> Y, THEN rateFbrCoupleAmt, 
#ELSE IF ssiGet = Y AND spouseSsiGet <> Y AND inKindThird = Y, THEN rateTwoThirdsFbrAmt, 
#ELSE IF ssiGet = Y AND spouseSsiGet = Y AND inKindThird = Y, THEN rateTwoThirdsFbrCoupleAmt, ELSE 0	
#r_FbrNoSpouseDeemAmt
#=IF(AND(E256="YES";E257<>"YES";E253<>"YES");E251;
#IF(AND(E256="YES";E257="YES";E253<>"YES");E252;
#IF(AND(E256="YES";E257<>"YES";E253="YES");E254;
#IF(AND(E256="YES";E257="YES";E253="YES");E255;0))))
#256 ssiGet
#257 spouseSsiGet
#253 inKindThird
#251 rateFbrAmt
#252 rateFbrCoupleAmt
#254 rateTwoThirdsFbrAmt
#255 rateTwoThirdsFbrCoupleAmt


#oct 27 edit v55 of workbook
#25 55	2590	r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt = (IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND 
#(    IF spouseSsiGet <> Y AND inKindThird <> Y, THEN rateFbrAmt, 
#ELSE IF spouseSsiGet = Y AND inKindThird <> Y, THEN rateFbrCoupleAmt, 
#ELSE IF spouseSsiGet <> Y AND inKindThird = Y, THEN rateTwoThirdsFbrAmt, 
#ELSE IF spouseSsiGet = Y AND inKindThird = Y, THEN rateTwoThirdsFbrCoupleAmt), ELSE 0	
#r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt
#Nov 2 review for pdac using WB 57
#r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt = 
# 1 (IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND (IF spouseSsiGet <> Y AND r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b <> TRUE AND inKindThird <> Y, THEN rateFbrAmt, 
# 2 ELSE IF (spouseSsiGet = Y OR r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE) AND inKindThird <> Y, THEN rateFbrCoupleAmt,
# 3 ELSE IF spouseSsiGet <> Y AND r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b <> TRUE AND inKindThird = Y, THEN rateTwoThirdsFbrAmt, 
# 4 ELSE IF (spouseSsiGet = Y OR r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE) AND inKindThird = Y, THEN rateTwoThirdsFbrCoupleAmt), ELSE 0
# 1 =IF(AND(E307=1;E308<>"YES";E309<>1;E303<>"YES");E301;
# 2 IF(AND(E307=1;OR(E308="YES";E309=1);E303<>"YES");E302;
# 3 IF(AND(E307=1;E308<>"YES";E309<>1;E303="YES");E304;
# 4 IF(AND(E307=1;OR(E308="YES";E309=1);E303="YES");E305;0))))
#307 r_VA_CaidCovGroupPsdcPadc1619b
#308 spouseSsiGet
#309 r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b
#303 inKindThird
#305 rateTwoThirdsFbrCoupleAmt

@r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt')
@r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.operation = "
r_VA_CaidCovGroupSsiPsdcPadc1619b       = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
spouseSsiGet                            = manager.get_answer_by_question_name('spouseSsiGet')
inKindThird                             = manager.get_answer_by_question_name('inKindThird')
r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b')
rateFbrAmt                              = WebCalc.find_by_name('rateFbrAmt')
rateFbrCoupleAmt                        = WebCalc.find_by_name('rateFbrCoupleAmt')
rateTwoThirdsFbrAmt                     = WebCalc.find_by_name('rateTwoThirdsFbrAmt')
rateTwoThirdsFbrCoupleAmt               = WebCalc.find_by_name('rateTwoThirdsFbrCoupleAmt')
if (spouseSsiGet != 'Yes' && inKindThird != 'Yes' && (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true  && (r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b.calculate manager) != true ) then
   Float(rateFbrAmt.calculate manager)
elsif (inKindThird != 'Yes' && (spouseSsiGet == 'Yes' || r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b == true)) then 
   Float(rateFbrCoupleAmt.calculate manager)
elsif (inKindThird == 'Yes' && spouseSsiGet != 'Yes' && r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b != true) then
   Float(rateTwoThirdsFbrAmt.calculate manager)
elsif (inKindThird == 'Yes' && (spouseSsiGet == 'Yes' || r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b == true)) then
   Float(rateTwoThirdsFbrCoupleAmt.calculate manager)
else 
   0.00
end
"
@r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.save!

#OCc 27 review, change ref number but keep same calc and name V55
#55	2595	r_FbrNoSpouseDeemAmt = (IF ssiGet = YES) AND (IF spouseSsiGet <> Y AND inKindThird <> Y, THEN rateFbrAmt, ELSE IF spouseSsiGet = Y AND inKindThird <> Y, THEN rateFbrCoupleAmt, ELSE IF spouseSsiGet <> Y AND inKindThird = Y, THEN rateTwoThirdsFbrAmt, ELSE IF spouseSsiGet = Y AND inKindThird = Y, THEN rateTwoThirdsFbrCoupleAmt), ELSE 0	
#r_FbrNoSpouseDeemAmt
@r_FbrNoSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_FbrNoSpouseDeemAmt')
@r_FbrNoSpouseDeemAmt.operation = "
ssiGet                    = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet              = manager.get_answer_by_question_name('spouseSsiGet')
inKindThird               = manager.get_answer_by_question_name('inKindThird')
rateFbrAmt                = WebCalc.find_by_name('rateFbrAmt')
rateFbrCoupleAmt          = WebCalc.find_by_name('rateFbrCoupleAmt')
rateTwoThirdsFbrAmt       = WebCalc.find_by_name('rateTwoThirdsFbrAmt')
rateTwoThirdsFbrCoupleAmt = WebCalc.find_by_name('rateTwoThirdsFbrCoupleAmt')
if (ssiGet == 'Yes' && spouseSsiGet != 'Yes' && inKindThird != 'Yes') then
   Float(rateFbrAmt.calculate manager)
elsif (ssiGet == 'Yes' && spouseSsiGet == 'Yes' && inKindThird != 'Yes') then 
   Float(rateFbrCoupleAmt.calculate manager)
elsif (ssiGet == 'Yes' && spouseSsiGet != 'Yes' && inKindThird == 'Yes') then
   Float(rateTwoThirdsFbrAmt.calculate manager)
elsif (ssiGet == 'Yes' && spouseSsiGet == 'Yes' && inKindThird == 'Yes') then
   Float(rateTwoThirdsFbrCoupleAmt.calculate manager)
else 
   0.00
end
"
@r_FbrNoSpouseDeemAmt.save!


#25	2610	r_FbrSpouseDeemAmt = IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird <> Y, THEN rateFbrCoupleAmt, ELSE IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird = Y, THEN  rateTwoThirdsFbrCoupleAmt ELSE 0	
#r_FbrSpouseDeemAmt
#=IF(AND(E258+E259>0;E253<>"YES");E252;IF(AND(E258+E259>0;E253="YES");E255;0))
#258 ssiSpouseDeemUnearnAmt
#259 ssiSpouseDeemEarnAmt
#253 inKindThird
#252 rateFbrCoupleAmt
#255 rateTwoThirdsFbrCoupleAmt
#oct 27 add wb 55
#25 55	2610	r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt = (IF r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND (IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird <> Y, THEN rateFbrCoupleAmt, 
#ELSE IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird = Y), THEN  rateTwoThirdsFbrCoupleAmt, ELSE 0	
#r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt
#=IF(AND(E306=1;E308+E309>0;E302<>"YES");E301;IF(AND(E306=1;E308+E309>0;E302="YES");E304;0))
@r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt')
@r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.operation = "
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
ssiSpouseDeemUnearnAmt            = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt              = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
inKindThird                       = manager.get_answer_by_question_name('inKindThird')
rateFbrCoupleAmt                  = WebCalc.find_by_name('rateFbrCoupleAmt')
rateTwoThirdsFbrCoupleAmt         = WebCalc.find_by_name('rateTwoThirdsFbrCoupleAmt')
if ((r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true && ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f) > 0) && inKindThird != 'Yes') then
   Float(rateFbrCoupleAmt.calculate manager)
elsif ((r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true && ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f) > 0) && inKindThird == 'Yes')
   Float(rateTwoThirdsFbrCoupleAmt.calculate manager)
else
   0
end
"
@r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.save!

#Oct 27 edit no ref # {guess 2615} calc changed by adding ssi
#r_FbrSpouseDeemAmt = IF (ssiGet = YES) AND (ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird <> Y, THEN rateFbrCoupleAmt, ELSE IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird = Y, THEN  rateTwoThirdsFbrCoupleAmt) ELSE 0	
#r_FbrSpouseDeemAmt
#68	2615	r_FbrSpouseDeemAmt = IF (ssiGet = YES) AND (ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird <> Y, THEN rateFbrCoupleAmt, ELSE IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND inKindThird = Y, THEN  rateTwoThirdsFbrCoupleAmt) ELSE 0	
#r_FbrSpouseDeemAmt

@r_FbrSpouseDeemAmt  = WebCalc.find_or_create_by_name(:name => 'r_FbrSpouseDeemAmt')
@r_FbrSpouseDeemAmt.operation = "
ssiGet                    = manager.get_answer_by_question_name('ssiGet')
ssiSpouseDeemUnearnAmt    = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt      = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
inKindThird               = manager.get_answer_by_question_name('inKindThird')
rateFbrCoupleAmt          = WebCalc.find_by_name('rateFbrCoupleAmt')
rateTwoThirdsFbrCoupleAmt = WebCalc.find_by_name('rateTwoThirdsFbrCoupleAmt')
if (ssiGet == 'Yes' && ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f) > 0) && inKindThird != 'Yes') then
   Float(rateFbrCoupleAmt.calculate manager)
elsif (ssiGet == 'Yes' && (ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f > 0) && inKindThird == 'Yes')
   Float(rateTwoThirdsFbrCoupleAmt.calculate manager)
else
   0
end
"
@r_FbrSpouseDeemAmt.save!

#25	2630	r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt = r_FbrNoSpouseDeemAmt - r_TotalIncMinusBwePassNoSpouseDeemAmt (not < 0)	
#r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt
#=MAX(0;E263-E260)
#263 r_FbrNoSpouseDeemAmt
#260 r_TotalIncMinusBwePassNoSpouseDeemAmt
#Oct 27 revision WB 55
#25 55	2630	r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt = r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt - r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt (not < 0)	
#r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.operation = "
r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt                       = WebCalc.find_by_name('r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt')
r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
[0, (Float(r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager) - Float(r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager))].max
"
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.save!

#oct 27 2011 edit v55
#55	2635	r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt = r_FbrNoSpouseDeemAmt - r_TotalIncMinusBwePassNoSpouseDeemAmt (not < 0)	
#r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt')
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt.operation = "
r_FbrNoSpouseDeemAmt                  = WebCalc.find_by_name('r_FbrNoSpouseDeemAmt')
r_TotalIncMinusBwePassNoSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBwePassNoSpouseDeemAmt')
[0, (Float(r_FbrNoSpouseDeemAmt.calculate manager) - Float(r_TotalIncMinusBwePassNoSpouseDeemAmt.calculate manager))].max
"
@r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt.save!

#25	2650	r_SsiNoOverUnderAdjustSpouseDeemCalcAmt = r_FbrSpouseDeemAmt - r_TotalIncMinusBwePassSpouseDeemAmt (not< 0)	
#r_SsiNoOverUnderAdjustSpouseDeemCalcAmt
#=MAX(0;E265-E261)
#265 r_FbrSpouseDeemAmt
#261 r_TotalIncMinusBwePassSpouseDeemAmt
#Oct 27 2011 edit
#25 55	2650	r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt = r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt - r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt (not< 0)	
#r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt
@r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
@r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.operation = "
r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt                      = WebCalc.find_by_name('r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt')
r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
[0, (Float(r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager) - Float(r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager))].max
"
@r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.save!

#55	2655	r_SsiNoOverUnderAdjustSpouseDeemCalcAmt = r_FbrSpouseDeemAmt - r_TotalIncMinusBwePassSpouseDeemAmt (not< 0)	
#r_SsiNoOverUnderAdjustSpouseDeemCalcAmt
@r_SsiNoOverUnderAdjustSpouseDeemCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOverUnderAdjustSpouseDeemCalcAmt')
@r_SsiNoOverUnderAdjustSpouseDeemCalcAmt.operation = "
r_FbrSpouseDeemAmt                  = WebCalc.find_by_name('r_FbrSpouseDeemAmt')
r_TotalIncMinusBwePassSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBwePassSpouseDeemAmt')
[0, (Float(r_FbrSpouseDeemAmt.calculate manager) - Float(r_TotalIncMinusBwePassSpouseDeemAmt.calculate manager))].max
"
@r_SsiNoOverUnderAdjustSpouseDeemCalcAmt.save!

#25	2670	r_SsiSpousalDeemCalcsUsed = TRUE IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND r_SsiNoOverUnderAdjustSpouseDeemCalcAmt < r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt ELSE FALSE	
#r_SsiSpousalDeemCalcsUsed
#=IF(AND(E258+E259>0;E269<E267);"True";"False")
#258 ssiSpouseDeemUnearnAmt
#259 ssiSpouseDeemEarnAmt
#269 r_SsiNoOverUnderAdjustSpouseDeemCalcAmt
#267 r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt
#Oct 27 edit Wb 55
#25 55	2670	IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt < r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt, THEN r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, ELSE FALSE	
#r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
@r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b  = WebCalc.find_or_create_by_name(:name => 'r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
@r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.operation = "
ssiSpouseDeemUnearnAmt                                            = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt                                              = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
if ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f > 0) && (Float(r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) < Float(r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager)))
  true
else
  false
end
"
@r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.save!

#Oct 27 2011 review WB 55
#55	2675	IF ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0 AND r_SsiNoOverUnderAdjustSpouseDeemCalcAmt < r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt , THEN r_SsiSpousalDeemCalcsUsed = TRUE, ELSE FALSE	
#r_SsiSpousalDeemCalcsUsed
@r_SsiSpousalDeemCalcsUsed  = WebCalc.find_or_create_by_name(:name => 'r_SsiSpousalDeemCalcsUsed')
@r_SsiSpousalDeemCalcsUsed.operation = "
ssiSpouseDeemUnearnAmt                    = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt                      = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
r_SsiNoOverUnderAdjustSpouseDeemCalcAmt   = WebCalc.find_by_name('r_SsiNoOverUnderAdjustSpouseDeemCalcAmt')
r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt  = WebCalc.find_by_name('r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt')
if ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f > 0) && (Float(r_SsiNoOverUnderAdjustSpouseDeemCalcAmt.calculate manager) < Float(r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt.calculate manager)))
  true
else
  false
end
"
@r_SsiSpousalDeemCalcsUsed.save!


#25	2690	r_SsiNoOverUnderAdjustCalcAmt = IF r_SsiSpousalDeemCalcsUsed = TRUE, then r_SsiNoOverUnderAdjustSpouseDeemCalcAmt, ELSE r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt	
#r_SsiNoOverUnderAdjustCalcAmt
#=IF(E271=TRUE();E269;E267)
#271 r_SsiSpousalDeemCalcsUsed
#269 r_SsiNoOverUnderAdjustSpouseDeemCalcAmt
#267 r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt

#Oct 27 edit wb 55
#25 55	2690	r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt = IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, then r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt, ELSE r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt	
#r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
@r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt')
@r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.operation = "
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b                = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt')
if (r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == true then
  Float(r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager)
else 
  Float(r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager)
end
"
@r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.save!

#Oct 27 2011 review, change ref number but no change to calc
#55	2695	r_SsiNoOverUnderAdjustCalcAmt = IF r_SsiSpousalDeemCalcsUsed = TRUE, then r_SsiNoOverUnderAdjustSpouseDeemCalcAmt, ELSE r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt
#r_SsiNoOverUnderAdjustCalcAmt
@r_SsiNoOverUnderAdjustCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiNoOverUnderAdjustCalcAmt')
@r_SsiNoOverUnderAdjustCalcAmt.operation = "
r_SsiSpousalDeemCalcsUsed                 = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
r_SsiNoOverUnderAdjustSpouseDeemCalcAmt   = WebCalc.find_by_name('r_SsiNoOverUnderAdjustSpouseDeemCalcAmt')
r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt  = WebCalc.find_by_name('r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt')
if (r_SsiSpousalDeemCalcsUsed.calculate manager) == true then
  Float(r_SsiNoOverUnderAdjustSpouseDeemCalcAmt.calculate manager)
else 
  Float(r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt.calculate manager)
end
"
@r_SsiNoOverUnderAdjustCalcAmt.save!

#25	2780	r_SsiActualAmt = IF spouseSsiGet = Y, THEN SsiCoupleActualAmt, ELSE ssiUserActualAmt	
#r_SsiActualAmt
#=IF(E279="YES";E278;E277)
#279 spouseSsiGet
#278 SsiCoupleActualAmt
#277 ssiUserActualAmt

# revision from seed based on WB 41
#25 41	2780	r_SsiActualAmt = IF spouseSsiGet = Y, THEN ssiUserActualAmt + ssiSpouseActualAmt, ELSE ssiUserActualAmt	r_SsiActualAmt

@r_SsiActualAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiActualAmt')
@r_SsiActualAmt.operation = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiUserActualAmt = manager.get_answer_by_question_name('ssiUserActualAmt')
ssiSpouseActualAmt = manager.get_answer_by_question_name('ssiSpouseActualAmt')

if spouseSsiGet == 'Yes' then
  ssiUserActualAmt.to_f + ssiSpouseActualAmt.to_f
else 
  ssiUserActualAmt.to_f
end
"
@r_SsiActualAmt.save!

#Current Not added
#25	2800	r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust = IF Current/What-If Button = Current AND r_SsiActualAmt > r_SsiNoOverUnderAdjustCalcAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust
#=IF(AND(E276="Current";E282>E280);TRUE();FALSE())
#276 Current/What-If Button
#282 r_SsiActualAmt
#280 r_SsiNoOverUnderAdjustCalcAmt
#Bob is ignoring the current test for now
@r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust  = WebCalc.find_or_create_by_name(:name => 'r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust')
@r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust.operation = "
r_SsiActualAmt                = WebCalc.find_by_name('r_SsiActualAmt')
r_SsiActualAmt                = Float(r_SsiActualAmt.calculate manager)
r_SsiNoOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')

if (!manager.situation.what_if? && r_SsiActualAmt > Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager)) then
  true
else 
  false
end
"
@r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust.save!

#Current Not added
#25	2820	r_ActualSsiLessThanCalcSsiNoOverUnderAdjust = IF Current/What-If Button = Current AND r_SsiActualAmt < r_SsiNoOverUnderAdjustCalcAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsiLessThanCalcSsiNoOverUnderAdjust
#=IF(AND(E276="Current";E282<E280);TRUE();FALSE())
#276 Current/What-If Button
#282 r_SsiActualAmt
#280 r_SsiNoOverUnderAdjustCalcAmt
#Bob is ignoring the current test for now
@r_ActualSsiLessThanCalcSsiNoOverUnderAdjust  = WebCalc.find_or_create_by_name(:name => 'r_ActualSsiLessThanCalcSsiNoOverUnderAdjust')
@r_ActualSsiLessThanCalcSsiNoOverUnderAdjust.operation = "
r_SsiActualAmt                = WebCalc.find_by_name('r_SsiActualAmt')
r_SsiActualAmt                = Float(r_SsiActualAmt.calculate manager)
r_SsiNoOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
if (!manager.situation.what_if? && r_SsiActualAmt < Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) ) then
  true
else 
  false
end
"
@r_ActualSsiLessThanCalcSsiNoOverUnderAdjust.save!

#25	2930	r_SsiUserOverUnderAdjustCalcAmt = IF ssiGet = Y AND spouseSsiGet <> Y, THEN r_SsiNoOverUnderAdjustCalcAmt + ssiUserUnderPayAddAmt - ssiUserOverPayDeductAmt, ELSE 0 (not < 0)	
#r_SsiUserOverUnderAdjustCalcAmt
#=IF(AND(E294="YES";E295<>"YES");MAX(0;E289+E290-E291);0)
#294 ssiGet
#295 spouseSsiGet
#289 r_SsiNoOverUnderAdjustCalcAmt
#290 ssiUserUnderPayAddAmt
#291 ssiUserOverPayDeductAmt
@r_SsiUserOverUnderAdjustCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiUserOverUnderAdjustCalcAmt')
@r_SsiUserOverUnderAdjustCalcAmt.operation = "
ssiGet                        = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                  = manager.get_answer_by_question_name('spouseSsiGet')
r_SsiNoOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
ssiUserUnderPayAddAmt         = manager.get_answer_by_question_name('ssiUserUnderPayAddAmt')
ssiUserOverPayDeductAmt       = manager.get_answer_by_question_name('ssiUserOverPayDeductAmt')
if (ssiGet == 'Yes' && spouseSsiGet != 'Yes') then
   (Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) + ssiUserUnderPayAddAmt.to_f - ssiUserOverPayDeductAmt.to_f)
else
   0
end
"
@r_SsiUserOverUnderAdjustCalcAmt.save!

#25	2940	r_SsiCoupleOverUnderAdjustCalcAmt = IF ssiGet = Y AND spouseSsiGet = Y, THEN r_SsiNoOverUnderAdjustCalcAmt + ssiCoupleUnderPayAddAmt - ssiCoupleOverPayDeductAmt, ELSE 0 (not < 0)	
#r_SsiCoupleOverUnderAdjustCalcAmt
#=IF(AND(E294="YES";E295="YES");MAX(0;E289+E292-E293);0)
#294 ssiGet
#295 spouseSsiGet
#289 r_SsiNoOverUnderAdjustCalcAmt
#292 ssiCoupleUnderPayAddAmt
#293 ssiCoupleOverPayDeductAmt
@r_SsiCoupleOverUnderAdjustCalcAmt  = WebCalc.find_or_create_by_name(:name => 'r_SsiCoupleOverUnderAdjustCalcAmt')
@r_SsiCoupleOverUnderAdjustCalcAmt.operation = "
ssiGet                          = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                    = manager.get_answer_by_question_name('spouseSsiGet')
r_SsiNoOverUnderAdjustCalcAmt   = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
ssiCoupleUnderPayAddAmt         = manager.get_answer_by_question_name('ssiCoupleUnderPayAddAmt')
ssiCoupleOverPayDeductAmt       = manager.get_answer_by_question_name('ssiCoupleOverPayDeductAmt')
if (ssiGet == 'Yes' && spouseSsiGet == 'Yes') then
  (Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) + ssiCoupleUnderPayAddAmt.to_f - ssiCoupleOverPayDeductAmt.to_f)
else 
  0
end
"
@r_SsiCoupleOverUnderAdjustCalcAmt.save!

#Not adj for current
#25	3050	r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust = IF Current/What-If Button = Current AND ssiGet = Y AND spouseSsiGet <> Y AND ssiUserActualAmt <> r_SsiUserOverUnderAdjustCalcAmt, THEN TRUE, ELSE FALSE	
#r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust
#=IF(AND(E301="Current";E302="YES";E303<>"YES";E304<>E306);TRUE();FALSE())
#301 Current/What-If Button
#302 ssiGet
#303 spouseSsiGet
#304 ssiUserActualAmt
#306 r_SsiUserOverUnderAdjustCalcAmt
@r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust  = WebCalc.find_or_create_by_name(:name => 'r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust')
@r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust.operation = "
ssiGet                          = manager.get_answer_by_question_name('SsiGet')
spouseSsiGet                    = manager.get_answer_by_question_name('spouseSsiGet')
ssiUserActualAmt                = manager.get_answer_by_question_name('ssiUserActualAmt')
r_SsiUserOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiUserOverUnderAdjustCalcAmt')
if (!manager.situation.what_if? && ssiGet == 'Yes' && spouseSsiGet != 'Yes' && ssiUserActualAmt.to_f != Float(r_SsiUserOverUnderAdjustCalcAmt.calculate manager)) then
  true
else
  false
end
"
@r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust.save!

#Not adj for current
#25	3060	r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust = IF Current/What-If Button = Current AND ssiGet = Y AND spouseSsiGet = Y AND SsiCoupleActualAmt <> r_SsiCoupleOverUnderAdjustCalcAmt, THEN TRUE, ELSE FALSE	
#r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust
#=IF(AND(E301="Current";E302="YES";E303="YES";E305<>E307);TRUE();FALSE())
#301 Current/What-If Button
#302 ssiGet
#303 spouseSsiGet
#305 SsiCoupleActualAmt
#307 r_SsiCoupleOverUnderAdjustCalcAmt

#Note Adj for WB 41
#25 41	3060	r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust 
#= IF Current/What-If Button = Current 
#AND ssiGet = Y AND spouseSsiGet = Y AND (ssiUserActualAmt +  ssiSpouseActualAmt) <> r_SsiCoupleOverUnderAdjustCalcAmt, THEN TRUE, ELSE FALSE
#	r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust

@r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust  = WebCalc.find_or_create_by_name(:name => 'r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust')
@r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust.operation = "
ssiGet                            = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                      = manager.get_answer_by_question_name('spouseSsiGet')
ssiUserActualAmt                  = manager.get_answer_by_question_name('ssiUserActualAmt')
ssiSpouseActualAmt                = manager.get_answer_by_question_name('ssiSpouseActualAmt')
r_SsiCoupleOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiCoupleOverUnderAdjustCalcAmt')
if (!manager.situation.what_if? && ssiGet == 'Yes' && spouseSsiGet == 'Yes' && (ssiUserActualAmt.to_f + ssiSpouseActualAmt.to_f) != Float(r_SsiCoupleOverUnderAdjustCalcAmt.calculate manager)) then
  true
else
  false
end
"
@r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust.save!

#More webVaCalcs that need r_SpouseSsdiPayNoAdjustAmt
#WebVaCalc 570	Determine ABD Spouse's Gross Income Amounts
#WebVaCalc 580	Determine ABD Spouse's Unearned Income
#webVaCalcs 660	Spouse's Unearned Income	r_VA_CaidSpouseUnearnAmt
#=SUM(E60:E66)  FYI this is bad Karma, workbook has 2 of these entries as negative and then sums
#r_SpouseSsdiPayNoAdjustAmt
#spouseSsdiWcOrPdbDecreaseAmt
#spouseSsdiUnderPayIncreaseAmt
#spouseSsdiOverPayDecreaseAmt
#spouseUnEarnAmt
@r_VA_CaidSpouseUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseUnearnAmt')
@r_VA_CaidSpouseUnearnAmt.operation = "
r_SpouseSsdiPayNoAdjustAmt    = WebCalc.find_by_name('r_SpouseSsdiPayNoAdjustAmt')
spouseSsdiWcOrPdbDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiWcOrPdbDecreaseAmt')
spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt')
spouseSsdiOverPayDecreaseAmt  = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt')
spouseUnEarnAmt               = manager.get_answer_by_question_name('spouseUnEarnAmt') 
Float(r_SpouseSsdiPayNoAdjustAmt.calculate manager) + spouseSsdiUnderPayIncreaseAmt.to_f + spouseUnEarnAmt.to_f - spouseSsdiWcOrPdbDecreaseAmt.to_f - spouseSsdiOverPayDecreaseAmt.to_f
"
@r_VA_CaidSpouseUnearnAmt.save!

#webVaCalc 720	Spouse's Earned Income	r_VA_CaidSpouseEarnAmt
#spouseSsiOrCaidEarnAmt  This is to keep the naming convention the same
@r_VA_CaidSpouseEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseEarnAmt')
@r_VA_CaidSpouseEarnAmt.operation = "
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt.to_f
"
@r_VA_CaidSpouseEarnAmt.save!

#webVaCalc 780	Spouse's Gross Income	r_VA_CaidSpouseGrossIncomeAmt
#=SUM(E74:E77)
#r_VA_CaidSpouseUnearnAmt
#r_VA_CaidSpouseEarnAmt
@r_VA_CaidSpouseGrossIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseGrossIncomeAmt')
@r_VA_CaidSpouseGrossIncomeAmt.operation = "
r_VA_CaidSpouseUnearnAmt = WebCalc.find_by_name('r_VA_CaidSpouseUnearnAmt')
r_VA_CaidSpouseEarnAmt = WebCalc.find_by_name('r_VA_CaidSpouseEarnAmt')
Float(r_VA_CaidSpouseUnearnAmt.calculate manager) + Float(r_VA_CaidSpouseEarnAmt.calculate manager)
"
@r_VA_CaidSpouseGrossIncomeAmt.save!

#WebVaCalc 850	Couple's Earned Income	r_VA_CaidCoupleEarnAmt
#=SUM(E82:E84)
#r_VA_CaidEarnAmt
#r_VA_CaidSpouseEarnAmt
@r_VA_CaidCoupleEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleEarnAmt')
@r_VA_CaidCoupleEarnAmt.operation = "
r_VA_CaidEarnAmt = WebCalc.find_by_name('r_VA_CaidEarnAmt')
r_VA_CaidSpouseEarnAmt = WebCalc.find_by_name('r_VA_CaidSpouseEarnAmt')
Float(r_VA_CaidEarnAmt.calculate manager) + Float(r_VA_CaidSpouseEarnAmt.calculate manager)
"
@r_VA_CaidCoupleEarnAmt.save!

#WebVaCalc 910	Couple's Unearned Income	r_VA_CaidCoupleUnearnAmt
#=SUM(E87:E90)
#r_VA_CaidUnearnAmt
#r_VA_CaidSpouseUnearnAmt
@r_VA_CaidCoupleUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleUnearnAmt')
@r_VA_CaidCoupleUnearnAmt.operation = "
r_VA_CaidUnearnAmt = WebCalc.find_by_name('r_VA_CaidUnearnAmt')
r_VA_CaidSpouseUnearnAmt = WebCalc.find_by_name('r_VA_CaidSpouseUnearnAmt')
Float(r_VA_CaidUnearnAmt.calculate manager) + Float(r_VA_CaidSpouseUnearnAmt.calculate manager)
"
@r_VA_CaidCoupleUnearnAmt.save!

#WebVaCalc 970	Spouse X Bad comment in workbook's Gross Income	r_VA_CaidCoupleGrossIncomeAmt
#=SUM(E93:E96)
#r_VA_CaidCoupleUnearnAmt
#r_VA_CaidCoupleEarnAmt
@r_VA_CaidCoupleGrossIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleGrossIncomeAmt')
@r_VA_CaidCoupleGrossIncomeAmt.operation = "
r_VA_CaidCoupleUnearnAmt  = WebCalc.find_by_name('r_VA_CaidCoupleUnearnAmt')
r_VA_CaidCoupleEarnAmt    = WebCalc.find_by_name('r_VA_CaidCoupleEarnAmt')
Float(r_VA_CaidCoupleUnearnAmt.calculate manager) + Float(r_VA_CaidCoupleEarnAmt.calculate manager)
"
@r_VA_CaidCoupleGrossIncomeAmt.save!

#WebVaCalc 42	1050	Individual's Countable Unearned Income before adding back any Income Based on Need (Can't be < 0)	r_VA_CaidCountUnearnNoNeedIncomeAmt
#=IF(E103>20;MAX(0;E101-E105-E107-E109);MAX(0;E101-E103-E105-E107-E109))  $20 is the general exclusion
#103 unearnInfrequentAmt For VA Medicaid, this is an all or none amount.  If the amount is $20 per month or less, count all of it as infreq or irreg, but if it is more than $20, none of it counts.  (For VA Medicaid, see S0810.410.)
#101 r_VA_CaidUnearnAmt
#105 unearnIncomeBasedOnNeedAmt
#107 unearnAssistanceBasedOnNeedAmt
#109 rateGenExcludeAmt
@r_VA_CaidCountUnearnNoNeedIncomeAmt= WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountUnearnNoNeedIncomeAmt')
@r_VA_CaidCountUnearnNoNeedIncomeAmt.operation = "
unearnInfrequentAmt             = manager.get_answer_by_question_name('unearnInfrequentAmt')
r_VA_CaidUnearnAmt              = WebCalc.find_by_name('r_VA_CaidUnearnAmt')
unearnIncomeBasedOnNeedAmt      = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
unearnAssistanceBasedOnNeedAmt  = manager.get_answer_by_question_name('unearnAssistanceBasedOnNeedAmt')
rateGenExcludeAmt               = WebCalc.find_by_name('rateGenExcludeAmt')
if unearnInfrequentAmt.to_f > Float(rateGenExcludeAmt.calculate manager) then
  [(Float(r_VA_CaidUnearnAmt.calculate manager) - unearnIncomeBasedOnNeedAmt.to_f - unearnAssistanceBasedOnNeedAmt.to_f - Float(rateGenExcludeAmt.calculate manager)), 0].max
else
  [(Float(r_VA_CaidUnearnAmt.calculate manager) - unearnInfrequentAmt.to_f  - unearnIncomeBasedOnNeedAmt.to_f - unearnAssistanceBasedOnNeedAmt.to_f - Float(rateGenExcludeAmt.calculate manager)), 0].max
end
"
@r_VA_CaidCountUnearnNoNeedIncomeAmt.save!

#WebVaCalc 42 43	1054	Individual's Countable Unearned Income to be used in calculating Medicaid income eligibility	r_VA_CaidCountUnearnAmt
#=E111+E113
#r_VA_CaidCountUnearnNoNeedIncomeAmt Add Back In unearnIncomeBasedOnNeedAmt
@r_VA_CaidCountUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountUnearnAmt')
@r_VA_CaidCountUnearnAmt.operation = "
r_VA_CaidCountUnearnNoNeedIncomeAmt = WebCalc.find_by_name('r_VA_CaidCountUnearnNoNeedIncomeAmt')
unearnIncomeBasedOnNeedAmt          = manager.get_answer_by_question_name('unearnIncomeBasedOnNeedAmt')
(Float(r_VA_CaidCountUnearnNoNeedIncomeAmt.calculate manager) + unearnIncomeBasedOnNeedAmt.to_f )
"
@r_VA_CaidCountUnearnAmt.save!

#WebVaCalc 42	1080	Amount of General Exclusion to subtract from earned income	r_VA_CaidExcessGenExclude
#=IF(E109>E111;E109-E111;0)
#109 rateGenExcludeAmt
#111 r_VA_CaidCountUnearnNoNeedIncomeAmt
@r_VA_CaidExcessGenExclude  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidExcessGenExclude')
@r_VA_CaidExcessGenExclude.operation = "
rateGenExcludeAmt                   = WebCalc.find_by_name('rateGenExcludeAmt')
r_VA_CaidCountUnearnNoNeedIncomeAmt = WebCalc.find_by_name('r_VA_CaidCountUnearnNoNeedIncomeAmt')
if Float(rateGenExcludeAmt.calculate manager) > Float(r_VA_CaidCountUnearnNoNeedIncomeAmt.calculate manager) then
  Float(rateGenExcludeAmt.calculate manager) - Float(r_VA_CaidCountUnearnNoNeedIncomeAmt.calculate manager)
 else
   0
end
"
@r_VA_CaidExcessGenExclude.save!

#WebVaCalc 42 43	1240	Countable earned income before dividing by 2 (can't be < 0)	r_VA_CaidCountEarnAmtNoDivide
#=MAX(0;E120-(E122+E124+MAX(E126;E128)))
#120 r_VA_CaidEarnAmt
#122 r_VA_CaidExcessGenExclude
#124 rateEarnedIncDisregardAmt
#126 ssiCaidIrweAmt
#128 sgaIrweAmt
@r_VA_CaidCountEarnAmtNoDivide  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountEarnAmtNoDivide')
@r_VA_CaidCountEarnAmtNoDivide.operation = "
r_VA_CaidEarnAmt = WebCalc.find_by_name('r_VA_CaidEarnAmt')
r_VA_CaidExcessGenExclude = WebCalc.find_by_name('r_VA_CaidExcessGenExclude')
rateEarnedIncDisregardAmt = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
ssiCaidIrweAmt            = manager.get_answer_by_question_name('ssiCaidIrweAmt')
sgaIrweAmt                = manager.get_answer_by_question_name('sgaIrweAmt')
[(Float(r_VA_CaidEarnAmt.calculate manager) - (Float(r_VA_CaidExcessGenExclude.calculate manager) + Float(rateEarnedIncDisregardAmt.calculate manager) + [ssiCaidIrweAmt.to_f, sgaIrweAmt.to_f].max)), 0].max
"
@r_VA_CaidCountEarnAmtNoDivide.save!

#WebVaCalc 43	1260	Countable earned income before BWE 	r_VA_CaidCountEarnAmtNoBWE
#=E130/2
#e130 r_VA_CaidCountEarnAmtNoDivide
@r_VA_CaidCountEarnAmtNoBWE  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountEarnAmtNoBWE')
@r_VA_CaidCountEarnAmtNoBWE.operation = "
r_VA_CaidCountEarnAmtNoDivide = WebCalc.find_by_name('r_VA_CaidCountEarnAmtNoDivide')
Float(r_VA_CaidCountEarnAmtNoDivide.calculate manager)/2
"
@r_VA_CaidCountEarnAmtNoBWE.save!

#WebVaCalc 42 43	1340	Individual's Countable Earned Income (Can't be < 0)	r_VA_CaidCountEarnAmt
#=MAX(0;E132-E134)
#132 r_VA_CaidCountEarnAmtNoBWE
#134 bweAmt
@r_VA_CaidCountEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountEarnAmt')
@r_VA_CaidCountEarnAmt.operation = "
r_VA_CaidCountEarnAmtNoBWE = WebCalc.find_by_name('r_VA_CaidCountEarnAmtNoBWE')
bweAmt = manager.get_answer_by_question_name('bweAmt')
[(Float(r_VA_CaidCountEarnAmtNoBWE.calculate manager) - bweAmt.to_f), 0].max
"
@r_VA_CaidCountEarnAmt.save!

#xxxxx
#WebVaCalc 1410	Individual's Total Countable Income before PASS	vA_CaidCountIncomeAmtNoPASS
#=E139+E141
#139 r_VA_CaidCountUnearnAmt
#141 r_VA_CaidCountEarnAmt
@vA_CaidCountIncomeAmtNoPASS  = WebCalc.find_or_create_by_name(:name => 'vA_CaidCountIncomeAmtNoPASS')
@vA_CaidCountIncomeAmtNoPASS.operation = "
r_VA_CaidCountUnearnAmt = WebCalc.find_by_name('r_VA_CaidCountUnearnAmt')
r_VA_CaidCountEarnAmt   = WebCalc.find_by_name('r_VA_CaidCountEarnAmt')
Float(r_VA_CaidCountUnearnAmt.calculate manager) + Float(r_VA_CaidCountEarnAmt.calculate manager)
"
@vA_CaidCountIncomeAmtNoPASS.save!    

#WebVaCalc 43	1450	Individual's Total Countable Income (can't be < 0) 	r_VA_CaidCountIncomeAmt
#=MAX(0;E143-E145)
#143 vA_CaidCountIncomeAmtNoPASS
#145 passAmt
@r_VA_CaidCountIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCountIncomeAmt')
@r_VA_CaidCountIncomeAmt.operation = "
vA_CaidCountIncomeAmtNoPASS = WebCalc.find_by_name('vA_CaidCountIncomeAmtNoPASS')
passAmt                     = manager.get_answer_by_question_name('passAmt')
[(Float(vA_CaidCountIncomeAmtNoPASS.calculate manager) - passAmt.to_f), 0].max
"
@r_VA_CaidCountIncomeAmt.save!

#WebVaCalc 44	1490	Amount of user's excess General Exclusion to subtract from spouse's unearned income	r_VA_CaidSpouseExcessUserGenExclude
#=IF(E118>E120;E118-E120;0)
#118 r_VA_CaidExcessGenExclude
#120 r_VA_CaidEarnAmt
@r_VA_CaidSpouseExcessUserGenExclude  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseExcessUserGenExclude')
@r_VA_CaidSpouseExcessUserGenExclude.operation = "
r_VA_CaidExcessGenExclude = WebCalc.find_by_name('r_VA_CaidExcessGenExclude')
r_VA_CaidEarnAmt          = WebCalc.find_by_name('r_VA_CaidEarnAmt')
if Float(r_VA_CaidExcessGenExclude.calculate manager) > Float(r_VA_CaidEarnAmt.calculate manager) then
  Float(r_VA_CaidExcessGenExclude.calculate manager) - Float(r_VA_CaidEarnAmt.calculate manager)
 else
   0
end
"
@r_VA_CaidSpouseExcessUserGenExclude.save!

#WebVaCalc 42 44	1550	Spouse's Countable Unearned Income (Can't be < 0)	r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt
#=IF(E155>20;MAX(0;E153-E157-E159-E161);MAX(0;E153-E155-E157-E159-E161))
#155 spouseUnearnInfrequentAmt
#153 r_VA_CaidSpouseUnearnAmt
#157 spouseUnearnIncomeBasedOnNeedAmt
#159 spouseUnearnAssistanceBasedOnNeedAmt
#161 r_VA_CaidSpouseExcessUserGenExclude

@r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt')
@r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt.operation = "
spouseUnearnInfrequentAmt               = manager.get_answer_by_question_name('spouseUnearnInfrequentAmt')
spouseUnearnIncomeBasedOnNeedAmt        = manager.get_answer_by_question_name('spouseUnearnIncomeBasedOnNeedAmt')
spouseUnearnAssistanceBasedOnNeedAmt    = manager.get_answer_by_question_name('spouseUnearnAssistanceBasedOnNeedAmt')
r_VA_CaidSpouseUnearnAmt                = WebCalc.find_by_name('r_VA_CaidSpouseUnearnAmt')
r_VA_CaidSpouseExcessUserGenExclude     = WebCalc.find_by_name('r_VA_CaidSpouseExcessUserGenExclude')
rateGenExcludeAmt                       = WebCalc.find_by_name('rateGenExcludeAmt')
if spouseUnearnInfrequentAmt.to_f > Float(rateGenExcludeAmt.calculate manager) then
  [(Float(r_VA_CaidSpouseUnearnAmt.calculate manager) - spouseUnearnIncomeBasedOnNeedAmt.to_f - spouseUnearnAssistanceBasedOnNeedAmt.to_f - Float(r_VA_CaidSpouseExcessUserGenExclude.calculate manager)), 0].max
else
  [(Float(r_VA_CaidSpouseUnearnAmt.calculate manager) - spouseUnearnInfrequentAmt.to_f  - spouseUnearnIncomeBasedOnNeedAmt.to_f - spouseUnearnAssistanceBasedOnNeedAmt.to_f - Float(r_VA_CaidSpouseExcessUserGenExclude.calculate manager)), 0].max
end
"
@r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt.save!

#WebVaCalc 42 43	1554	Individual's Countable Unearned Income to be used in calculating Medicaid income eligibility (Can't be < 0)	r_VA_CaidSpouseCountUnearnAmt
#=E163+E165
#163 r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt
#165 spouseUnearnAssistanceBasedOnNeedAmt
@r_VA_CaidSpouseCountUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountUnearnAmt')
@r_VA_CaidSpouseCountUnearnAmt.operation = "
r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt = WebCalc.find_by_name('r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt')
spouseUnearnAssistanceBasedOnNeedAmt      = manager.get_answer_by_question_name('spouseUnearnAssistanceBasedOnNeedAmt')
(Float(r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt.calculate manager) + spouseUnearnAssistanceBasedOnNeedAmt.to_f)
"
@r_VA_CaidSpouseCountUnearnAmt.save!

#WebVaCalc 1580	Amount of General Exclusion to subtract from earned income	r_VA_CaidSpouseUnusedGenExclude
#=IF(E151>E153;E151-E153;0)
#151 r_VA_CaidSpouseExcessUserGenExclude
#153 r_VA_CaidSpouseUnearnAmt
@r_VA_CaidSpouseUnusedGenExclude  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseUnusedGenExclude')
@r_VA_CaidSpouseUnusedGenExclude.operation = "
r_VA_CaidSpouseExcessUserGenExclude = WebCalc.find_by_name('r_VA_CaidSpouseExcessUserGenExclude')
r_VA_CaidSpouseUnearnAmt            = WebCalc.find_by_name('r_VA_CaidSpouseUnearnAmt')
if Float(r_VA_CaidSpouseExcessUserGenExclude.calculate manager) > Float(r_VA_CaidSpouseUnearnAmt.calculate manager) then
   Float(r_VA_CaidSpouseExcessUserGenExclude.calculate manager) - Float(r_VA_CaidSpouseUnearnAmt.calculate manager)
else
    0
end
"
@r_VA_CaidSpouseUnusedGenExclude.save!

#WebVaCalc 1600	Amount of user's excess Earned Income Disregard to subtract from spouse's earned income	r_VA_CaidSpouseExcessUserEarnedIncomeDisregard
#=MAX(0;E124-MAX(0;(E120-E118)))
#124 rateEarnedIncDisregardAmt
#120 r_VA_CaidEarnAmt
#118 r_VA_CaidExcessGenExclude
@r_VA_CaidSpouseExcessUserEarnedIncomeDisregard  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseExcessUserEarnedIncomeDisregard')
@r_VA_CaidSpouseExcessUserEarnedIncomeDisregard.operation = "
rateEarnedIncDisregardAmt = WebCalc.find_by_name('rateEarnedIncDisregardAmt')
r_VA_CaidEarnAmt          = WebCalc.find_by_name('r_VA_CaidEarnAmt')
r_VA_CaidExcessGenExclude = WebCalc.find_by_name('r_VA_CaidExcessGenExclude')
[0, (Float(rateEarnedIncDisregardAmt.calculate manager) - ([0, (Float(r_VA_CaidEarnAmt.calculate manager) - Float(r_VA_CaidExcessGenExclude.calculate manager))].max))].max
"
@r_VA_CaidSpouseExcessUserEarnedIncomeDisregard.save!

#WebVaCalc 1720	Countable earned income before dividing by 2 (can't be < 0)	r_VA_CaidSpouseCountEarnAmtNoDivide
#=MAX(0;E174-SUM(E175:E181))
#174 r_VA_CaidSpouseEarnAmt
#175 r_VA_CaidSpouseUnusedGenExclude minus
#    r_VA_CaidSpouseExcessUserEarnedIncomeDisregard
# minus spouseSsiCaidIrweAmt
@r_VA_CaidSpouseCountEarnAmtNoDivide  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountEarnAmtNoDivide')
@r_VA_CaidSpouseCountEarnAmtNoDivide.operation = "
r_VA_CaidSpouseEarnAmt                          = WebCalc.find_by_name('r_VA_CaidSpouseEarnAmt')
r_VA_CaidSpouseUnusedGenExclude                 = WebCalc.find_by_name('r_VA_CaidSpouseUnusedGenExclude')
r_VA_CaidSpouseExcessUserEarnedIncomeDisregard  = WebCalc.find_by_name('r_VA_CaidSpouseExcessUserEarnedIncomeDisregard')
spouseSsiCaidIrweAmt                            = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
[(Float(r_VA_CaidSpouseEarnAmt.calculate manager) - (Float(r_VA_CaidSpouseUnusedGenExclude.calculate manager) - Float(r_VA_CaidSpouseExcessUserEarnedIncomeDisregard.calculate manager)  - spouseSsiCaidIrweAmt.to_f)), 0].max
"
@r_VA_CaidSpouseCountEarnAmtNoDivide.save!

#WebVaCalc 1740	Countable earned income before BWE 	r_VA_CaidSpouseCountEarnAmtNoBWE
#=E182/2
#182 r_VA_CaidSpouseCountEarnAmtNoDivide
@r_VA_CaidSpouseCountEarnAmtNoBWE  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountEarnAmtNoBWE')
@r_VA_CaidSpouseCountEarnAmtNoBWE.operation = "
r_VA_CaidSpouseCountEarnAmtNoDivide = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmtNoDivide')
Float(r_VA_CaidSpouseCountEarnAmtNoDivide.calculate manager)/2
"
@r_VA_CaidSpouseCountEarnAmtNoBWE.save!

#WebVaCalc 1800	Spouse's Countable Earned Income (Can't be < 0)	r_VA_CaidSpouseCountEarnAmt
#=MAX(0;E184-E186)
#184 r_VA_CaidSpouseCountEarnAmtNoBWE
#186 spouseBweAmt
@r_VA_CaidSpouseCountEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountEarnAmt')
@r_VA_CaidSpouseCountEarnAmt.operation = "
r_VA_CaidSpouseCountEarnAmtNoBWE = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmtNoBWE')
spouseBweAmt                     = manager.get_answer_by_question_name('spouseBweAmt')
[(Float(r_VA_CaidSpouseCountEarnAmtNoBWE.calculate manager) - spouseBweAmt.to_f), 0].max
"
@r_VA_CaidSpouseCountEarnAmt.save!

#WebVaCalc 1870	Spouse's Total Countable Income before PASS	r_VA_CaidSpouseCountIncomeAmtNoPASS
#=E191+E193
#191 r_VA_CaidSpouseCountUnearnAmt
#193 r_VA_CaidSpouseCountEarnAmt
@r_VA_CaidSpouseCountIncomeAmtNoPASS  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountIncomeAmtNoPASS')
@r_VA_CaidSpouseCountIncomeAmtNoPASS.operation = "
r_VA_CaidSpouseCountUnearnAmt = WebCalc.find_by_name('r_VA_CaidSpouseCountUnearnAmt')
r_VA_CaidSpouseCountEarnAmt   = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmt')
Float(r_VA_CaidSpouseCountUnearnAmt.calculate manager) + Float(r_VA_CaidSpouseCountEarnAmt.calculate manager)
"
@r_VA_CaidSpouseCountIncomeAmtNoPASS.save!

#WebVaCalc 1910	Spouse's Total Countable Income (can't be < 0) 	r_VA_CaidSpouseCountIncomeAmt
#=MAX(0;E195-E197)
#195 r_VA_CaidSpouseCountIncomeAmtNoPASS
#197 spousePassAmt
@r_VA_CaidSpouseCountIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCountIncomeAmt')
@r_VA_CaidSpouseCountIncomeAmt.operation = "
r_VA_CaidSpouseCountIncomeAmtNoPASS = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmtNoPASS')
spousePassAmt                       = manager.get_answer_by_question_name('spousePassAmt')
[(Float(r_VA_CaidSpouseCountIncomeAmtNoPASS.calculate manager) - spousePassAmt.to_f), 0].max
"
@r_VA_CaidSpouseCountIncomeAmt.save!

#WebVaCalc 1930	Determine ABD Couple's Countable Unearned Income
#WebVaCalc 1990	Couple's Countable Unearned Income	r_VA_CaidCoupleCountUnearnAmt
#=E203+E205
#203 r_VA_CaidCountUnearnAmt
#205 r_VA_CaidSpouseCountUnearnAmt
@r_VA_CaidCoupleCountUnearnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleCountUnearnAmt')
@r_VA_CaidCoupleCountUnearnAmt.operation = "
r_VA_CaidCountUnearnAmt       = WebCalc.find_by_name('r_VA_CaidCountUnearnAmt')
r_VA_CaidSpouseCountUnearnAmt = WebCalc.find_by_name('r_VA_CaidSpouseCountUnearnAmt')
(Float(r_VA_CaidCountUnearnAmt.calculate manager) + Float(r_VA_CaidSpouseCountUnearnAmt.calculate manager))
"
@r_VA_CaidCoupleCountUnearnAmt.save!

#WebVaCalc 2060	Couple's Countable Earned Income	r_VA_CaidCoupleCountEarnAmt
#=E210+E212
#e210 r_VA_CaidCountEarnAmt
#212 r_VA_CaidSpouseCountEarnAmt
@r_VA_CaidCoupleCountEarnAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleCountEarnAmt')
@r_VA_CaidCoupleCountEarnAmt.operation = "
r_VA_CaidCountEarnAmt       = WebCalc.find_by_name('r_VA_CaidCountEarnAmt')
r_VA_CaidSpouseCountEarnAmt = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmt')
(Float(r_VA_CaidCountEarnAmt.calculate manager) + Float(r_VA_CaidSpouseCountEarnAmt.calculate manager))
"
@r_VA_CaidCoupleCountEarnAmt.save!

#WebVaCalc 2130	Couple's Countable Income (If not ABD couple, then this will be individual's income)	r_VA_CaidCoupleCountIncomeAmt
##=E217+E219
#217 r_VA_CaidCoupleCountUnearnAmt
#219 r_VA_CaidCoupleCountEarnAmt
@r_VA_CaidCoupleCountIncomeAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCoupleCountIncomeAmt')
@r_VA_CaidCoupleCountIncomeAmt.operation = "
r_VA_CaidCoupleCountUnearnAmt = WebCalc.find_by_name('r_VA_CaidCoupleCountUnearnAmt')
r_VA_CaidCoupleCountEarnAmt   = WebCalc.find_by_name('r_VA_CaidCoupleCountEarnAmt')
(Float(r_VA_CaidCoupleCountUnearnAmt.calculate manager) + Float(r_VA_CaidCoupleCountEarnAmt.calculate manager))
"
@r_VA_CaidCoupleCountIncomeAmt.save!

#WebVaCalc 45	2140	Determine Resource Eligibility
#WebVaCalc 53	2145	Determine user's resource eligibility for the Medicaid group that user is getting or applying for.
#45 52 53	2222	IF any of the retreived answers to the Exceed-Resource questions for covered groups are YES, then r_VA_CaidUserResourceElig = Ineligible, ELSE IF any are NO, then Eligible, ELSE N/A	r_VA_CaidUserResourceElig
#=IF(OR(E229="YES";E230="YES";E231="YES";E232="YES";E233="YES";E234="YES";E235="YES";E236="YES";E237="YES";E238="YES");"Ineligible";
# IF(OR(E229="NO"; E230="NO"; E231="NO"; E232="NO"; E233="NO"; E234="NO"; E235="NO"; E236="NO"; E237="NO"; E238="NO");"Eligible";"N/A"))
#229 caidMostGroupsResourceLimitExceed
#230 caidCoupleMostGroupsResourceLimitExceed
#231 caid80PctFplResourceLimitExceed
#232 caidCouple80PctFplResourceLimitExceed
#233 caidQdwiResourceLimitExceed
#234 caidCoupleQdwiResourceLimitExceed
#235 caidQmbSlmbQiResourceLimitExceed
#236 caidCoupleQmbSlmbQiResourceLimitExceed
#237 caidGetOrApply300PctSsiResourceLimitExceed
#238 CaidGetWorksWinResourceLimitExceed
#edit on 12/22/2011 add CaidGetWorksNonWinResourceLimitExceed
@r_VA_CaidUserResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserResourceElig')
@r_VA_CaidUserResourceElig.operation = "
caidMostGroupsResourceLimitExceed                 = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
caidCoupleMostGroupsResourceLimitExceed           = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
caid80PctFplResourceLimitExceed                   = manager.get_answer_by_question_name('caid80PctFplResourceLimitExceed')
caidCouple80PctFplResourceLimitExceed             = manager.get_answer_by_question_name('caidCouple80PctFplResourceLimitExceed')
caidQdwiResourceLimitExceed                       = manager.get_answer_by_question_name('caidQdwiResourceLimitExceed')
caidCoupleQdwiResourceLimitExceed                 = manager.get_answer_by_question_name('caidCoupleQdwiResourceLimitExceed')
caidQmbSlmbQiResourceLimitExceed                  = manager.get_answer_by_question_name('caidQmbSlmbQiResourceLimitExceed')
caidCoupleQmbSlmbQiResourceLimitExceed            = manager.get_answer_by_question_name('caidCoupleQmbSlmbQiResourceLimitExceed')
caidGetWorksWinResourceLimitExceed                = manager.get_answer_by_question_name('caidGetWorksWinResourceLimitExceed')
caidGetWorksNonWinResourceLimitExceed             = manager.get_answer_by_question_name('caidGetWorksNonWinResourceLimitExceed')

if caidMostGroupsResourceLimitExceed == 'Yes' || caidCoupleMostGroupsResourceLimitExceed  == 'Yes' || caid80PctFplResourceLimitExceed == 'Yes' || caidCouple80PctFplResourceLimitExceed == 'Yes' || caidQdwiResourceLimitExceed == 'Yes' || caidCoupleQdwiResourceLimitExceed == 'Yes' ||   caidQmbSlmbQiResourceLimitExceed  == 'Yes' || caidCoupleQmbSlmbQiResourceLimitExceed == 'Yes' ||  caidGetWorksWinResourceLimitExceed == 'Yes' then
  'Ineligible'
elsif caidMostGroupsResourceLimitExceed == 'No' || caidCoupleMostGroupsResourceLimitExceed  == 'No' || caid80PctFplResourceLimitExceed == 'No' || caidCouple80PctFplResourceLimitExceed == 'No' ||  caidQdwiResourceLimitExceed == 'No' || caidCoupleQdwiResourceLimitExceed == 'No' ||   caidQmbSlmbQiResourceLimitExceed  == 'No' || caidCoupleQmbSlmbQiResourceLimitExceed == 'No' || caidGetWorksWinResourceLimitExceed == 'No' || caidGetWorksNonWinResourceLimitExceed == 'No' then 
  'Eligible'
else 
   'N/A'
end
"
@r_VA_CaidUserResourceElig.save!

#52	2221.2	r_VA_CaidLtcHomeEquityLimitExceed = YES IF vA_CaidLtcHomeEquityLimitProvisionallyExceed = YES AND vA_CaidSpouseOrChildLivesInHome = NO, ELSE IF vA_CaidLtcHomeEquityLimitProvisionallyExceed = NO OR vA_CaidSpouseOrChildLivesInHome = YES, THEN r_VA_CaidLtcHomeEquityLimitExceed = NO, ELSE N/A	
#r_VA_CaidLtcHomeEquityLimitExceed
#IF vA_CaidLtcHomeEquityLimitProvisionallyExceed = YES AND vA_CaidSpouseOrChildLivesInHome = NO, ELSE IF vA_CaidLtcHomeEquityLimitProvisionallyExceed = NO OR vA_CaidSpouseOrChildLivesInHome = YES, THEN r_VA_CaidLtcHomeEquityLimitExceed = NO, ELSE N/A
#=IF(AND(E250="YES";E251="NO");"YES";IF(OR(E250="NO";E251="YES");"NO";"N/A"))
#250 vA_CaidLtcHomeEquityLimitProvisionallyExceed
#251 vA_CaidSpouseOrChildLivesInHome
@r_VA_CaidLtcHomeEquityLimitExceed  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidLtcHomeEquityLimitExceed')
@r_VA_CaidLtcHomeEquityLimitExceed.operation = "
vA_CaidLtcHomeEquityLimitProvisionallyExceed = manager.get_answer_by_question_name('vA_CaidLtcHomeEquityLimitProvisionallyExceed')
vA_CaidSpouseOrChildLivesInHome = manager.get_answer_by_question_name('vA_CaidSpouseOrChildLivesInHome')
if (vA_CaidLtcHomeEquityLimitProvisionallyExceed == 'Yes' && vA_CaidSpouseOrChildLivesInHome == 'No') then
   'YES'
elsif (vA_CaidLtcHomeEquityLimitProvisionallyExceed == 'No' || vA_CaidSpouseOrChildLivesInHome == 'Yes') then
   'NO'
else
  'N/A'
end
"
@r_VA_CaidLtcHomeEquityLimitExceed.save!
#BOB review this later for how used


#52	2222.2	If vA_CaidInstitutionServicesGet = YES OR vA_CaidWaiverServicesGet = YES OR vA_CaidInstitutionServicesApply = YES OR vA_CaidWaiverServicesApply = YES, THEN r_VA_CaidUserGetOrApplyLtc = YES	r_VA_CaidUserGetOrApplyLtc
#=IF(OR(E245="YES";E246="YES";E247="YES";E248="YES");"YES";"NO")
#245 vA_CaidInstitutionServicesGet
#246 vA_CaidWaiverServicesGet
#247 vA_CaidInstitutionServicesApply
#248 vA_CaidWaiverServicesApply
@r_VA_CaidUserGetOrApplyLtc  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserGetOrApplyLtc')
@r_VA_CaidUserGetOrApplyLtc.operation = "
vA_CaidInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidInstitutionServicesGet')
vA_CaidWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidWaiverServicesGet')
vA_CaidInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidInstitutionServicesApply')
vA_CaidWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidWaiverServicesApply')
if (vA_CaidInstitutionServicesGet == 'Yes' || vA_CaidWaiverServicesGet == 'Yes' || vA_CaidInstitutionServicesApply == 'Yes' || vA_CaidWaiverServicesApply == 'Yes') then
  true
 else
   false
end
"
@r_VA_CaidUserGetOrApplyLtc.save!

#Friday night 10PM stop here, this looks trickier
#52 53 54	2222.4	IF r_VA_CaidUserResourceElig = Eligible AND (Neither vA_CaidGetCoveredGroup NOR vA_CaidApplyCoveredGroup) <> (SLMB, QMB, QI OR QWDI) AND r_VA_CaidUserGetOrApplyLtc = YES AND r_VA_CaidLtcHomeEquityLimitExceed <> YES 
#AND caidApplyLtcCommunitySpouseResourceLimitExceed <> YES, THEN r_VA_CaidUserLtcResourceElig = Eligible, ELSE IF r_VA_CaidLtcHomeEquityLimitExceed = YES OR caidApplyLtcCommunitySpouseResourceLimitExceed = YES, THEN r_VA_CaidUserLtcResourceElig = Ineligible, ELSE N/A	
#=IF(AND(E240="Eligible";E243<>"SLMB";E243<>"QMB";E243<>"QI";E243<>"QDWI";E244<>"SLMB";E244<>"QMB";E244<>"QI";E244<>"QDWI";E255="YES";E253<>"YES";E249<>"YES");"Eligible";IF(OR(E253="YES";E249="YES");"Ineligible";"N/A"))
#240 r_VA_CaidUserResourceElig  Note this is eligible:Not eligible: N/A
#243 vA_CaidGetCoveredGroup
#244 vA_CaidApplyCoveredGroup
#255 r_VA_CaidUserGetOrApplyLtc
#253 r_VA_CaidLtcHomeEquityLimitExceed  Note this is not a T/F but Y:n:N/A
#249 CaidApplyLtcCommunitySpouseResourceLimitExceed

#r_VA_CaidUserLtcResourceElig
@r_VA_CaidUserLtcResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserLtcResourceElig')
@r_VA_CaidUserLtcResourceElig.operation = "
r_VA_CaidUserResourceElig                      = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
vA_CaidGetCoveredGroup                         = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup                       = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidUserGetOrApplyLtc                     = WebCalc.find_by_name('r_VA_CaidUserGetOrApplyLtc')
r_VA_CaidLtcHomeEquityLimitExceed              = WebCalc.find_by_name('r_VA_CaidLtcHomeEquityLimitExceed')
caidApplyLtcCommunitySpouseResourceLimitExceed = manager.get_answer_by_question_name('caidApplyLtcCommunitySpouseResourceLimitExceed')
if (vA_CaidGetCoveredGroup !=  'SLMB' &&  vA_CaidGetCoveredGroup !=  'QMB' &&  vA_CaidGetCoveredGroup !=  'QI' &&  vA_CaidGetCoveredGroup !=  'QDWI' &&
   vA_CaidApplyCoveredGroup !=  'SLMB' &&  vA_CaidApplyCoveredGroup !=  'QMB' &&  vA_CaidApplyCoveredGroup !=  'QI' &&  vA_CaidApplyCoveredGroup !=  'QDWI' &&
  (r_VA_CaidUserGetOrApplyLtc.calculate manager) == true && (r_VA_CaidLtcHomeEquityLimitExceed.calculate manager) != 'YES' && caidApplyLtcCommunitySpouseResourceLimitExceed !='Yes' ) && (r_VA_CaidUserResourceElig.calculate manager) == 'Eligible' then
    
    'Eligible'

elsif r_VA_CaidLtcHomeEquityLimitExceed == 'Yes' || caidApplyLtcCommunitySpouseResourceLimitExceed == 'Yes' then
   'Ineligible'
else
  'N/A'
end
"
@r_VA_CaidUserLtcResourceElig.save!

# This was needed earlier
# #45 47	2227	IF r_VA_CaidUserSpouseBothGetOrApply = YES AND (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) [excluding nulls], THEN r_VA_CaidUserSpouseSameCovGroup = TRUE, ELSE FALSE	
# #=IF(AND(E265="YES";OR(AND(E226=E261;E226<>0);AND(E226=E263;E226<>0);AND(E228=E261;E228<>0);AND(E228=E263;E228<>0)));1;0)
# ##r_VA_CaidUserSpouseSameCovGroup
# #265 r_VA_CaidUserSpouseBothGetOrApply
# #226 vA_CaidGetCoveredGroup
# #261 vA_caidSpouseGetCoveredGroup
# #263 vA_caidSpouseApplyCoveredGroup
# #228 vA_CaidApplyCoveredGroup
# @r_VA_CaidUserSpouseSameCovGroup  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserSpouseSameCovGroup')
# @r_VA_CaidUserSpouseSameCovGroup.operation = "
# r_VA_CaidUserSpouseBothGetOrApply = manager.get_answer_by_question_name('r_VA_CaidUserSpouseBothGetOrApply')
# vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
# vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
# vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
# vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
# 
# if (r_VA_CaidUserSpouseBothGetOrApply == 'Yes' &&
#    ((vA_CaidGetCoveredGroup == vA_caidSpouseGetCoveredGroup && !(vA_CaidGetCoveredGroup.blank?)) || 
#    (vA_CaidGetCoveredGroup == vA_caidSpouseApplyCoveredGroup && !(vA_CaidGetCoveredGroup.blank?)) || 
#    (vA_CaidApplyCoveredGroup == vA_caidSpouseGetCoveredGroup && !(vA_CaidApplyCoveredGroup.blank?)) || 
#    (vA_CaidApplyCoveredGroup == vA_caidSpouseApplyCoveredGroup && !(vA_CaidApplyCoveredGroup.blank?)))) then
#   true
# else 
#   false
# end
# "
# @r_VA_CaidUserSpouseSameCovGroup.save!

#52	2227.2	IF r_VA_CaidUserSpouseSameCovGroup = TRUE AND (vA_CaidGetCoveredGroup OR vA_caidSpouseGetCoveredGroup) = (MEDICAID WORKS OR 300% SSI), THEN r_VA_CaidUserOrSpouseGetsWorksOr300pct = YES, ELSE NO	
#r_VA_CaidUserOrSpouseGetsWorksOr300pct
#=IF(AND(E267=1;OR(E226="MEDICAID WORKS";E226="300% SSI";E261="MEDICAID WORKS";E261="300% SSI"));"YES";"NO")
#267 r_VA_CaidUserSpouseSameCovGroup
#226 vA_CaidGetCoveredGroup
#261 vA_caidSpouseGetCoveredGroup
@r_VA_CaidUserOrSpouseGetsWorksOr300pct  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserOrSpouseGetsWorksOr300pct')
@r_VA_CaidUserOrSpouseGetsWorksOr300pct.operation = "
r_VA_CaidUserSpouseSameCovGroup = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
vA_CaidGetCoveredGroup          = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_caidSpouseGetCoveredGroup    = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
if ((vA_CaidGetCoveredGroup == 'MEDICAID WORKS' || vA_CaidGetCoveredGroup == '300% SSI' ||
    vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' || vA_caidSpouseGetCoveredGroup == '300% SSI')  && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == true) then
   true
else
  false
end
"
@r_VA_CaidUserOrSpouseGetsWorksOr300pct.save!

#45 47 52 53	2228	IF r_VA_CaidUserSpouseSameCovGroup = TRUE AND IF r_VA_CaidUserOrSpouseGetsWorksOr300pct <> YES, AND r_VA_CaidUserResourceElig = Eligible, THEN r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig = Eligible, ELSE IF r_VA_CaidUserSpouseSameCovGroup = TRUE AND r_VA_CaidUserOrSpouseGetsWorksOr300pct <> YES, AND r_VA_CaidUserResourceElig = Ineligible, THEN Ineligible , ELSE N/A	
#r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig
#=IF(AND(E267=1;E269<>"YES";E240="Eligible");"Eligible";IF(AND(E267=1;E269<>"YES";E240="Ineligible");"Ineligible";"N/A"))
#267 r_VA_CaidUserSpouseSameCovGroup
#269 r_VA_CaidUserOrSpouseGetsWorksOr300pct
#240 r_VA_CaidUserResourceElig
@r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig')
@r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.operation = "
r_VA_CaidUserSpouseSameCovGroup        = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
r_VA_CaidUserOrSpouseGetsWorksOr300pct = WebCalc.find_by_name('r_VA_CaidUserOrSpouseGetsWorksOr300pct')
r_VA_CaidUserResourceElig              = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
if ((r_VA_CaidUserSpouseSameCovGroup.calculate manager) == true  && !((r_VA_CaidUserOrSpouseGetsWorksOr300pct.calculate manager) == true) && (r_VA_CaidUserResourceElig.calculate manager) == 'Eligible') then
     'Eligible'
elsif ((r_VA_CaidUserSpouseSameCovGroup.calculate manager) == true  && !((r_VA_CaidUserOrSpouseGetsWorksOr300pct.calculate manager) == true) && (r_VA_CaidUserResourceElig.calculate manager) == 'Ineligible')
     'Ineligible'
else
     'N/A'  
end
"
@r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.save!

#45 47 52 53	2244	IFr_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE (AND any of the answers to the resource questions above are NO THEN r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig = Eligible, OR IF any of those answers are YES, THEN Ineligible), ELSE N/A	
#r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig
#=IF(AND(E274="YES";E275=0;OR(E276="NO";E277="NO";E278="NO";E279="NO"));"Eligible";IF(AND(E274="YES";E275=0;E285<>"YES";OR(E276="YES";E277="YES";E278="YES";E279="YES"));"Ineligible";"N/A"))
#274 r_VA_CaidUserSpouseBothGetOrApply
#275 r_VA_CaidUserSpouseSameCovGroup
#276 caidSpouseCoupleMostGroupsResourceLimitExceed
#277 caidSpouseCouple80PctFplResourceLimitExceed
#278 caidSpouseCoupleQdwiResourceLimitExceed
#279 caidSpouseCoupleQmbSlmbQiResourceLimitExceed
#285 vA_caidSpouseGetCoveredGroup  Note to Ruth, RMC deleted this from operation.

@r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig')
@r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply                 = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseSameCovGroup                   = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
caidSpouseCoupleMostGroupsResourceLimitExceed     = manager.get_answer_by_question_name('caidSpouseCoupleMostGroupsResourceLimitExceed')
caidSpouseCouple80PctFplResourceLimitExceed       = manager.get_answer_by_question_name('caidSpouseCouple80PctFplResourceLimitExceed')
caidSpouseCoupleQdwiResourceLimitExceed           = manager.get_answer_by_question_name('caidSpouseCoupleQdwiResourceLimitExceed')
caidSpouseCoupleQmbSlmbQiResourceLimitExceed      = manager.get_answer_by_question_name('caidSpouseCoupleQmbSlmbQiResourceLimitExceed')
if ((caidSpouseCoupleMostGroupsResourceLimitExceed == 'No' || caidSpouseCouple80PctFplResourceLimitExceed == 'No'  || caidSpouseCoupleQdwiResourceLimitExceed == 'No' || caidSpouseCoupleQmbSlmbQiResourceLimitExceed == 'No') &&
  (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true  && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false) then
  'Eligible' 
elsif ((caidSpouseCoupleMostGroupsResourceLimitExceed == 'Yes' || caidSpouseCouple80PctFplResourceLimitExceed == 'Yes' || caidSpouseCoupleQdwiResourceLimitExceed == 'Yes' || caidSpouseCoupleQmbSlmbQiResourceLimitExceed == 'Yes') &&
  (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false) then 
   'Ineligible' 
else 
  'N/A'
end
"
@r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig.save!


#this needs review after Ruth Response
#54	2246	If r_VA_CaidUserSpouseBothGetOrApply = YES AND vA_caidSpouseGetCoveredGroup = (MEDICAID WORKS OR 300% SSI) AND (IF(caidSpouseGet300PctSsiResourceLimitExceed = NO OR caidSpouseGetWorksResourceLimitExceed = NO), THEN r_VA_caidSpouseGetWorksOr300PctSsiResourceElig = Eligible, 
#OR IF(caidSpouseGet300PctSsiResourceLimitExceed =YES OR caidSpouseGetWorksResourceLimitExceed = YES), THEN Ineligible), ELSE N/A	
#r_VA_caidSpouseGetWorksOr300PctSsiResourceElig
#=IF(AND(E284="YES";OR(E285="MEDICAID WORKS";E285="300% SSI");OR(E286="NO";E287="NO"));"Eligible";IF(AND(E284="YES";OR(E285="MEDICAID WORKS";E285="300% SSI");OR(E286="YES";E287="YES"));"Ineligible";"N/A"))
#284 r_VA_CaidUserSpouseBothGetOrApply Bool
#285 vA_caidSpouseGetCoveredGroup
#286 caidSpouseGet300PctSsiResourceLimitExceed
#287 caidSpouseGetWorksResourceLimitExceed
#Nov 3 2011 review
# Ruth email In WebVACalc 2246, corrected Excel formula to be in line with Operation Description at BOB's suggestion.  It had superfluous checks in the excel version that I eliminated.
@r_VA_caidSpouseGetWorksOr300PctSsiResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_caidSpouseGetWorksOr300PctSsiResourceElig')
@r_VA_caidSpouseGetWorksOr300PctSsiResourceElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply             = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
vA_caidSpouseGetCoveredGroup                  = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
caidSpouseGet300PctSsiResourceLimitExceed     = manager.get_answer_by_question_name('caidSpouseGet300PctSsiResourceLimitExceed')
caidSpouseGetWorksResourceLimitExceed         = manager.get_answer_by_question_name('caidSpouseGetWorksResourceLimitExceed')
if ((vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' || vA_caidSpouseGetCoveredGroup == '300% SSI') && (caidSpouseGet300PctSsiResourceLimitExceed == 'No' || caidSpouseGetWorksResourceLimitExceed== 'No') && (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true) then
  'Eligible' 
elsif (caidSpouseGet300PctSsiResourceLimitExceed == 'YES' || caidSpouseGetWorksResourceLimitExceed == 'YES') then
   'Ineligible'
else
  'N/A'
end
"
@r_VA_caidSpouseGetWorksOr300PctSsiResourceElig.save!


#54	2246.1	Determine spouse resource eligibility for spouse's covered group, whether spouse is applying or getting Medicaid Header
#54	2246.7	r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig = Eligible OR r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig = Eligible OR r_VA_caidSpouseGetWorksOr300PctSsiResourceElig = Eligible, THEN r_VA_CaidSpouseResourceElig = Eligible, ELSE IF r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig =Ineligible OR r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig = Ineligible OR r_VA_caidSpouseGetWorksOr300PctSsiResourceElig = Ineligible, THEN Ineligible, ELSE N/A	
#r_VA_CaidSpouseResourceElig
#=IF(OR(E292="Eligible";E293="Eligible";E294="Eligible");"Eligible";IF(OR(E292="Ineligible";E293="Ineligible";E294="Ineligible");"Ineligible";"N/A"))
#292 r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig
#293 r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig
#294 r_VA_caidSpouseGetWorksOr300PctSsiResourceElig
@r_VA_CaidSpouseResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseResourceElig')
@r_VA_CaidSpouseResourceElig.operation = "
r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig = WebCalc.find_by_name('r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig')
r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig               = WebCalc.find_by_name('r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig')
r_VA_caidSpouseGetWorksOr300PctSsiResourceElig                   = WebCalc.find_by_name('r_VA_caidSpouseGetWorksOr300PctSsiResourceElig')
if ((r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig.calculate manager) == 'Eligible' || (r_VA_caidSpouseGetWorksOr300PctSsiResourceElig.calculate manager) == 'Eligible') then 
  'Eligible'
elsif ((r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig.calculate manager) == 'Ineligible' || (r_VA_caidSpouseGetWorksOr300PctSsiResourceElig.calculate manager) == 'Ineligible') then 
  'Ineligible'
else
  'N/A'
end"
@r_VA_CaidSpouseResourceElig.save!

#2252	If vA_CaidSpouseInstitutionServicesGet = YES OR vA_CaidSpouseWaiverServicesGet = YES OR vA_CaidSpouseInstitutionServicesApply = YES OR vA_CaidSpouseWaiverServicesApply = YES, THEN r_VA_caidSpouseGetOrApplyLtc = YES	
#r_VA_caidSpouseGetOrApplyLtc
#=IF(OR(E301="YES";E302="YES";E303="YES";E304="YES");"YES";"NO")
#301 vA_CaidSpouseInstitutionServicesGet
#302 vA_CaidSpouseWaiverServicesGet
#303 vA_CaidSpouseInstitutionServicesApply
#304 vA_CaidSpouseWaiverServicesApply
@r_VA_caidSpouseGetOrApplyLtc  = WebCalc.find_or_create_by_name(:name => 'r_VA_caidSpouseGetOrApplyLtc')
@r_VA_caidSpouseGetOrApplyLtc.operation = "
vA_CaidSpouseInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesGet')
vA_CaidSpouseWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesGet')
vA_CaidSpouseInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesApply')
vA_CaidSpouseWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesApply')
if (vA_CaidSpouseInstitutionServicesGet == 'Yes' || vA_CaidSpouseWaiverServicesGet  == 'Yes'  || vA_CaidSpouseInstitutionServicesApply == 'Yes' || vA_CaidSpouseWaiverServicesApply == 'Yes') then
  true
else 
  false
end
"
@r_VA_caidSpouseGetOrApplyLtc.save!

#2256	IF r_VA_CaidSpouseResourceElig = Eligible AND (Neither vA_caidSpouseGetCoveredGroup NOR vA_caidSpouseApplyCoveredGroup) <> (SLMB, QMB, QI OR QWDI) AND r_VA_caidSpouseGetOrApplyLtc = YES AND r_VA_CaidLtcHomeEquityLimitExceed <> YES
# AND caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed <> YES, THEN r_VA_CaidSpouseLtcResourceElig = Eligible, ELSE IF r_VA_CaidLtcHomeEquityLimitExceed = YES O
#   R caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed = YES, THEN r_VA_CaidSpouseLtcResourceElig = Ineligible, ELSE N/A	
#r_VA_CaidSpouseLtcResourceElig
#=IF(AND(E296="Eligible";E299<>"SLMB";E299<>"QMB";E299<>"QI";E299<>"QDWI";E300<>"SLMB";E300<>"QMB";E300<>"QI";E300<>"QDWI";E308="YES";E305<>"YES";E306<>"YES");"Eligible";IF(OR(E305="YES";E306="YES");"Ineligible";"N/A"))
#296 r_VA_CaidSpouseResourceElig
#299 vA_caidSpouseGetCoveredGroup
#300 vA_caidSpouseApplyCoveredGroup
#308 r_VA_caidSpouseGetOrApplyLtc
#305 r_VA_CaidLtcHomeEquityLimitExceed  This is a Y:N:N/A possibility
#306 caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed
@r_VA_CaidSpouseLtcResourceElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseLtcResourceElig')
@r_VA_CaidSpouseLtcResourceElig.operation = "
r_VA_CaidSpouseResourceElig                                       = WebCalc.find_by_name('r_VA_CaidSpouseResourceElig')
vA_caidSpouseGetCoveredGroup                                      = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup                                    = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_caidSpouseGetOrApplyLtc                                      = WebCalc.find_by_name('r_VA_caidSpouseGetOrApplyLtc')
r_VA_CaidLtcHomeEquityLimitExceed                                 = WebCalc.find_by_name('r_VA_CaidLtcHomeEquityLimitExceed')
caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed = manager.get_answer_by_question_name('caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed')
if vA_caidSpouseGetCoveredGroup !=  'SLMB' &&  vA_caidSpouseGetCoveredGroup !=  'QMB' &&  vA_caidSpouseGetCoveredGroup !=  'QI' &&  vA_caidSpouseGetCoveredGroup !=  'QDWI' &&
   vA_caidSpouseApplyCoveredGroup !=  'SLMB' &&  vA_caidSpouseApplyCoveredGroup !=  'QMB' &&  vA_caidSpouseApplyCoveredGroup !=  'QI' &&  vA_caidSpouseApplyCoveredGroup !=  'QDWI' &&
  (r_VA_caidSpouseGetOrApplyLtc.calculate manager) == true && (r_VA_CaidLtcHomeEquityLimitExceed.calculate manager) != 'YES' && 
  caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed !='Yes' && (r_VA_CaidSpouseResourceElig.calculate manager) == 'Eligible' then
    
    'Eligible'

elsif r_VA_CaidLtcHomeEquityLimitExceed == 'YES' || caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed == 'Yes' then
   'Ineligible'
else
  'N/A'
end
"
@r_VA_CaidSpouseLtcResourceElig.save!

#This needed to be moved above due to dependency
##56	2340	IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = SSI Recipient, THEN r_VA_CaidCovGroupSsiRecipient = TRUE, ELSE FALSE 	
##r_VA_CaidCovGroupSsiRecipient
##=IF(OR(E$314="SSI Recipient";E$315="SSI Recipient");1;0)
##314 vA_CaidGetCoveredGroup
##315 vA_CaidApplyCoveredGroup
#@r_VA_CaidCovGroupSsiRecipient  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupSsiRecipient')
#@r_VA_CaidCovGroupSsiRecipient.operation = "
#vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
#vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
#if vA_CaidGetCoveredGroup == 'SSI Recipient' || vA_CaidApplyCoveredGroup == 'SSI Recipient' then
#   true
#else
#  false
#end
#"
#@r_VA_CaidCovGroupSsiRecipient.save!
#
#
##56	2350	IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = SSI Recipient, THEN r_VA_CaidSpouseCovGroupSsiRecipient = TRUE, ELSE FALSE 	
##r_VA_CaidSpouseCovGroupSsiRecipient
#@r_VA_CaidSpouseCovGroupSsiRecipient  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupSsiRecipient')
#@r_VA_CaidSpouseCovGroupSsiRecipient.operation = "
#vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
#vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
#if vA_caidSpouseGetCoveredGroup == 'SSI Recipient' || vA_caidSpouseApplyCoveredGroup == 'SSI Recipient' then
#   true
#else
#  false
#end
#"
#@r_VA_CaidSpouseCovGroupSsiRecipient.save!

#56	2370	r_VA_CaidCovGroupSsiRecipientElig = IF ssiGet <> YES OR  r_VA_CaidCovGroupSsiRecipient <> SSI Recipient, THEN N/A, 
#11/3Chk  r_VA_CaidCovGroupSsiRecipientElig = IF ssiGet <> YES OR  r_VA_CaidCovGroupSsiRecipient <> SSI Recipient, THEN N/A, 

#ELSE IF ssiGet = YES AND  r_VA_CaidCovGroupSsiRecipient = SSI Recipient AND r_SsiNoOverUnderAdjustCalcAmt > 0, THEN Eligible, ELSE Ineligible
#ELSE IF ssiGet = YES AND  r_VA_CaidCovGroupSsiRecipient = SSI Recipient AND r_SsiNoOverUnderAdjustCalcAmt > 0, THEN Eligible, ELSE Ineligible	
#r_VA_CaidCovGroupSsiRecipientElig
#=IF(OR(E318<>"YES";E322<>"SSI Recipient");"N/A";IF(AND(E318="YES";E322="SSI Recipient";E320>0);"Eligible";"Ineligible"))
#318 ssiGet
#322 r_VA_CaidCovGroupSsiRecipient r_VA_CaidCovGroupSsiRecipient
#320 r_SsiNoOverUnderAdjustCalcAmt r_SsiNoOverUnderAdjustCalcAmt
#
#NOv 8 2011 review  Seems OK
#56 58	2370	r_VA_CaidCovGroupSsiRecipientElig = IF ssiGet <> YES OR  r_VA_CaidCovGroupSsiRecipient = FALSE, THEN N/A, ELSE IF ssiGet = YES AND  r_VA_CaidCovGroupSsiRecipient = TRUE AND r_SsiNoOverUnderAdjustCalcAmt > 0, THEN Eligible, ELSE Ineligible	
#r_VA_CaidCovGroupSsiRecipientElig
#=IF(OR(E318<>"YES";E322=0);"N/A";IF(AND(E318="YES";E322=1;E320>0);"Eligible";"Ineligible"))
#318 ssiGet
#322 r_VA_CaidCovGroupSsiRecipient
#320 r_SsiNoOverUnderAdjustCalcAmt
@r_VA_CaidCovGroupSsiRecipientElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupSsiRecipientElig')
@r_VA_CaidCovGroupSsiRecipientElig.operation = "
ssiGet                        = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiRecipient = WebCalc.find_by_name('r_VA_CaidCovGroupSsiRecipient')
r_SsiNoOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
if (ssiGet != 'Yes'  || (r_VA_CaidCovGroupSsiRecipient.calculate manager) == false ) then
  'N/A'
elsif (ssiGet == 'Yes'  && (r_VA_CaidCovGroupSsiRecipient.calculate manager) == true &&  Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) > 0) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidCovGroupSsiRecipientElig.save!

#56	2380	 r_VA_CaidSpouseCovGroupSsiRecipientElig = IF  spouseSsiGet <> YES OR  r_VA_CaidSpouseCovGroupSsiRecipient <> SSI Recipient, THEN N/A, ELSE IF spouseSsiGet = YES AND  r_VA_CaidSpouseCovGroupSsiRecipient = SSI Recipient AND r_SsiNoOverUnderAdjustCalcAmt > 0, THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpouseCovGroupSsiRecipientElig
#Nov 3 2011 review
#=IF(OR(E319<>"YES";E323<>"SSI Recipient");"N/A";IF(AND(E319="YES";E323="SSI Recipient";E320>0);"Eligible";"Ineligible"))
#319 spouseSsiGet
#323 r_VA_CaidSpouseCovGroupSsiRecipient
#320 r_SsiNoOverUnderAdjustCalcAmt
@r_VA_CaidSpouseCovGroupSsiRecipientElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupSsiRecipientElig')
@r_VA_CaidSpouseCovGroupSsiRecipientElig.operation = "
spouseSsiGet                        = manager.get_answer_by_question_name('spouseSsiGet')
r_VA_CaidSpouseCovGroupSsiRecipient = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiRecipient')
r_SsiNoOverUnderAdjustCalcAmt       = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
if (spouseSsiGet != 'Yes'  || (r_VA_CaidSpouseCovGroupSsiRecipient.calculate manager) == false ) then
  'N/A'
elsif (spouseSsiGet == 'Yes'  && (r_VA_CaidSpouseCovGroupSsiRecipient.calculate manager) == true &&  Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) > 0) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidSpouseCovGroupSsiRecipientElig.save!

#56	2570	IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = Protected SSI Disabled Child, THEN r_VA_CaidCovGroupPsdc = TRUE, ELSE FALSE 	
#@r_VA_CaidCovGroupPsdc  Done earlier 
# Done earlier 56	2580	IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = Protected SSI Disabled Child, THEN r_VA_CaidSpouseCovGroupPsdc = TRUE, ELSE FALSE 	@r_VA_CaidSpouseCovGroupPsdc
#2590	IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = Protected Adult Disabled Child, THEN r_VA_CaidCovGroupPadc = TRUE, ELSE FALSE 	
#done earlier @r_VA_CaidCovGroupPadc
#56	2600	IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = Protected Adult Disabled Child, THEN r_VA_CaidSpouseCovGroupPadc = TRUE, ELSE FALSE 	
#done earlier @r_VA_CaidSpouseCovGroupPadc
#56	2610	IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = 1619b (Medicaid While Working), THEN r_VA_CaidCovGroup1619b = TRUE, ELSE FALSE 	
#Done earlier @r_VA_CaidCovGroup1619b
#56	2620	IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) = 1619b (Medicaid While Working), THEN r_VA_CaidSpouseCovGroup1619b = TRUE, ELSE FALSE 	
#Done already @r_VA_CaidSpouseCovGroup1619b
#56	2630	IF (r_VA_CaidCovGroupPsdc OR r_VA_CaidCovGroupPadc OR r_VA_CaidCovGroup1619b) = TRUE, THEN r_VA_CaidCovGroupPsdcPadc1619b = TRUE, ELSE FALSE	
# Done earlier @r_VA_CaidCovGroupPsdcPadc1619b
#56	2640	IF (r_VA_CaidSpouseCovGroupPsdc OR r_VA_CaidSpouseCovGroupPadc OR r_VA_CaidSpouseCovGroup1619b) = TRUE, THEN r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b = TRUE, ELSE FALSE	
#Done above @r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b


#56	2660	 r_VA_CaidFbrCovGroupPsdcAmt = IF r_VA_CaidCovGroupPsdc = FALSE AND r_VA_CaidSpouseCovGroupPsdc = FALSE THEN N/A, 
#ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, THEN r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt, ELSE r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt	
#r_VA_CaidFbrCovGroupPsdcAmt
#=IF(AND(E344=0;E345=0);"N/A";IF(E338=1;E337;E336))
#344 r_VA_CaidCovGroupPsdc
#345 r_VA_CaidSpouseCovGroupPsdc
#338 r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
#337 r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt
#336 r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt
@r_VA_CaidFbrCovGroupPsdcAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidFbrCovGroupPsdcAmt')
@r_VA_CaidFbrCovGroupPsdcAmt.operation = "
r_VA_CaidCovGroupPsdc                               = WebCalc.find_by_name('r_VA_CaidCovGroupPsdc')
r_VA_CaidSpouseCovGroupPsdc                         = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPsdc')
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b  = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt             = WebCalc.find_by_name('r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt')
r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt           = WebCalc.find_by_name('r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidCovGroupPsdc.calculate manager) == false && (r_VA_CaidSpouseCovGroupPsdc.calculate manager) == false) then
  0
elsif (r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == true then
  Float(r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
else
  Float(r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
end
"
@r_VA_CaidFbrCovGroupPsdcAmt.save!

#56	2680	r_VA_CaidPsdcIncomeElig = IF r_VA_CaidCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt >= r_VA_CaidFbrCovGroupPsdcAmt = Ineligible, ELSE Eligible	
#r_VA_CaidPsdcIncomeElig
#=IF(E344=0;"N/A";IF(E333>=E353;"Inelegible";"Eligible"))
#344 r_VA_CaidCovGroupPsdc
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
#353 r_VA_CaidFbrCovGroupPsdcAmt
#NOv 8 58 review
#56 58	2680	r_VA_CaidPsdcIncomeElig = IF r_VA_CaidCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt >= 0 = Eligible, ELSE Ineligible	
#r_VA_CaidPsdcIncomeElig
#=IF(E349=0;"N/A";IF(E333>=0;"Eligible";"Ineligible"))
#349 r_VA_CaidCovGroupPsdc
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt

#Nov 11 11 review
#56 58 59	2680	r_VA_CaidPsdcIncomeElig = IF r_VA_CaidCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt > 0 = Eligible, ELSE Ineligible	
#r_VA_CaidPsdcIncomeElig
#=IF(E355=0;"N/A";IF(E333>0;"Eligible";"Ineligible"))
#355 r_VA_CaidCovGroupPsdc
#    r_VA_CaidCovGroupPsdc
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
#     r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
@r_VA_CaidPsdcIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidPsdcIncomeElig')
@r_VA_CaidPsdcIncomeElig.operation = "
r_VA_CaidCovGroupPsdc                                   = WebCalc.find_by_name('r_VA_CaidCovGroupPsdc')
r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt')
if (r_VA_CaidCovGroupPsdc.calculate manager) == false then
  'N/A'
elsif (Float(r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) > 0) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidPsdcIncomeElig.save!

#56	2700	r_VA_CaidSpousePsdcIncomeElig = IF r_VA_CaidSpouseCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt >= r_VA_CaidFbrCovGroupPsdcAmt, THEN Ineligible, ELSE Eligible	
#r_VA_CaidSpousePsdcIncomeElig
#=IF(E345=0;"N/A";IF(E333>=E353;"Ineligible";"Eligible"))
#345 r_VA_CaidSpouseCovGroupPsdc T/F
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt   $
#353 r_VA_CaidFbrCovGroupPsdcAmt
#Nov 8 review Bk 58
#56 58	2700	r_VA_CaidSpousePsdcIncomeElig = IF r_VA_CaidSpouseCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt >= 0, THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpousePsdcIncomeElig
#=IF(E350=0;"N/A";IF(E333>=0;"Eligible";"Ineligible"))  NOte the = is wrong per Ruth on Phone
#350 r_VA_CaidSpouseCovGroupPsdc
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt

#Nov 11 11 review  NO change i can see
#56 58 59	2700	r_VA_CaidSpousePsdcIncomeElig = IF r_VA_CaidSpouseCovGroupPsdc = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt > 0, THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpousePsdcIncomeElig
#=IF(E356=0;"N/A";IF(E333>0;"Eligible";"Ineligible"))
#356 r_VA_CaidSpouseCovGroupPsdc
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
@r_VA_CaidSpousePsdcIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpousePsdcIncomeElig')
@r_VA_CaidSpousePsdcIncomeElig.operation = "
r_VA_CaidSpouseCovGroupPsdc                            = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPsdc')
r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt')
if (r_VA_CaidSpouseCovGroupPsdc.calculate manager) == false then
  'N/A'
elsif (Float(r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) > 0) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidSpousePsdcIncomeElig.save!

#2720	 r_VA_CaidFbrCovGroupPadcAmt = IF r_VA_CaidCovGroupPadc = FALSE AND r_VA_CaidSpouseCovGroupPadc = FALSE, THEN N/A, 
#ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, THEN r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt, ELSE r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt	
#r_VA_CaidFbrCovGroupPadcAmt
#=IF(AND(E346=0;E347=0);"N/A";IF(E338=1;E337;E336))
#346 r_VA_CaidCovGroupPadc
#347 r_VA_CaidSpouseCovGroupPadc
#338 r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
#337 r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt
#336 r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt

@r_VA_CaidFbrCovGroupPadcAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidFbrCovGroupPadcAmt')
@r_VA_CaidFbrCovGroupPadcAmt.operation = "
r_VA_CaidCovGroupPadc                               = WebCalc.find_by_name('r_VA_CaidCovGroupPadc')
r_VA_CaidSpouseCovGroupPadc                         = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPadc')
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b  = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt             = WebCalc.find_by_name('r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt')
r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt           = WebCalc.find_by_name('r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidCovGroupPadc.calculate manager) == false && (r_VA_CaidSpouseCovGroupPadc.calculate manager) == false) then
   0
elsif (r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == true then
  Float(r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
else
  Float(r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
end
"
@r_VA_CaidFbrCovGroupPadcAmt.save!
##

#59	2740	r_VA_CaidPadcIncMinusSsdiAmt = IF r_VA_CaidCovGroupPadc = FALSE, THEN 0, 
#ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = FALSE, THEN r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - Smaller of (r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt OR r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt), 
#ELSE r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt - Smaller of (r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt OR r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt)	
#r_VA_CaidPadcIncMinusSsdiAmt
#=IF(E357=0;0;IF(E345=0;E334-MIN(E350;E336);E335-MIN(E350;E337)))
#357 r_VA_CaidCovGroupPadc
#345 r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
#334 r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#350 r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt
#336 r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#335 r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#337 r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt

@r_VA_CaidPadcIncMinusSsdiAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidPadcIncMinusSsdiAmt')
@r_VA_CaidPadcIncMinusSsdiAmt.operation = "
r_VA_CaidCovGroupPadc = WebCalc.find_by_name('r_VA_CaidCovGroupPadc')
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b              = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt                    = WebCalc.find_by_name('r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt')
r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt      = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt    = WebCalc.find_by_name('r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt        = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidCovGroupPadc.calculate manager) == false) then
   0
elsif (r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == false then
 Float(r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - ([Float(r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager), Float(r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)].min)
else
 Float(r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - ([Float(r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager) , Float(r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)].min)	
end
"
@r_VA_CaidPadcIncMinusSsdiAmt.save!


#59	2750	r_VA_CaidSpousePadcIncMinusSsdiAmt = IF r_VA_CaidSpouseCovGroupPadc = FALSE, THEN 0, ELSE r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt - Smaller OF (r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt OR r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt)	
#r_VA_CaidSpousePadcIncMinusSsdiAmt
#=IF(E358=0;0;MIN(E351;E336))
#358 r_VA_CaidSpouseCovGroupPadc
#351 r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt
#336 r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
@r_VA_CaidSpousePadcIncMinusSsdiAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpousePadcIncMinusSsdiAmt')
@r_VA_CaidSpousePadcIncMinusSsdiAmt.operation = "
r_VA_CaidSpouseCovGroupPadc                                     = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPadc')
r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt                        = WebCalc.find_by_name('r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt')
r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt      = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidSpouseCovGroupPadc.calculate manager) == false) then
   0
 Float(r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager) - ([Float(r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.calculate manager) , Float(r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)].min)	
end
"
@r_VA_CaidSpousePadcIncMinusSsdiAmt.save!


#59	2760	r_VA_CaidPadcIncomeElig =  IF r_VA_CaidCovGroupPadc = FALSE, THEN N/A, ELSE IF r_VA_CaidPadcIncMinusSsdiAmt < r_VA_CaidFbrCovGroupPadcAmt AND vA_CaidDacLoseSsi = YES, THEN Eligible, ELSE Ineligible	
#r_VA_CaidPadcIncomeElig
#=IF(E357=0;"N/A";IF(AND(E370<E368;E348="YES");"Eligible";"Ineligible"))
#357 r_VA_CaidCovGroupPadc
#370 r_VA_CaidPadcIncMinusSsdiAmt
#368 r_VA_CaidFbrCovGroupPadcAmt
#348 vA_CaidDacLoseSsi
#r_VA_CaidPadcIncomeElig
@r_VA_CaidPadcIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidPadcIncomeElig')
@r_VA_CaidPadcIncomeElig.operation = "
r_VA_CaidCovGroupPadc         = WebCalc.find_by_name('r_VA_CaidCovGroupPadc')
r_VA_CaidPadcIncMinusSsdiAmt  = WebCalc.find_by_name('r_VA_CaidPadcIncMinusSsdiAmt')
r_VA_CaidFbrCovGroupPadcAmt   = WebCalc.find_by_name('r_VA_CaidFbrCovGroupPadcAmt')
vA_CaidDacLoseSsi             = manager.get_answer_by_question_name('vA_CaidDacLoseSsi')
if (r_VA_CaidCovGroupPadc.calculate manager) == false then
  'N/A'
elsif ((vA_CaidDacLoseSsi == 'Yes') && (Float(r_VA_CaidPadcIncMinusSsdiAmt.calculate manager) < Float(r_VA_CaidFbrCovGroupPadcAmt.calculate manager))) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidPadcIncomeElig.save!

#59 60	2770	r_VA_SpouseCaidPadcIncomeElig =  IF r_VA_CaidSpouseCovGroupPadc = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN N/A, ELSE IF r_VA_CaidSpousePadcIncMinusSsdiAmt < r_VA_CaidFbrCovGroupPadcAmt AND vA_CaidSpouseDacLoseSsi = YES, THEN Eligible, ELSE Ineligible	
#r_VA_SpouseCaidPadcIncomeElig
#=IF(OR(E358=0;E361=0);"N/A";IF(AND(E371<E368;E349="YES");"Eligible";"Ineligible"))
#358 r_VA_CaidSpouseCovGroupPadc
#361 r_VA_CaidCovGroupSsiPsdcPadc1619b
#371 r_VA_CaidSpousePadcIncMinusSsdiAmt
#368 r_VA_CaidFbrCovGroupPadcAmt
#349 vA_CaidSpouseDacLoseSsi
#Nov 29 2011 Name change per wbk 61
#r_VA_SpouseCaidPadcIncomeElig
@r_VA_SpouseCaidPadcIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_SpouseCaidPadcIncomeElig')
@r_VA_SpouseCaidPadcIncomeElig.operation = "
r_VA_CaidSpouseCovGroupPadc         = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupPadc')
r_VA_CaidCovGroupSsiPsdcPadc1619b   = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
r_VA_CaidSpousePadcIncMinusSsdiAmt  = WebCalc.find_by_name('r_VA_CaidSpousePadcIncMinusSsdiAmt')
r_VA_CaidFbrCovGroupPadcAmt         = WebCalc.find_by_name('r_VA_CaidFbrCovGroupPadcAmt')
vA_CaidSpouseDacLoseSsi             = manager.get_answer_by_question_name('vA_CaidSpouseDacLoseSsi')
if ((r_VA_CaidSpouseCovGroupPadc.calculate manager) == false || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == false) then
  'N/A'
elsif ((vA_CaidSpouseDacLoseSsi == 'Yes') && (Float(r_VA_CaidSpousePadcIncMinusSsdiAmt.calculate manager) < Float(r_VA_CaidFbrCovGroupPadcAmt.calculate manager))) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_SpouseCaidPadcIncomeElig.save!

#60	2780	 r_VA_CaidFbrCovGroup1619bAmt = IF r_VA_CaidCovGroup1619b = FALSE AND r_VA_CaidSpouseCovGroup1619b = FALSE, THEN 0, ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, THEN r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt, ELSE r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt	
#r_VA_CaidFbrCovGroup1619bAmt
#=IF(AND(E359=0;E360=0);0;IF(E345=1;E344;E343))
#359 r_VA_CaidCovGroup1619b
#360 r_VA_CaidSpouseCovGroup1619b
#345 r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
#344 r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt
#343 r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt
@r_VA_CaidFbrCovGroup1619bAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidFbrCovGroup1619bAmt')
@r_VA_CaidFbrCovGroup1619bAmt.operation = "
r_VA_CaidCovGroup1619b                              = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
r_VA_CaidSpouseCovGroup1619b                        = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b  = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt             = WebCalc.find_by_name('r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt')
r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt           = WebCalc.find_by_name('r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidCovGroup1619b.calculate manager) == false || (r_VA_CaidSpouseCovGroup1619b.calculate manager) == false) then
  0
elsif ((r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == true) then
  Float(r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
else
  Float(r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.calculate manager)
end
"
@r_VA_CaidFbrCovGroup1619bAmt.save!

#60	2790	 r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt = IF r_VA_CaidCovGroup1619b = FALSE THEN 0.00, ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, THEN r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt, ELSE r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt	
#r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt
#=IF(E355=0;0;IF(E345=1;E337;E336))
#355 r_VA_CaidCovGroupPsdc  Bob thinks this is a typo replace with description
#345 r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b
#337 r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#336 r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#2790 Review
#60 61	2790	 r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt = IF r_VA_CaidCovGroup1619b = FALSE THEN 0.00, 
#ELSE IF r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b = TRUE, THEN r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt, 
#ELSE r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt	r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt

@r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt')
@r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt.operation = "
r_VA_CaidCovGroup1619b                                      = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b          = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b')
r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt    = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt')
if ((r_VA_CaidCovGroup1619b.calculate manager) == false) then
  0
elsif ((r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.calculate manager) == true) then
  Float(r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)
else
  Float(r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.calculate manager)
end
"
@r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt.save!


#60	2800	r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt = r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt - (passAmt + spousePassAmt) -- (cannot be < 0)	
#r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt
#=MAX(0;E377-(E346+E347))
#377 r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt
#346 passAmt
#347 spousePassAmt
@r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt')
@r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt.operation = "
r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt = WebCalc.find_by_name('r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt')
passAmt                                         = manager.get_answer_by_question_name('passAmt')
spousePassAmt                                   = manager.get_answer_by_question_name('spousePassAmt')
[(Float(r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt.calculate manager) - (passAmt.to_f + spousePassAmt.to_f)), 0].max
"
@r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt.save!

#60	2805 RMC	r_VA_CaidUnearn1619bInelig = IF r_VA_CaidCovGroup1619b = FALSE AND r_VA_CaidSpouseCovGroup1619b = FALSE, THEN N/A, ELSE IF r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt >= r_VA_CaidFbrCovGroup1619bAmt, TRUE, ELSE FALSE	
#r_VA_CaidUnearn1619bInelig
#=IF(AND(E359=0;E360=0);"N/A";IF(E378>+E376;1;0))
#359 r_VA_CaidCovGroup1619b
#360 r_VA_CaidSpouseCovGroup1619b
#378 r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt
#376 r_VA_CaidFbrCovGroup1619bAmt
@r_VA_CaidUnearn1619bInelig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUnearn1619bInelig')
@r_VA_CaidUnearn1619bInelig.operation = "
r_VA_CaidCovGroup1619b                                = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
r_VA_CaidSpouseCovGroup1619b                          = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt  = WebCalc.find_by_name('r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt')
r_VA_CaidFbrCovGroup1619bAmt                          = WebCalc.find_by_name('r_VA_CaidFbrCovGroup1619bAmt')
if ((r_VA_CaidCovGroup1619b.calculate manager) == false && (r_VA_CaidSpouseCovGroup1619b.calculate manager) == false ) then
  false
elsif  (Float(r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt.calculate manager) >= Float(r_VA_CaidFbrCovGroup1619bAmt.calculate manager)) then
  true
else
  false
end
"
@r_VA_CaidUnearn1619bInelig.save!

#2820	r_VA_CaidUserEarnTooMuch1619bInelig = IF r_VA_CaidCovGroup1619b = FALSE, THEN N/A, ELSE IF ssiOrCaidEarnAmt = 0 , THEN TRUE, ELSE FALSE	
#r_VA_CaidUserNoEarn1619bInelig
#=IF(E359=0;"N/A";IF(E338=0;1;0))
#359 r_VA_CaidCovGroup1619b
#338 ssiOrCaidEarnAmt
# Nov 29 review 
#60 61	2820	r_VA_CaidUserEarnTooMuch1619bInelig = IF r_VA_CaidCovGroup1619b = FALSE, THEN FALSE, ELSE IF ssiOrCaidEarnAmt = 0 , THEN TRUE, ELSE FALSE	
#r_VA_CaidUserNoEarn1619bInelig
@r_VA_CaidUserNoEarn1619bInelig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserNoEarn1619bInelig')
@r_VA_CaidUserNoEarn1619bInelig.operation = "
r_VA_CaidCovGroup1619b  = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
ssiOrCaidEarnAmt        = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
if (r_VA_CaidCovGroup1619b.calculate manager) == false then
  false
elsif ssiOrCaidEarnAmt.to_f == 0 then
  true
else
  false
end
"
@r_VA_CaidUserNoEarn1619bInelig.save!

#60	2830	r_VA_CaidSpouseEarnTooMuch1619bInelig = IF r_VA_CaidSpouseCovGroup1619b = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN N/A, ELSE IF spouseSsiOrCaidEarnAmt = 0, THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseNoEarn1619bInelig
#=IF(OR(E360=0;E361=0);"N/A";IF(E339=0;1;0))
#360 r_VA_CaidSpouseCovGroup1619b
#361 r_VA_CaidCovGroupSsiPsdcPadc1619b
#339 spouseSsiOrCaidEarnAmt
#60 61	2830	r_VA_CaidSpouseEarnTooMuch1619bInelig = IF r_VA_CaidSpouseCovGroup1619b = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN FALSE, ELSE IF spouseSsiOrCaidEarnAmt = 0, THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseNoEarn1619bInelig
@r_VA_CaidSpouseNoEarn1619bInelig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseNoEarn1619bInelig')
@r_VA_CaidSpouseNoEarn1619bInelig.operation = "
r_VA_CaidSpouseCovGroup1619b      = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
spouseSsiOrCaidEarnAmt            = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
if ((r_VA_CaidSpouseCovGroup1619b.calculate manager) == false || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == false) then
  false
elsif spouseSsiOrCaidEarnAmt.to_f == 0 then
  true
else
  false
end
"
@r_VA_CaidSpouseNoEarn1619bInelig.save!


#60	2840	r_VA_CaidUserEarnTooMuch1619bInelig = IF r_VA_CaidCovGroup1619b = FALSE, THEN N/A, ELSE IF ssiOrCaidEarnAmt > the MAX of (VA_RateSsiCaidMonthlyThresholdAmt OR ssiAnnualIndividThresholdAmt/12), THEN TRUE, ELSE FALSE	
#r_VA_CaidUserEarnTooMuch1619bInelig
#=IF(E359=0;"N/A";IF(E338>MAX(E340;E341/12);1;0))
#359 r_VA_CaidCovGroup1619b
#338 ssiOrCaidEarnAmt
#340 VA_RateSsiCaidMonthlyThresholdAmt
#341 ssiAnnualIndividThresholdAmt
#60 61	2840	r_VA_CaidUserEarnTooMuch1619bInelig = IF r_VA_CaidCovGroup1619b = FALSE, THEN FALSE, ELSE IF ssiOrCaidEarnAmt > the MAX of (VA_RateSsiCaidMonthlyThresholdAmt OR ssiAnnualIndividThresholdAmt/12), THEN TRUE, ELSE FALSE	
#r_VA_CaidUserEarnTooMuch1619bInelig
@r_VA_CaidUserEarnTooMuch1619bInelig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidUserEarnTooMuch1619bInelig')
@r_VA_CaidUserEarnTooMuch1619bInelig.operation = "
r_VA_CaidCovGroup1619b        = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
ssiOrCaidEarnAmt              = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold          = WebCalc.find_by_name('rSsiIndividThreshold')
ssiAnnualIndividThresholdAmt  = manager.get_answer_by_question_name('ssiAnnualIndividThresholdAmt')
if ((r_VA_CaidCovGroup1619b.calculate manager) == false) then
  false
elsif ssiOrCaidEarnAmt.to_f  > ([Float(rSsiIndividThreshold.calculate manager), ssiAnnualIndividThresholdAmt.to_f/12].max) then
  true
else
  false
end
"
@r_VA_CaidUserEarnTooMuch1619bInelig.save!

#60	2850	r_VA_CaidSpouseEarnTooMuch1619bInelig = IF r_VA_CaidSpouseCovGroup1619b = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN N/A, ELSE IF spouseSsiOrCaidEarnAmt > the Max of (VA_RateSsiCaidMonthlyThresholdAmt OR spouseAnnualIndividThresholdAmt/12), THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseEarnTooMuch1619bInelig
#60 61	2850	r_VA_CaidSpouseEarnTooMuch1619bInelig = IF r_VA_CaidSpouseCovGroup1619b = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN FALSE, 
#ELSE IF spouseSsiOrCaidEarnAmt > the Max of (VA_RateSsiCaidMonthlyThresholdAmt OR spouseAnnualIndividThresholdAmt/12), THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseEarnTooMuch1619bInelig
@r_VA_CaidSpouseEarnTooMuch1619bInelig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseEarnTooMuch1619bInelig')
@r_VA_CaidSpouseEarnTooMuch1619bInelig.operation = "
r_VA_CaidSpouseCovGroup1619b      = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
spouseSsiOrCaidEarnAmt            = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
rSsiIndividThreshold              = WebCalc.find_by_name('rSsiIndividThreshold')
spouseAnnualIndividThresholdAmt   = manager.get_answer_by_question_name('spouseAnnualIndividThresholdAmt')
if ((r_VA_CaidSpouseCovGroup1619b.calculate manager) == false || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == false) then
  false
elsif spouseSsiOrCaidEarnAmt.to_f  > ([Float(rSsiIndividThreshold.calculate manager), (spouseAnnualIndividThresholdAmt.to_f)/12 ].max) then
  true
else
  false
end
"
@r_VA_CaidSpouseEarnTooMuch1619bInelig.save!


#60	2860	r_VA_Caid1619bIncomeElig = IF r_VA_CaidCovGroup1619b = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt > 0, THEN Eligible as SSI Recipient, 
#ELSE IF r_VA_CaidUnearn1619bInelig = TRUE OR r_VA_CaidUserNoEarn1619bInelig = TRUE OR r_VA_CaidUserEarnTooMuch1619bInelig TRUE, THEN Ineligible, ELSE Eligible	
#r_VA_Caid1619bElig
#=IF(E359=0;"N/A";IF(E333>0;"Eligible as SSI Recipient";IF(OR(E380=1;E382=1;E385=1);"Ineligible";"Eligible")))
#359 r_VA_CaidCovGroup1619b
#333 r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt
#380 r_VA_CaidUnearn1619bInelig
#382 r_VA_CaidUserNoEarn1619bInelig
#385 r_VA_CaidUserEarnTooMuch1619bInelig
#Nov 29 Name changed
#r_VA_Caid1619bIncomeElig
@r_VA_Caid1619bIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_Caid1619bIncomeElig')
@r_VA_Caid1619bIncomeElig.operation = "
r_VA_CaidCovGroup1619b                                  = WebCalc.find_by_name('r_VA_CaidCovGroup1619b')
r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt')
r_VA_CaidUnearn1619bInelig                              = WebCalc.find_by_name('r_VA_CaidUnearn1619bInelig')
r_VA_CaidUserNoEarn1619bInelig                          = WebCalc.find_by_name('r_VA_CaidUserNoEarn1619bInelig')
r_VA_CaidUserEarnTooMuch1619bInelig                     = WebCalc.find_by_name('r_VA_CaidUserEarnTooMuch1619bInelig')
if ((r_VA_CaidCovGroup1619b.calculate manager) == false) then
  'N/A'
elsif Float(r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager)  > 0 then
  'Eligible as SSI Recipient'
elsif ((r_VA_CaidUnearn1619bInelig.calculate manager) ==  true || (r_VA_CaidUserNoEarn1619bInelig.calculate manager) == true || (r_VA_CaidUserEarnTooMuch1619bInelig.calculate manager) == true) then
  'Ineligible'
else
  'Eligible'
end
"
@r_VA_Caid1619bIncomeElig.save!

#60	2870	r_VA_CaidSpouse1619bIncomeElig = IF r_VA_CaidSpouseCovGroup1619b = FALSE OR r_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE, THEN N/A, ELSE IF r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt > 0, THEN Eligible as SSI Recipient, 
#ELSE IF r_VA_CaidUnearn1619bInelig = TRUE OR r_VA_CaidSpouseNoEarn1619bInelig = TRUE OR r_VA_CaidSpouseEarnTooMuch1619bInelig TRUE, THEN Ineligible, ELSE Eligible	
#r_VA_CaidSpouse1619bIncomeElig
#=IF(OR(E360=0;E361=0);"N/A";IF(E334>0;"Eligible as SSI Recipient";IF(OR(E380=1;E383=1;E386=1);"Ineligible";"Eligible")))
#360 r_VA_CaidSpouseCovGroup1619b
#361 r_VA_CaidCovGroupSsiPsdcPadc1619b
#334 r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt
#380 r_VA_CaidUnearn1619bInelig
#383 r_VA_CaidSpouseNoEarn1619bInelig
#386 r_VA_CaidSpouseEarnTooMuch1619bInelig
#r_VA_CaidSpouse1619bIncomeElig Nov 29 2011 name change per Wbk 61
@r_VA_CaidSpouse1619bIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouse1619bIncomeElig')
@r_VA_CaidSpouse1619bIncomeElig.operation = "
r_VA_CaidSpouseCovGroup1619b                            = WebCalc.find_by_name('r_VA_CaidSpouseCovGroup1619b')
r_VA_CaidCovGroupSsiPsdcPadc1619b                       = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt  = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt')
r_VA_CaidUnearn1619bInelig                              = WebCalc.find_by_name('r_VA_CaidUnearn1619bInelig')
r_VA_CaidSpouseNoEarn1619bInelig                        = WebCalc.find_by_name('r_VA_CaidSpouseNoEarn1619bInelig')
r_VA_CaidSpouseEarnTooMuch1619bInelig                   = WebCalc.find_by_name('r_VA_CaidSpouseEarnTooMuch1619bInelig')
if ((r_VA_CaidSpouseCovGroup1619b.calculate manager) == false || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == false ) then
  'N/A'
elsif Float(r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.calculate manager)  > 0 then
  'Eligible as SSI Recipient'
elsif ((r_VA_CaidUnearn1619bInelig.calculate manager) ==  true || (r_VA_CaidSpouseNoEarn1619bInelig.calculate manager) == true || (r_VA_CaidSpouseEarnTooMuch1619bInelig.calculate manager) == true) then
  'Ineligible'
else
  'Eligible'
end
"
@r_VA_CaidSpouse1619bIncomeElig.save!

#61	2880	Determine Medicaid Income Eligiblility for Auxiliary Grant Recipient
#61	3030	r_VA_CaidCovGroupAuxGrant = IF vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = Auxiliary Grant, THEN TRUE, ELSE FALSE	
#r_VA_CaidCovGroupAuxGrant
#=IF(OR(E392="Auxiliary Grant";E394="Auxiliary Grant");1;0)
#392 vA_CaidGetCoveredGroup
#394 vA_CaidApplyCoveredGroup
@r_VA_CaidCovGroupAuxGrant  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGroupAuxGrant')
@r_VA_CaidCovGroupAuxGrant.operation = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if (vA_CaidGetCoveredGroup == 'Auxiliary Grant' || vA_CaidApplyCoveredGroup == 'Auxiliary Grant') then
  true
else 
  false
end
"
@r_VA_CaidCovGroupAuxGrant.save!

#61	3040	r_VA_CaidSpouseCovGroupAuxGrant = IF vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup = Auxiliary Grant, THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseCovGroupAuxGrant
#=IF(OR(E393="Auxiliary Grant";E395="Auxiliary Grant");1;0)
#393 vA_caidSpouseGetCoveredGroup
#395 vA_caidSpouseApplyCoveredGroup
@r_VA_CaidSpouseCovGroupAuxGrant  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGroupAuxGrant')
@r_VA_CaidSpouseCovGroupAuxGrant.operation = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if (vA_caidSpouseGetCoveredGroup == 'Auxiliary Grant' || vA_caidSpouseApplyCoveredGroup == 'Auxiliary Grant') then
  true
else 
  false
end
"
@r_VA_CaidSpouseCovGroupAuxGrant.save!


#61	3060	r_VA_CaidAuxGrantIncomeElig = IF r_VA_CaidCovGroupAuxGrant = FALSE, THEN N/A, ELSE IF (r_VA_CaidSpouseCovGroupAuxGrant = FALSE AND r_VA_CaidCountIncomeAmt < vA_AuxGrantFacilityRateAmt) 
                                                             #OR ( r_VA_CaidSpouseCovGroupAuxGrant = TRUE AND r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt < vA_CoupleAuxGrantFacilityRateAmt), THEN Eligible, ELSE Ineligible	
#r_VA_CaidAuxGrantIncomeElig
#=IF(E405=0;"N/A";IF(OR(AND(E406=0;E396<E398);AND(E406=1;E396+E397<E399));"Eligible";"Ineligible"))
#405 r_VA_CaidCovGroupAuxGrant
#406 r_VA_CaidSpouseCovGroupAuxGrant
#396 r_VA_CaidCountIncomeAmt
#398 vA_AuxGrantFacilityRateAmt
#397 r_VA_CaidSpouseCountIncomeAmt
#399 vA_CoupleAuxGrantFacilityRateAmt
@r_VA_CaidAuxGrantIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidAuxGrantIncomeElig')
@r_VA_CaidAuxGrantIncomeElig.operation = "
r_VA_CaidCovGroupAuxGrant             = WebCalc.find_by_name('r_VA_CaidCovGroupAuxGrant')
r_VA_CaidSpouseCovGroupAuxGrant       = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupAuxGrant')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
vA_AuxGrantFacilityRateAmt            = manager.get_answer_by_question_name('vA_AuxGrantFacilityRateAmt')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
vA_CoupleAuxGrantFacilityRateAmt      = manager.get_answer_by_question_name('vA_CoupleAuxGrantFacilityRateAmt')
if (r_VA_CaidCovGroupAuxGrant.calculate manager) == false then
  'N/A'
elsif (((r_VA_CaidSpouseCovGroupAuxGrant.calculate manager) == false && Float(r_VA_CaidCountIncomeAmt.calculate manager) < vA_AuxGrantFacilityRateAmt.to_f) ||
        ((r_VA_CaidSpouseCovGroupAuxGrant.calculate manager) == true && Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < vA_CoupleAuxGrantFacilityRateAmt.to_f)) then
  'Eligible'
else
  'Ineligible'
end
"
@r_VA_CaidAuxGrantIncomeElig.save!

#61	3070	r_VA_CaidSpouseAuxGrantIncomeElig = IF r_VA_CaidSpouseCovGroupAuxGrant = FALSE OR r_VA_CaidUserSpouseBothGetOrApply = FALSE, THEN N/A, 
#ELSE IF (r_VA_CaidCovGroupAuxGrant = FALSE AND r_VA_CaidSpouseCountIncomeAmt < vA_AuxGrantFacilityRateAmt) OR ( r_VA_CaidCovGroupAuxGrant = TRUE AND r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt < vA_CoupleAuxGrantFacilityRateAmt), THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpouseAuxGrantIncomeElig
#=IF(OR(E406=0;E402=0);"N/A";IF(OR(AND(E405=0;E397<E398);AND(E405=1;E396+E397<E399));"Eligible";"Ineligible"))
#406 r_VA_CaidSpouseCovGroupAuxGrant
#402 r_VA_CaidUserSpouseBothGetOrApply
#405 r_VA_CaidCovGroupAuxGrant
#397 r_VA_CaidSpouseCountIncomeAmt
#398 vA_AuxGrantFacilityRateAmt
#396 r_VA_CaidCountIncomeAmt
#399 vA_CoupleAuxGrantFacilityRateAmt
@r_VA_CaidSpouseAuxGrantIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseAuxGrantIncomeElig')
@r_VA_CaidSpouseAuxGrantIncomeElig.operation = "
r_VA_CaidSpouseCovGroupAuxGrant       = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupAuxGrant')
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidCovGroupAuxGrant             = WebCalc.find_by_name('r_VA_CaidCovGroupAuxGrant')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
vA_AuxGrantFacilityRateAmt            = manager.get_answer_by_question_name('vA_AuxGrantFacilityRateAmt')
vA_CoupleAuxGrantFacilityRateAmt      = manager.get_answer_by_question_name('vA_CoupleAuxGrantFacilityRateAmt')
if ((r_VA_CaidSpouseCovGroupAuxGrant.calculate manager) == false || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == false) then
  'N/A'
elsif (((r_VA_CaidCovGroupAuxGrant.calculate manager) == false && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < vA_AuxGrantFacilityRateAmt.to_f)) ||
        ((r_VA_CaidCovGroupAuxGrant.calculate manager) == true && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) < vA_CoupleAuxGrantFacilityRateAmt.to_f))) then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseAuxGrantIncomeElig.save!


#61	3080	Determine Income Eligiblility for ABD- Medically Indigent Groups 
#61	3200	r_VA_CaidAbdAssistUnitForIncomeNumber = IF CaidGet AND caidApply <> YES, THEN 0, 
#ELSE IF liveWithSpouse = YES AND 1(2(spouseBlind OR spouseDisability = YES2) AND 3(caidSpouseGet OR caidSpouseApply = YES3) OR vA_CaidDeemedSpouseIncomeAmt > 0.001), THEN 2, ELSE 1	
#r_VA_CaidAbdAssistUnitForIncomeNumber
#=IF1(AND2(E416<>"YES";E418<>"YES"2);0;IF3(AND4(E413="YES";OR5(OR6(E414="YES";E415="YES"6);OR7(E417="YES";E419="YES"7);E420>05)4);2;1 3)1)
#416 caidGet
#418 caidApply
#413 liveWithSpouse
#414 spouseBlind
#415 spouseDisability
#417 caidSpouseGet
#419 caidSpouseApply
#420 vA_CaidDeemedSpouseIncomeAmt
#Note email to D Ruth to determine if this is what we want
#=IF(AND(E416<>"YES",E418<>"YES"),0,IF(AND(E413="YES",OR(AND(OR(E414="YES",E415="YES"),OR(E417="YES",E419="YES")),E420>0)),2,1))

#=IF1(AND2(E416<>"YES",E418<>"YES"2),0,IF3(AND4(E413="YES",OR5(AND6(OR7(E414="YES",E415="YES"7),OR8(E417="YES",E419="YES"8)6),E420>05)4),2,1 3)1)
#IF1(AND2(E416<>"YES",E418<>"YES"2),0,IF3(AND4(liveWithSpouse="YES",OR5(AND6(OR7(spouseBlind="YES",spouseDisability="YES"7),OR8(caidSpouseGet="YES",caidSpouseApply="YES"8)6),vA_CaidDeemedSpouseIncomeAmt>05)4),2,1 3)1)

#No, to get a size of 2, it has to be: Live with spouse AND either (A & B) or C.
@r_VA_CaidAbdAssistUnitForIncomeNumber  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidAbdAssistUnitForIncomeNumber')
@r_VA_CaidAbdAssistUnitForIncomeNumber.operation = "
caidGet                       = manager.get_answer_by_question_name('caidGet')
caidApply                     = manager.get_answer_by_question_name('caidApply')
liveWithSpouse                = manager.get_answer_by_question_name('liveWithSpouse')
spouseBlind                   = manager.get_answer_by_question_name('spouseBlind')
spouseDisability              = manager.get_answer_by_question_name('spouseDisability')
caidSpouseGet                 = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply               = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidDeemedSpouseIncomeAmt  = manager.get_answer_by_question_name('vA_CaidDeemedSpouseIncomeAmt')
if caidGet != 'Yes' && caidApply != 'Yes' then
  0
elsif liveWithSpouse == 'Yes' && ((spouseBlind == 'Yes' || spouseDisability == 'Yes') && (caidSpouseGet == 'Yes' ||caidSpouseApply == 'Yes') || vA_CaidDeemedSpouseIncomeAmt.to_f > 0 ) then
  2
else
  1
end
"
@r_VA_CaidAbdAssistUnitForIncomeNumber.save!

#61	3440	r_VA_Caid80PctFplIncomeElig =  IF vA_CaidGetCoveredGroup <> 80% FPL AND vA_CaidApplyCoveredGroup <> 80% FPL, THEN N/A, 
# ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidCountIncomeAmt <= caid_80percent_fpl_inc_limit_assist_unit_1, THEN Eligible, 
# ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt) <= caid_80percent_fpl_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible	
#r_VA_Caid80PctFplIncomeElig
@r_VA_Caid80PctFplIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_Caid80PctFplIncomeElig')
#=IF(AND(E425<>"80% FPL";E427<>"80% FPL");"N/A";IF(AND(E443=1;E439<=E429);"Eligible";IF(AND(E443=2;E439+E440<=E430);"Eligible";"Ineligible")))
#425 vA_CaidGetCoveredGroup
#427 vA_CaidApplyCoveredGroup
#443 r_VA_CaidAbdAssistUnitForIncomeNumber
#439 r_VA_CaidCountIncomeAmt
#429 caid_80percent_fpl_inc_limit_assist_unit_1  caid_80percent_fpl_inc_limit_assist_unit_1
#440 r_VA_CaidSpouseCountIncomeAmt
#430 caid_80percent_fpl_inc_limit_assist_unit_2  80% FPL Income Limit for Assistance unit of 2
#Note to Bob hardwire these for now but add this in to next iteration
@r_VA_Caid80PctFplIncomeElig.operation = "
vA_CaidGetCoveredGroup                          = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup                        = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber           = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountIncomeAmt                         = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_80percent_fpl_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
r_VA_CaidSpouseCountIncomeAmt                   = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_80percent_fpl_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_2')
if vA_CaidGetCoveredGroup != '80% FPL' &&  vA_CaidApplyCoveredGroup != '80% FPL' then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidCountIncomeAmt.calculate manager) < Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager)))  then
  
  'Eligible' 
elsif 
     (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_80percent_fpl_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_Caid80PctFplIncomeElig.save!


#61	3460	r_VA_CaidSpouse80PctFplIncomeElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> 80% FPL AND vA_caidSpouseApplyCoveredGroup <> 80% FPL), THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidSpouseCountIncomeAmt <+ caid_80percent_fpl_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) <= caid_80percent_fpl_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouse80PctFplIncomeElig
@r_VA_CaidSpouse80PctFplIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouse80PctFplIncomeElig')
#=IF(OR(E444="NO";AND(E426<>"80% FPL";E428<>"80% FPL"));"N/A";IF(AND(E443=1;E440<=E429);"Eligible";IF(AND(E443=2;(E440+E439)>=E430);"Eligible";"Ineligible")))
#444 r_VA_CaidUserSpouseBothGetOrApply
#426 vA_caidSpouseGetCoveredGroup
#428 vA_caidSpouseApplyCoveredGroup
#443 r_VA_CaidAbdAssistUnitForIncomeNumber
#440 r_VA_CaidSpouseCountIncomeAmt
#429 caid_80percent_fpl_inc_limit_assist_unit_1
#439 r_VA_CaidCountIncomeAmt
#430 caid_80percent_fpl_inc_limit_assist_unit_2
#RMC edited formula replace >= with <= in last term on 11/28/2011
@r_VA_CaidSpouse80PctFplIncomeElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply               = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
vA_caidSpouseGetCoveredGroup                    = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup                  = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber           = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidSpouseCountIncomeAmt                   = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt                         = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_80percent_fpl_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
rateCaid_80percent_fpl_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_2')
if ((vA_caidSpouseGetCoveredGroup != '80% FPL' &&  vA_caidSpouseApplyCoveredGroup != '80% FPL')  || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == false) then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager)))  then
  
  'Eligible' 
elsif 
     (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && (( Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) + Float(r_VA_CaidCountIncomeAmt.calculate manager) ) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouse80PctFplIncomeElig.save!

#62	3480	r_VA_CaidQmbIncomeElig =  IF vA_CaidGetCoveredGroup <> QMB AND vA_CaidApplyCoveredGroup <> QMB, THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidCountIncomeAmt <= caid_qmb_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt) <= caid_qmb_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible	
#r_VA_CaidQmbIncomeElig

@r_VA_CaidQmbIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidQmbIncomeElig')
#=IF(AND(E426<>"QMB";E428<>"QMB");"N/A";IF(AND(E444=1;E440<=E432);"Eligible";IF(AND(E444=2;E440+E441<=E433);"Eligible";"Ineligible")))
#426 vA_CaidGetCoveredGroup
#428 vA_CaidApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#441 r_VA_CaidSpouseCountIncomeAmt
#433 caid_qmb_inc_limit_assist_unit_2
#xx rateCaid_80percent_fpl_inc_limit_assist_unit_1
@r_VA_CaidQmbIncomeElig.operation = "
vA_CaidGetCoveredGroup                = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup              = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_qmb_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
rateCaid_qmb_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
if vA_CaidGetCoveredGroup != 'QMB' &&  vA_CaidApplyCoveredGroup != 'QMB' then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidCountIncomeAmt.calculate manager) < Float(rateCaid_qmb_inc_limit_assist_unit_1.calculate manager)))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_qmb_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidQmbIncomeElig.save!

#62	3500	r_VA_CaidSpouseQmbIncomeElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> QMB AND vA_caidSpouseApplyCoveredGroup <> QMB), THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidSpouseCountIncomeAmt <= caid_qmb_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) <= caid_qmb_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseQmbIncomeElig
@r_VA_CaidSpouseQmbIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseQmbIncomeElig')
#=IF(OR(E445="NO";AND(E427<>"QMB";E429<>"QMB"));"N/A";IF(AND(E444=1;E441<=E432);"Eligible";IF(AND(E444=2;(E441+E440)<=E433);"Eligible";"Ineligible")))
#427 vA_caidSpouseGetCoveredGroup
#429 vA_caidSpouseApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#441 r_VA_CaidSpouseCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#441 r_VA_CaidSpouseCountIncomeAmt
#433 caid_qmb_inc_limit_assist_unit_2

@r_VA_CaidSpouseQmbIncomeElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseBothGetOrApply = 
vA_caidSpouseGetCoveredGroup            = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber   = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidSpouseCountIncomeAmt           = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt                 = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_qmb_inc_limit_assist_unit_1    = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
rateCaid_qmb_inc_limit_assist_unit_2    = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
if ((vA_caidSpouseGetCoveredGroup != 'QMB' &&  vA_caidSpouseApplyCoveredGroup != 'QMB') || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == false) then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) <= Float(rateCaid_qmb_inc_limit_assist_unit_1.calculate manager)))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && ((Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) + Float(r_VA_CaidCountIncomeAmt.calculate manager) ) <= Float(rateCaid_qmb_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseQmbIncomeElig.save!


#62	3520	r_VA_CaidSlmbIncomeElig =  IF vA_CaidGetCoveredGroup <> SLMB AND vA_CaidApplyCoveredGroup <> SLMB, THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND (r_VA_CaidCountIncomeAmt > caid_qmb_inc_limit_assist_unit_1 AND  < caid_slmb_inc_limit_assist_unit_1), THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND ((r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt) > caid_qmb_inc_limit_assist_unit_2 AND < caid_slmb_inc_limit_assist_unit_2), THEN Eligible, ELSE Ineligible	
#r_VA_CaidSlmbIncomeElig
@r_VA_CaidSlmbIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSlmbIncomeElig')
#=IF(AND(E426<>"SLMB";E428<>"SLMB");"N/A";IF(AND(E444=1;E440>432;E440<E434);"Eligible";IF(AND(E444=2;E440+E441>E433;E440+E441<E435);"Eligible";"Ineligible")))
#426 vA_CaidGetCoveredGroup
#428 vA_CaidApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#434 caid_slmb_inc_limit_assist_unit_1
#441  r_VA_CaidSpouseCountIncomeAmt
@r_VA_CaidSlmbIncomeElig.operation = "
vA_CaidGetCoveredGroup                = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup              = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_qmb_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
rateCaid_qmb_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
rateCaid_slmb_inc_limit_assist_unit_1 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
rateCaid_slmb_inc_limit_assist_unit_2 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
if vA_CaidGetCoveredGroup != 'QMB' &&  vA_CaidApplyCoveredGroup != 'QMB' then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1) && (Float(r_VA_CaidCountIncomeAmt.calculate manager) > Float(rateCaid_qmb_inc_limit_assist_unit_1.calculate manager))  && (Float(r_VA_CaidCountIncomeAmt.calculate manager) < Float(rateCaid_slmb_inc_limit_assist_unit_1.calculate manager))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) > Float(rateCaid_qmb_inc_limit_assist_unit_2.calculate manager)) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_slmb_inc_limit_assist_unit_2.calculate manager))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSlmbIncomeElig.save!

#62	3540	r_VA_CaidSpouseSlmbIncomeElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> SLMB AND vA_caidSpouseApplyCoveredGroup <> SLMB), THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND (r_VA_CaidSpouseCountIncomeAmt > caid_qmb_inc_limit_assist_unit_1 AND < caid_slmb_inc_limit_assist_unit_1), THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND ((r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) > caid_qmb_inc_limit_assist_unit_2 AND < caid_slmb_inc_limit_assist_unit_2), THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseSlmbIncomeElig
@r_VA_CaidSpouseSlmbIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseSlmbIncomeElig')
#=IF(OR(E445="NO";AND(E427<>"SLMB";E429<>"SLMB"));"N/A";IF(AND(E444=1;E441>E432;E441<E434);"Eligible";IF(AND(E444=2;(E441+E440)>E433;(E441+E440)<E435);"Eligible";"Ineligible")))
#445 r_VA_CaidUserSpouseBothGetOrApply
#427 vA_caidSpouseGetCoveredGroup
#429 vA_caidSpouseApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#441  r_VA_CaidSpouseCountIncomeAmt
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#434 caid_slmb_inc_limit_assist_unit_1
@r_VA_CaidSpouseSlmbIncomeElig.operation = "
vA_caidSpouseGetCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup        = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_qmb_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
rateCaid_qmb_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
rateCaid_slmb_inc_limit_assist_unit_1 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
rateCaid_slmb_inc_limit_assist_unit_2 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
if ((vA_caidSpouseGetCoveredGroup != 'SLMB' &&  vA_caidSpouseApplyCoveredGroup != 'SLMB') || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == 'No') then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1) && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) > Float(rateCaid_qmb_inc_limit_assist_unit_1.calculate manager))  && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < Float(rateCaid_slmb_inc_limit_assist_unit_1.calculate manager))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) > Float(rateCaid_qmb_inc_limit_assist_unit_2.calculate manager)) && (Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_slmb_inc_limit_assist_unit_2.calculate manager)  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseSlmbIncomeElig.save!

#62 64	3560	r_VA_CaidQdwiIncomeAndEarnElig =  IF vA_CaidGetCoveredGroup <> QDWI AND vA_CaidApplyCoveredGroup <> QDWI, THEN N/A, 
#ELSE IF r_VA_CaidCountEarnAmt > 0 AND r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidCountIncomeAmt <= caid_qdwi_works_earn_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidCountEarnAmt > 0 AND r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt) <= caid_qdwi_works_earn_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible	
#r_VA_CaidQdwiIncomeAndEarnElig
@r_VA_CaidQdwiIncomeAndEarnElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidQdwiIncomeAndEarnElig')
#=IF(AND(E426<>"QDWI";E428<>"QDWI");"N/A";IF(AND(E442>0;E444=1;E440<=E438);"Eligible";IF(AND(E442>0;E444=2;E440+E441<=E439);"Eligible";"Ineligible")))
#426 vA_CaidGetCoveredGroup
#428 vA_CaidApplyCoveredGroup
#442 r_VA_CaidCountEarnAmt
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#434 caid_slmb_inc_limit_assist_unit_1
#441  r_VA_CaidSpouseCountIncomeAmt
@r_VA_CaidQdwiIncomeAndEarnElig.operation = "
vA_CaidGetCoveredGroup                            = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup                          = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber             = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountEarnAmt                             = WebCalc.find_by_name('r_VA_CaidCountEarnAmt')
r_VA_CaidCountIncomeAmt                           = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt                     = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_1')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_2')
if vA_CaidGetCoveredGroup != 'QDWI' &&  vA_CaidApplyCoveredGroup != 'QDWI' then
  'N/A'
elsif (Float(r_VA_CaidCountEarnAmt.calculate manager) > 0 && Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1) && (Float(r_VA_CaidCountIncomeAmt.calculate manager) < Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.calculate manager))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidCountEarnAmt.calculate manager) > 0 && Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_2.calculate manager))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidQdwiIncomeAndEarnElig.save!

#62	3580	IF (vA_CaidGetCoveredGroup = QDWI OR vA_CaidApplyCoveredGroup = QDWI) AND r_VA_CaidCountEarnAmt = 0, THEN Appear, ELSE No	
#vA_TRQDWIIneligNoEarn
@vA_TRQDWIIneligNoEarn  = WebCalc.find_or_create_by_name(:name => 'vA_TRQDWIIneligNoEarn')
@vA_TRQDWIIneligNoEarn.operation = "
vA_CaidGetCoveredGroup    = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup  = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidCountEarnAmt     = WebCalc.find_by_name('r_VA_CaidCountEarnAmt')
if (vA_CaidGetCoveredGroup == 'QDWI' ||  vA_CaidApplyCoveredGroup == 'QDWI') && Float(r_VA_CaidCountEarnAmt.calculate manager) > 0 then
  true
else
  false
end
"
@vA_TRQDWIIneligNoEarn.save!
#

#62	3600	r_VA_CaidSpouseQdwiIncomeAndEarnElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> QDWI AND vA_caidSpouseApplyCoveredGroup <> QDWI), THEN N/A, 
#ELSE IF r_VA_CaidSpouseCountEarnAmt > 0 AND r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND r_VA_CaidSpouseCountIncomeAmt <= caid_qdwi_works_earn_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidSpouseCountEarnAmt > 0 AND r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND (r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) <= caid_qdwi_works_earn_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseQdwiIncomeAndEarnElig
@r_VA_CaidSpouseQdwiIncomeAndEarnElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseQdwiIncomeAndEarnElig')
#==IF(OR(E445="NO";AND(E427<>"QDWI";E429<>"QDWI"));"N/A";IF(AND(E443>0;E444=1;E441<=E438);"Eligible";IF(AND(E443>0;E444=2;(E441+E440)<=E439);"Eligible";"Ineligible")))
#445 r_VA_CaidUserSpouseBothGetOrApply
#427 vA_caidSpouseGetCoveredGroup
#429 vA_caidSpouseApplyCoveredGroup
#443 r_VA_CaidSpouseCountEarnAmt
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#441  r_VA_CaidSpouseCountIncomeAmt
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#434 caid_slmb_inc_limit_assist_unit_1
@r_VA_CaidSpouseQdwiIncomeAndEarnElig.operation = "
vA_CaidGetCoveredGroup                            = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup                          = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidUserSpouseBothGetOrApply                 = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidAbdAssistUnitForIncomeNumber             = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidSpouseCountEarnAmt                       = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmt')
r_VA_CaidSpouseCountIncomeAmt                     = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt                           = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_1')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_2')
if ((vA_CaidGetCoveredGroup != 'QMB' &&  vA_CaidApplyCoveredGroup != 'QMB') || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == 'No' ) then
  'N/A'
elsif (Float(r_VA_CaidSpouseCountEarnAmt.calculate manager) > 0 && Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1) && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.calculate manager))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidSpouseCountEarnAmt.calculate manager) > 0 && Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) < Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_2.calculate manager))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseQdwiIncomeAndEarnElig.save!

#62	3640	r_VA_CaidQiIncomeElig =  IF vA_CaidGetCoveredGroup <> QI AND vA_CaidApplyCoveredGroup <> QI, THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND (r_VA_CaidCountIncomeAmt >= caid_slmb_inc_limit_assist_unit_1 AND  < caid_qi_inc_limit_assist_unit_1), THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND ((r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt) >= caid_slmb_inc_limit_assist_unit_2 AND < caid_qi_inc_limit_assist_unit_2), THEN Eligible, ELSE Ineligible	
#r_VA_CaidQiIncomeElig
@r_VA_CaidQiIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidQiIncomeElig')
#==IF(AND(E426<>"QI";E428<>"QI");"N/A";IF(AND(E444=1;E440>=433;E440<E436);"Eligible";IF(AND(E444=2;E440+E441>=E435;E440+E441<E437);"Eligible";"Ineligible")))
#426 vA_CaidGetCoveredGroup
#428 vA_CaidApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#440 r_VA_CaidCountIncomeAmt
#436 caid_qi_inc_limit_assist_unit_1
#441 r_VA_CaidSpouseCountIncomeAmt
  #433 caid_qmb_inc_limit_assist_unit_2

@r_VA_CaidQiIncomeElig.operation = "
vA_CaidGetCoveredGroup                = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup              = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_slmb_inc_limit_assist_unit_1 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
rateCaid_slmb_inc_limit_assist_unit_2 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
rateCaid_qi_inc_limit_assist_unit_1   = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_1')
rateCaid_qi_inc_limit_assist_unit_2   = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_2')
if vA_CaidGetCoveredGroup != 'QMB' &&  vA_CaidApplyCoveredGroup != 'QMB' then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidCountIncomeAmt.calculate manager) > Float(rateCaid_slmb_inc_limit_assist_unit_1.calculate manager)) && 
      (Float(r_VA_CaidCountIncomeAmt.calculate manager) < Float(rateCaid_qi_inc_limit_assist_unit_1.calculate manager)))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) > Float(rateCaid_slmb_inc_limit_assist_unit_2.calculate manager)) && 
      ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) < Float(rateCaid_qi_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidQiIncomeElig.save!

#62	3660	r_VA_CaidSpouseQiIncomeElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> QI AND vA_caidSpouseApplyCoveredGroup <> QI), THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND (r_VA_CaidSpouseCountIncomeAmt >= caid_slmb_inc_limit_assist_unit_1 AND < caid_qi_inc_limit_assist_unit_1), THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND ((r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) >= caid_slmb_inc_limit_assist_unit_2 AND < caid_qi_inc_limit_assist_unit_2), THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseQiIncomeElig
@r_VA_CaidSpouseQiIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseQiIncomeElig')
#=IF(OR(E447="NO";AND(E429<>"QI";E431<>"QI"));"N/A";IF(AND(E446=1;E443>=E436;E443<E438);"Eligible";IF(AND(E446=2;(E443+E442)>=E437;(E443+E442)<E439);"Eligible";"Ineligible")))
#447 r_VA_CaidUserSpouseBothGetOrApply
#429 vA_caidSpouseGetCoveredGroup
#431 vA_caidSpouseApplyCoveredGroup
#444 r_VA_CaidAbdAssistUnitForIncomeNumber
#441  r_VA_CaidSpouseCountIncomeAmt
#440 r_VA_CaidCountIncomeAmt
#432 caid_qmb_inc_limit_assist_unit_1
#434 caid_slmb_inc_limit_assist_unit_1
@r_VA_CaidSpouseQiIncomeElig.operation = "
vA_caidSpouseGetCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup        = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidSpouseCountIncomeAmt         = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt               = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_slmb_inc_limit_assist_unit_1 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
rateCaid_slmb_inc_limit_assist_unit_2 = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
rateCaid_qi_inc_limit_assist_unit_1   = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_1')
rateCaid_qi_inc_limit_assist_unit_2   = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_2')
if ((vA_caidSpouseGetCoveredGroup != 'QI' &&  vA_caidSpouseApplyCoveredGroup != 'QI') || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == 'No') then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1) && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) > Float(rateCaid_slmb_inc_limit_assist_unit_1.calculate manager))  && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < Float(rateCaid_qi_inc_limit_assist_unit_1.calculate manager))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2) && ((Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) > Float(rateCaid_slmb_inc_limit_assist_unit_2.calculate manager)) && (Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) ) < Float(rateCaid_qi_inc_limit_assist_unit_2.calculate manager)  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseQiIncomeElig.save!


#Stopping here Sat Afternoon 1/21/2012
#62	3660	r_VA_CaidSpouseQiIncomeElig = IF r_VA_CaidUserSpouseBothGetOrApply = NO OR (vA_caidSpouseGetCoveredGroup <> QI AND vA_caidSpouseApplyCoveredGroup <> QI), THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1 AND (r_VA_CaidSpouseCountIncomeAmt >= caid_slmb_inc_limit_assist_unit_1 AND < caid_qi_inc_limit_assist_unit_1), THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND ((r_VA_CaidSpouseCountIncomeAmt + r_VA_CaidCountIncomeAmt) >= caid_slmb_inc_limit_assist_unit_2 AND < caid_qi_inc_limit_assist_unit_2), THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseQiIncomeElig
@r_VA_CaidSpouseQiIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseQiIncomeElig')
#=IF(OR(E447="NO";AND(E429<>"QI";E431<>"QI"));"N/A";IF(AND(E446=1;E443>=E436;E443<E438);"Eligible";IF(AND(E446=2;(E443+E442)>=E437;(E443+E442)<E439);"Eligible";"Ineligible")))
#447 r_VA_CaidUserSpouseBothGetOrApply
#429 vA_caidSpouseGetCoveredGroup
#431 vA_caidSpouseApplyCoveredGroup
#446 r_VA_CaidAbdAssistUnitForIncomeNumber
#443 r_VA_CaidSpouseCountIncomeAmt
#436 caid_slmb_inc_limit_assist_unit_1
#443 r_VA_CaidSpouseCountIncomeAmt
#438 caid_qi_inc_limit_assist_unit_1
#442 r_VA_CaidCountIncomeAmt
#437 caid_slmb_inc_limit_assist_unit_2
#439 caid_qi_inc_limit_assist_unit_2
@r_VA_CaidSpouseQiIncomeElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply       = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
vA_caidSpouseGetCoveredGroup            = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber   = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
r_VA_CaidSpouseCountIncomeAmt           = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt                 = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_slmb_inc_limit_assist_unit_1   = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_1')
rateCaid_slmb_inc_limit_assist_unit_2   = WebCalc.find_by_name('rateCaid_slmb_inc_limit_assist_unit_2')
rateCaid_qi_inc_limit_assist_unit_1     = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_1')
rateCaid_qi_inc_limit_assist_unit_2     = WebCalc.find_by_name('rateCaid_qi_inc_limit_assist_unit_2')
if ((vA_caidSpouseGetCoveredGroup != 'QI' &&  vA_caidSpouseApplyCoveredGroup != 'QI') || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == false) then
  'N/A'
elsif (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) >= Float(rateCaid_slmb_inc_limit_assist_unit_1.calculate manager)) && (Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) < Float(rateCaid_qi_inc_limit_assist_unit_1.calculate manager)))  then
  'Eligible' 
elsif 
      (Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && ((Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) + Float(r_VA_CaidCountIncomeAmt.calculate manager) ) >= Float(rateCaid_slmb_inc_limit_assist_unit_2.calculate manager)) && ((Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) + Float(r_VA_CaidCountIncomeAmt.calculate manager) ) < Float(rateCaid_qi_inc_limit_assist_unit_2.calculate manager)))  then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseQiIncomeElig.save!

#62	3900	r_VA_CaidAbdFplForAssistUnitSize = IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1, THEN caid_qmb_inc_limit_assist_unit_1, ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2, THEN caid_qmb_inc_limit_assist_unit_2, ELSE 0	
#r_VA_CaidAbdFplForAssistUnitSize
#=IF(E492=1;E490;IF(E492=2;E491;0))
#492 r_VA_CaidAbdAssistUnitForIncomeNumber
#490 caid_qmb_inc_limit_assist_unit_1
#491 caid_qmb_inc_limit_assist_unit_2
@r_VA_CaidAbdFplForAssistUnitSize  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidAbdFplForAssistUnitSize')
@r_VA_CaidAbdFplForAssistUnitSize.operation = "
r_VA_CaidAbdAssistUnitForIncomeNumber = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
rateCaid_qmb_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_1')
rateCaid_qmb_inc_limit_assist_unit_2   = WebCalc.find_by_name('rateCaid_qmb_inc_limit_assist_unit_2')
if Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 then
   Float(rateCaid_qmb_inc_limit_assist_unit_1.calculate manager)
elsif Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 then
   Float(rateCaid_qmb_inc_limit_assist_unit_2.calculate manager)
else 
  0
end
"
@r_VA_CaidAbdFplForAssistUnitSize.save!

#62	3910	r_VA_CaidIncomePercentOfFpl =IF r_VA_CaidUserSpouseBothGetOrApply = NO, THEN r_VA_CaidCountIncomeAmt / r_VA_CaidAbdFplForAssistUnitSize, 
#ELSE IF r_VA_CaidUserSpouseBothGetOrApply = YES, THEN (r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt)/r_VA_CaidAbdFplForAssistUnitSize. ELSE 0	
#r_VA_CaidIncomePercentOfFpl
@r_VA_CaidIncomePercentOfFpl  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidIncomePercentOfFpl')
@r_VA_CaidIncomePercentOfFpl.operation = "
r_VA_CaidUserSpouseBothGetOrApply   = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidAbdFplForAssistUnitSize    = WebCalc.find_by_name('r_VA_CaidAbdFplForAssistUnitSize')
r_VA_CaidSpouseCountIncomeAmt       = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
r_VA_CaidCountIncomeAmt             = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
if (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == false then
   Float(r_VA_CaidCountIncomeAmt.calculate manager) /  Float(r_VA_CaidAbdFplForAssistUnitSize.calculate manager)
else
   (Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager))/ Float(r_VA_CaidAbdFplForAssistUnitSize.calculate manager)
end
"
@r_VA_CaidIncomePercentOfFpl.save!

#62	3930	IF r_VA_CaidUserResourceElig = Eligible AND (r_VA_CaidQmbIncomeElig OR r_VA_CaidSlmbIncomeElig OR r_VA_CaidQiIncomeElig OR r_VA_CaidQdwiIncomeAndEarnElig)= Ineligible, THEN VA_TRCareRelatedCaidNotEligIncomeNotInRange appears.	
#VA_TRCareRelatedCaidNotEligIncomeNotInRange
@VA_TRCareRelatedCaidNotEligIncomeNotInRange  = WebCalc.find_or_create_by_name(:name => 'VA_TRCareRelatedCaidNotEligIncomeNotInRange')
@VA_TRCareRelatedCaidNotEligIncomeNotInRange.operation = "
r_VA_CaidUserResourceElig       = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
r_VA_CaidQmbIncomeElig          = WebCalc.find_by_name('r_VA_CaidQmbIncomeElig')
r_VA_CaidSlmbIncomeElig         = WebCalc.find_by_name('r_VA_CaidSlmbIncomeElig')
r_VA_CaidQiIncomeElig           = WebCalc.find_by_name('r_VA_CaidQiIncomeElig')
r_VA_CaidQdwiIncomeAndEarnElig  = WebCalc.find_by_name('r_VA_CaidQdwiIncomeAndEarnElig')
if (r_VA_CaidUserResourceElig.calculate manager) == 'Eligible'  && ((r_VA_CaidQmbIncomeElig.calculate manager)  == 'Ineligible'  ||  (r_VA_CaidSlmbIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidQiIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidQdwiIncomeAndEarnElig.calculate manager) == 'Ineligible') then
  true
else
  false
end
"
@VA_TRCareRelatedCaidNotEligIncomeNotInRange.save!

#3940 to be done

#63 64	4140	IF vA_CaidApplyCoveredGroup <> MEDICAID WORKS AND vA_CaidSsiRecipientApplyWorks <> YES, THEN FALSE, 
#ELSE IF ((blind = YES OR Disability = YES), AND (rAge >= 16 AND < 65) AND caidWinAcctEstablishedForWorks = YES 
#AND (vA_CaidWorksCompetitiveEmployNow = YES OR vA_CaidWorksSelfEmployNow = YES OR vA_CaidWorksEmployFuture =YES)), THEN r_VA_CaidWorksInitialNonFinElig = TRUE, ELSE FALSE	
#r_VA_CaidWorksInitialNonFinElig
@r_VA_CaidWorksInitialNonFinElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidWorksInitialNonFinElig')
#=IF(AND(E495<>"MEDICAID WORKS";E497<>"YES");0;IF(AND(OR(E499="YES";E501="YES");E503>=16;E503<65;E505="YES";OR(E507="YES";E509="YES";E511="YES"));1;0))
@r_VA_CaidWorksInitialNonFinElig.operation = "
vA_CaidApplyCoveredGroup         = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidSsiRecipientApplyWorks    = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
blind                            = manager.get_answer_by_question_name('blind')
disability                       = manager.get_answer_by_question_name('disability')
rAge                             = WebCalc.find_by_name('rAge')
caidWinAcctEstablishedForWorks   = manager.get_answer_by_question_name('caidWinAcctEstablishedForWorks')
vA_CaidWorksSelfEmployNow        = manager.get_answer_by_question_name('vA_CaidWorksSelfEmployNow')
vA_CaidWorksCompetitiveEmployNow = manager.get_answer_by_question_name('vA_CaidWorksCompetitiveEmployNow')
vA_CaidWorksEmployFuture         = manager.get_answer_by_question_name('vA_CaidWorksEmployFuture')
if  vA_CaidApplyCoveredGroup != 'MEDICAID WORKS'  && vA_CaidSsiRecipientApplyWorks != 'Yes' then
  false
elsif ((blind == 'Yes' || disability == 'Yes') && (Float(rAge.calculate manager) >= 16 && Float(rAge.calculate manager) < 65) && caidWinAcctEstablishedForWorks == 'Yes' &&
    (vA_CaidWorksCompetitiveEmployNow == 'Yes' || vA_CaidWorksSelfEmployNow == 'Yes' || vA_CaidWorksEmployFuture == 'Yes'))
 then
  true
else
  false
end
"
@r_VA_CaidWorksInitialNonFinElig.save!
#zzzzabvA_CaidWorksEmployFuture
#63 64	4150	IF vA_caidSpouseApplyCoveredGroup <> MEDICAID WORKS AND vA_CaidSpouseSsiRecipientApplyWorks <> YES, THEN FALSE, ELSE IF ((spouseBlind = YES OR spouseDisability = YES), AND (rSpouseAge >= 16 AND < 65) 
#AND caidSpouseWinAcctEstablishedForWorks = YES AND (vA_CaidSpouseWorksCompetitiveEmployNow = YES OR vA_CaidSpouseWorksSelfEmployNow = YES OR vA_CaidSpouseWorksEmployFuture =YES)), THEN r_VA_CaidSpouseWorksInitialNonFinElig = TRUE, ELSE FALSE	
#r_VA_CaidSpouseWorksInitialNonFinElig
@r_VA_CaidSpouseWorksInitialNonFinElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseWorksInitialNonFinElig')
@r_VA_CaidSpouseWorksInitialNonFinElig.operation = "
vA_caidSpouseApplyCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseSsiRecipientApplyWorks     = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
spouseBlind                             = manager.get_answer_by_question_name('spouseBlind')
spouseDisability                        = manager.get_answer_by_question_name('spouseDisability')
rSpouseAge                              = WebCalc.find_by_name('rSpouseAge')
caidSpouseWinAcctEstablishedForWorks    = manager.get_answer_by_question_name('caidSpouseWinAcctEstablishedForWorks')
vA_CaidSpouseWorksCompetitiveEmployNow  = manager.get_answer_by_question_name('vA_CaidSpouseWorksCompetitiveEmployNow')
vA_CaidSpouseWorksSelfEmployNow         = manager.get_answer_by_question_name('vA_CaidSpouseWorksSelfEmployNow')
vA_CaidSpouseWorksEmployFuture          = manager.get_answer_by_question_name('vA_CaidSpouseWorksEmployFuture')
if  vA_caidSpouseApplyCoveredGroup != 'MEDICAID WORKS'  && vA_CaidSpouseSsiRecipientApplyWorks != 'Yes' then
  false
elsif ((spouseBlind == 'Yes' || spouseDisability == 'Yes') && (Float(rSpouseAge.calculate manager) >= 16 && Float(rSpouseAge.calculate manager) < 65) && caidSpouseWinAcctEstablishedForWorks == 'Yes' &&
    (vA_CaidSpouseWorksCompetitiveEmployNow == 'Yes' || vA_CaidSpouseWorksSelfEmployNow == 'Yes' || vA_CaidSpouseWorksEmployFuture == 'Yes'))
 then
  true
else
  false
end
"
@r_VA_CaidSpouseWorksInitialNonFinElig.save!

#64	4380	r_VA_CaidGetSsiOr1619b= IF r_VA_CaidCovGroupSsiRecipientElig = Eligible OR (r_VA_Caid1619bIncomeElig = Eligible AND r_VA_CaidUserResourceElig = Eligible), THEN TRUE , ELSE FALSE	
#r_VA_CaidGetSsiOr1619b
@r_VA_CaidGetSsiOr1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidGetSsiOr1619b')
@r_VA_CaidGetSsiOr1619b.operation = "
r_VA_CaidCovGroupSsiRecipientElig = WebCalc.find_by_name('r_VA_CaidCovGroupSsiRecipientElig')
r_VA_Caid1619bIncomeElig          = WebCalc.find_by_name('r_VA_Caid1619bIncomeElig')
r_VA_CaidUserResourceElig         = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
if ((r_VA_Caid1619bIncomeElig.calculate manager)  == 'Eligible'  && (r_VA_CaidUserResourceElig.calculate manager) == 'Eligible') || (r_VA_CaidCovGroupSsiRecipientElig.calculate manager) == 'Eligible' then
  true
else
  false
end
"
@r_VA_CaidGetSsiOr1619b.save!


#64	4390	r_VA_caidSpouseGetSsiOr1619b= IF r_VA_CaidSpouseCovGroupSsiRecipientElig = Eligible OR (r_VA_CaidSpouse1619bIncomeElig = Eligible 
#AND (r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig = Eligible OR r_VA_CaidSpouseResourceElig = Eligible)), THEN TRUE, ELSE FALSE	
#r_VA_caidSpouseGetSsiOr1619b
#=IF(OR(E535="Eligible";AND(E537="Eligible";OR(E539="Eligible";E540="Eligible")));1;0)

@r_VA_caidSpouseGetSsiOr1619b  = WebCalc.find_or_create_by_name(:name => 'r_VA_caidSpouseGetSsiOr1619b')
@r_VA_caidSpouseGetSsiOr1619b.operation = "
r_VA_CaidSpouseCovGroupSsiRecipientElig                           = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiRecipientElig')
r_VA_CaidSpouse1619bIncomeElig                                    = WebCalc.find_by_name('r_VA_CaidSpouse1619bIncomeElig')
r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig  = WebCalc.find_by_name('r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig')
r_VA_CaidSpouseResourceElig                                       = WebCalc.find_by_name('r_VA_CaidSpouseResourceElig')
if (r_VA_CaidSpouseCovGroupSsiRecipientElig.calculate manager) == 'Eligible'  || ((r_VA_CaidSpouse1619bIncomeElig.calculate manager)  == 'Eligible'  && ((r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseResourceElig.calculate manager) == 'Eligible')) then
  true
else
  false
end
"
@r_VA_caidSpouseGetSsiOr1619b.save!


#63 64 65	4410	r_VA_CaidSsi1619bWorksInitialFinancialElig = IF vA_CaidSsiRecipientApplyWorks <> YES, THEN FALSE, ELSE IF  vA_CaidSsiRecipientApplyWorks = YES AND r_VA_CaidGetSsiOr1619b = TRUE, THEN TRUE, ELSE FALSE	
#r_VA_CaidSsi1619bWorksInitialFinancialElig
@r_VA_CaidSsi1619bWorksInitialFinancialElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSsi1619bWorksInitialFinancialElig')
@r_VA_CaidSsi1619bWorksInitialFinancialElig.operation = "
vA_CaidSsiRecipientApplyWorks   = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
r_VA_CaidGetSsiOr1619b          = WebCalc.find_by_name('r_VA_CaidGetSsiOr1619b')
if vA_CaidSsiRecipientApplyWorks != 'Yes' then 
  false
elsif
     (vA_CaidSsiRecipientApplyWorks  == 'Yes'  && (r_VA_CaidGetSsiOr1619b.calculate manager) == true) then
  true
else
  false
end
"
@r_VA_CaidSsi1619bWorksInitialFinancialElig.save!

#63 64	4420	r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig = IF vA_CaidSpouseSsiRecipientApplyWorks <> YES, THEN FALSE, ELSE IF  vA_CaidSpouseSsiRecipientApplyWorks = YES AND r_VA_caidSpouseGetSsiOr1619b = TRUE, THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig
@r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig')
@r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig.operation = "
vA_CaidSpouseSsiRecipientApplyWorks   = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
r_VA_caidSpouseGetSsiOr1619b          = WebCalc.find_by_name('r_VA_caidSpouseGetSsiOr1619b')
if vA_CaidSpouseSsiRecipientApplyWorks != 'Yes' then 
  false
elsif
     (vA_CaidSpouseSsiRecipientApplyWorks  == 'Yes'  && (r_VA_caidSpouseGetSsiOr1619b.calculate manager) == true) then
  true
else
  false
end
"
@r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig.save!


#64	4430	r_VA_CaidNonSsi1619bWorksInitialFinancialElig = IF vA_CaidApplyCoveredGroup <> MEDICAID WORKS, THEN N/A, ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1, 
#AND r_VA_CaidCountIncomeAmt <= caid_80percent_fpl_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt <= caid_80percent_fpl_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidNonSsi1619bWorksInitialFinancialElig
@r_VA_CaidNonSsi1619bWorksInitialFinancialElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidNonSsi1619bWorksInitialFinancialElig')
@r_VA_CaidNonSsi1619bWorksInitialFinancialElig.operation = "
vA_CaidApplyCoveredGroup                        = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber           = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
rateCaid_80percent_fpl_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
r_VA_CaidCountIncomeAmt                         = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt                   = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_80percent_fpl_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_2')
if vA_CaidApplyCoveredGroup !=  'MEDICAID WORKS' then
  'N/A' 
elsif Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && Float(r_VA_CaidCountIncomeAmt.calculate manager) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager) then
  'Eligible'  
elsif Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && (Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_2.calculate manager) then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidNonSsi1619bWorksInitialFinancialElig.save!



#64	4440	r_VA_CaidSpouseNonSsiWorksInitialFinancialElig = IF r_VA_CaidUserSpouseBothGetOrApply <> YES OR vA_caidSpouseApplyCoveredGroup <> MEDICAID WORKS, THEN N/A, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 1, AND r_VA_CaidSpouseCountIncomeAmt <= caid_80percent_fpl_inc_limit_assist_unit_1, THEN Eligible, 
#ELSE IF r_VA_CaidAbdAssistUnitForIncomeNumber = 2 AND r_VA_CaidCountIncomeAmt + r_VA_CaidSpouseCountIncomeAmt <= caid_80percent_fpl_inc_limit_assist_unit_2, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseNonSsiWorksInitialFinancialElig
#r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig
@r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig')
#=IF(OR(E532<>"YES";E519<>"MEDICAID WORKS");"N/A";IF(AND(E531=1;E536<=E537);"Eligible";IF(AND(E531=2;E535+E536<=E538);"Eligible";"Ineligible")))
#532 r_VA_CaidUserSpouseBothGetOrApply
#519 vA_caidSpouseApplyCoveredGroup
#531 r_VA_CaidAbdAssistUnitForIncomeNumber
#536 r_VA_CaidSpouseCountIncomeAmt
#537 caid_80percent_fpl_inc_limit_assist_unit_1
#535 r_VA_CaidCountIncomeAmt
#538 caid_80percent_fpl_inc_limit_assist_unit_2
@r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig.operation = "
r_VA_CaidUserSpouseBothGetOrApply               = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
vA_caidSpouseApplyCoveredGroup                  = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidAbdAssistUnitForIncomeNumber           = WebCalc.find_by_name('r_VA_CaidAbdAssistUnitForIncomeNumber')
rateCaid_80percent_fpl_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
r_VA_CaidCountIncomeAmt                         = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
r_VA_CaidSpouseCountIncomeAmt                   = WebCalc.find_by_name('r_VA_CaidSpouseCountIncomeAmt')
rateCaid_80percent_fpl_inc_limit_assist_unit_2  = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_2')
if vA_caidSpouseApplyCoveredGroup !=  'MEDICAID WORKS'  || (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) != true then
  'N/A' 
elsif Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 1 && Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager) then
  'Eligible'  
elsif Float(r_VA_CaidAbdAssistUnitForIncomeNumber.calculate manager) == 2 && (Float(r_VA_CaidCountIncomeAmt.calculate manager) + Float(r_VA_CaidSpouseCountIncomeAmt.calculate manager)) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_2.calculate manager) then
  'Eligible' 
else 
  'Ineligible'
end
"
@r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig.save!

#65	4660	r_VA_CaidWorksOngoingEmployReqElig = IF vA_CaidGetCoveredGroup <> MEDICAID WORKS, THEN FALSE, ELSE IF vA_CaidGetCoveredGroup = MEDICAID WORKS 
#AND (vA_CaidWorksCompetitiveEmployNow = YES OR vA_CaidWorksSelfEmployNow = YES OR vA_CaidLostJobWithinSixMo = YES) AND caidWinAcctEstablishedForWorks = YES, THEN TRUE, ELSE FALSE	
#r_VA_CaidWorksOngoingEmployReqElig
#Jan 3 201`2 review
#r_VA_CaidWorksOngoingEmployReqElig = IF vA_CaidGetCoveredGroup <> MEDICAID WORKS, THEN FALSE, ELSE IF vA_CaidGetCoveredGroup = MEDICAID WORKS AND (vA_CaidWorksCompetitiveEmployNow = YES OR vA_CaidWorksSelfEmployNow = YES OR vA_CaidLostJobWithinSixMo = YES) AND caidWinAcctEstablishedForWorks = YES, THEN TRUE, ELSE FALSE
@r_VA_CaidWorksOngoingEmployReqElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidWorksOngoingEmployReqElig')
@r_VA_CaidWorksOngoingEmployReqElig.operation = "
vA_CaidGetCoveredGroup              = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidWorksCompetitiveEmployNow    = manager.get_answer_by_question_name('vA_CaidWorksCompetitiveEmployNow')
vA_CaidWorksSelfEmployNow           = manager.get_answer_by_question_name('vA_CaidWorksSelfEmployNow')
vA_CaidLostJobWithinSixMo           = manager.get_answer_by_question_name('vA_CaidLostJobWithinSixMo')
caidWinAcctEstablishedForWorks      = manager.get_answer_by_question_name('caidWinAcctEstablishedForWorks')
if vA_CaidGetCoveredGroup != 'MEDICAID WORKS' then
  false
elsif vA_CaidGetCoveredGroup == 'MEDICAID WORKS' && (vA_CaidWorksCompetitiveEmployNow == 'Yes' || vA_CaidWorksSelfEmployNow == 'Yes' || vA_CaidLostJobWithinSixMo == 'Yes') && caidWinAcctEstablishedForWorks == 'Yes' then
  true
else
  false
end 
"
@r_VA_CaidWorksOngoingEmployReqElig.save!


#65	4670	r_VA_CaidSpouseWorksOngoingEmployReqElig = IF vA_caidSpouseGetCoveredGroup <> MEDICAID WORKS, THEN FALSE, 
#ELSE IF vA_caidSpouseGetCoveredGroup = MEDICAID WORKS AND (vA_CaidSpouseWorksCompetitiveEmployNow = YES OR vA_CaidSpouseWorksSelfEmployNow = YES OR vA_CaidSpouseLostJobWithinSixMo = YES) AND caidSpouseWinAcctEstablishedForWorks = YES, THEN TRUE, ELSE FALSE	
#r_VA_CaidSpouseWorksOngoingEmployReqElig
@r_VA_CaidSpouseWorksOngoingEmployReqElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseWorksOngoingEmployReqElig')
@r_VA_CaidSpouseWorksOngoingEmployReqElig.operation = "
vA_caidSpouseGetCoveredGroup              = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_CaidSpouseWorksCompetitiveEmployNow    = manager.get_answer_by_question_name('vA_CaidSpouseWorksCompetitiveEmployNow')
vA_CaidSpouseWorksSelfEmployNow           = manager.get_answer_by_question_name('vA_CaidSpouseWorksSelfEmployNow')
vA_CaidSpouseLostJobWithinSixMo           = manager.get_answer_by_question_name('vA_CaidSpouseLostJobWithinSixMo')
caidSpouseWinAcctEstablishedForWorks      = manager.get_answer_by_question_name('caidSpouseWinAcctEstablishedForWorks')
if vA_caidSpouseGetCoveredGroup != 'MEDICAID WORKS' then
  false
elsif vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' && (vA_CaidSpouseWorksCompetitiveEmployNow == 'Yes' || vA_CaidSpouseWorksSelfEmployNow == 'Yes' || vA_CaidSpouseLostJobWithinSixMo == 'Yes') && caidSpouseWinAcctEstablishedForWorks == 'Yes' then
  true
else
  false
end 
"
@r_VA_CaidSpouseWorksOngoingEmployReqElig.save!


#65	4690	r_VA_CaidWorksOngoingIncomeElig = IF vA_CaidGetCoveredGroup <> MEDICAID WORKS, THEN N/A, 
#ELSE IF vA_CaidGetCoveredGroup = MEDICAID WORKS & r_VA_CaidCountEarnAmt <= caid_qdwi_works_earn_inc_limit_assist_unit_1 & r_VA_CaidCountUnearnAmt <= caid_80percent_fpl_inc_limit_assist_unit_1 & r_VA_CaidWorksOngoingEmployReqElig = TRUE, THEN Eligible ELSE Ineligible	
#r_VA_CaidWorksOngoingIncomeElig
@r_VA_CaidWorksOngoingIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidWorksOngoingIncomeElig')
@r_VA_CaidWorksOngoingIncomeElig.operation = "
vA_CaidGetCoveredGroup                            = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
r_VA_CaidCountIncomeAmt                           = WebCalc.find_by_name('r_VA_CaidCountIncomeAmt')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_1')
rateCaid_80percent_fpl_inc_limit_assist_unit_1    = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
r_VA_CaidWorksOngoingEmployReqElig                = WebCalc.find_by_name('r_VA_CaidWorksOngoingEmployReqElig')
if vA_CaidGetCoveredGroup != 'MEDICAID WORKS' then
  'N/A'
elsif vA_CaidGetCoveredGroup == 'MEDICAID WORKS' &&  Float(r_VA_CaidCountIncomeAmt.calculate manager) <= Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.calculate manager) &&  Float(r_VA_CaidCountIncomeAmt.calculate manager) <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager) && (r_VA_CaidWorksOngoingEmployReqElig.calculate manager) == true then
   'Eligible' 
else
   'Ineligible' 
end 
"
@r_VA_CaidWorksOngoingIncomeElig.save!

#65	4700	r_VA_CaidSpouseWorksOngoingIncomeElig = IF vA_caidSpouseGetCoveredGroup <> MEDICAID WORKS, THEN N/A, 
#ELSE IF vA_caidSpouseGetCoveredGroup = MEDICAID WORKS AND r_VA_CaidSpouseCountEarnAmt <= caid_qdwi_works_earn_inc_limit_assist_unit_1 AND r_VA_CaidSpouseCountUnearnAmt <= caid_80percent_fpl_inc_limit_assist_unit_1 AND r_VA_CaidSpouseWorksOngoingEmployReqElig = TRUE, THEN Eligible ELSE Ineligible	
#r_VA_CaidSpouseWorksOngoingIncomeElig
@r_VA_CaidSpouseWorksOngoingIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseWorksOngoingIncomeElig')
@r_VA_CaidSpouseWorksOngoingIncomeElig.operation = "
vA_caidSpouseGetCoveredGroup                      = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
r_VA_CaidSpouseCountEarnAmt                       = WebCalc.find_by_name('r_VA_CaidSpouseCountEarnAmt')
rateCaid_qdwi_works_earn_inc_limit_assist_unit_1  = WebCalc.find_by_name('rateCaid_qdwi_works_earn_inc_limit_assist_unit_1')
rateCaid_80percent_fpl_inc_limit_assist_unit_1    = WebCalc.find_by_name('rateCaid_80percent_fpl_inc_limit_assist_unit_1')
r_VA_CaidSpouseWorksOngoingEmployReqElig          = WebCalc.find_by_name('r_VA_CaidSpouseWorksOngoingEmployReqElig')
if vA_caidSpouseGetCoveredGroup != 'MEDICAID WORKS' then
  'N/A'
elsif vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' && Float(r_VA_CaidSpouseCountEarnAmt.calculate manager) <= Float(rateCaid_qdwi_works_earn_inc_limit_assist_unit_1.calculate manager) && r_VA_CaidSpouseCountEarnAmt <= Float(rateCaid_80percent_fpl_inc_limit_assist_unit_1.calculate manager) && (r_VA_CaidSpouseWorksOngoingEmployReqElig.calculate manager) == true then
   'Eligible' 
else
   'Ineligible' 
end 
"
@r_VA_CaidSpouseWorksOngoingIncomeElig.save!
#add on Dec 27 2011
#66	4820	r_VA_Caid300PctIncomeElig = IF vA_CaidGetCoveredGroup AND vA_CaidApplyCoveredGroup <> 300% SSI, N/A, 
#ELSE IF r_VA_CaidGrossIncomeAmt <= (rateFbrAmt * 3), THEN Eligible, ELSE Ineligible	
#r_VA_Caid300PctIncomeElig
@r_VA_Caid300PctIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_Caid300PctIncomeElig')
#=IF(AND(E576<>"300% SSI";E578<>"300% SSI");"N/A";IF(E581<=E$583*3;"Eligible";"Ineligible"))
#576 vA_CaidGetCoveredGroup
#578 vA_CaidApplyCoveredGroup
#581 r_VA_CaidGrossIncomeAmt
#583 rateFbrAmt
@r_VA_Caid300PctIncomeElig.operation = "
vA_CaidGetCoveredGroup      = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup    = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidGrossIncomeAmt     = WebCalc.find_by_name('r_VA_CaidGrossIncomeAmt')
rateFbrAmt                  = WebCalc.find_by_name('rateFbrAmt')
if (vA_CaidGetCoveredGroup != '300% SSI'  && vA_CaidApplyCoveredGroup != '300% SSI') then
  'N/A'
elsif Float(r_VA_CaidGrossIncomeAmt.calculate manager) <= ( 3* Float(rateFbrAmt.calculate manager)) then
   'Eligible' 
else
   'Ineligible' 
end 
"
@r_VA_Caid300PctIncomeElig.save!

#66	4830	r_VA_CaidSpouse300PctIncomeElig = IF vA_caidSpouseGetCoveredGroup AND vA_caidSpouseApplyCoveredGroup <> 300% SSI, N/A, ELSE IF r_VA_CaidSpouseGrossIncomeAmt <= (rateFbrAmt * 3), THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpouse300PctIncomeElig
@r_VA_CaidSpouse300PctIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouse300PctIncomeElig')
#==IF(AND(E577<>"300% SSI";E579<>"300% SSI");"N/A";IF(E582<=E$583*3;"Eligible";"Ineligible"))
# 577 vA_caidSpouseGetCoveredGroup
#579 vA_caidSpouseApplyCoveredGroup
#582 r_VA_CaidSpouseGrossIncomeAmt
#583 rateFbrAmt
@r_VA_CaidSpouse300PctIncomeElig.operation = "
vA_caidSpouseGetCoveredGroup      = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup    = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidSpouseGrossIncomeAmt     = WebCalc.find_by_name('r_VA_CaidSpouseGrossIncomeAmt')
rateFbrAmt                        = WebCalc.find_by_name('rateFbrAmt')
if (vA_caidSpouseGetCoveredGroup != '300% SSI'  && vA_caidSpouseApplyCoveredGroup != '300% SSI') then
  'N/A'
elsif Float(r_VA_CaidSpouseGrossIncomeAmt.calculate manager) <= ( 3* Float(rateFbrAmt.calculate manager)) then
   'Eligible' 
else
   'Ineligible' 
end 
"
@r_VA_CaidSpouse300PctIncomeElig.save!

#66	5130	Income Eligibility for covered group that individual is getting or applying for.	r_VA_CaidIncomeElig
@r_VA_CaidIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidIncomeElig')
#==IF(OR(E589="Eligible";E591="Eligible";E593="Eligible";E595="Eligible";E597="Eligible";E599="Eligible";E601="Eligible";E603="Eligible";E605="Eligible";E607="Eligible";E609="Eligible";E611="Eligible";E613="Eligible");"Eligible";
#IF(OR(E589="Ineligible";E591="Ineligible";E593="Ineligible";E595="Ineligible";E597="Ineligible";E599="Ineligible";E601="Ineligible";E603="Ineligible";E605="Ineligible";E607="Ineligible";E609="Ineligible";E611="Ineligible";E613="Ineligible");"Ineligible";"N/A"))
#589 r_VA_CaidAuxGrantIncomeElig
#591 r_VA_CaidCovGroupSsiRecipientElig
#593 r_VA_CaidPsdcIncomeElig
#595 r_VA_CaidPadcIncomeElig
#597 r_VA_Caid1619bIncomeElig
#599 r_VA_Caid80PctFplIncomeElig
#601 r_VA_CaidQmbIncomeElig
#603 r_VA_CaidSlmbIncomeElig
#605 r_VA_CaidQdwiIncomeAndEarnElig
#607 r_VA_CaidQiIncomeElig
#609 r_VA_CaidNonSsi1619bWorksInitialFinancialElig
#611 r_VA_CaidWorksOngoingIncomeElig
#613 r_VA_Caid300PctIncomeElig

@r_VA_CaidIncomeElig.operation = "
r_VA_CaidAuxGrantIncomeElig                   = WebCalc.find_by_name('r_VA_CaidAuxGrantIncomeElig')
r_VA_CaidCovGroupSsiRecipientElig             = WebCalc.find_by_name('r_VA_CaidCovGroupSsiRecipientElig')
r_VA_CaidPsdcIncomeElig                       = WebCalc.find_by_name('r_VA_CaidPsdcIncomeElig')
r_VA_CaidPadcIncomeElig                       = WebCalc.find_by_name('r_VA_CaidPadcIncomeElig')
r_VA_Caid1619bIncomeElig                      = WebCalc.find_by_name('r_VA_Caid1619bIncomeElig')
r_VA_Caid80PctFplIncomeElig                   = WebCalc.find_by_name('r_VA_Caid80PctFplIncomeElig')
r_VA_CaidQmbIncomeElig                        = WebCalc.find_by_name('r_VA_CaidQmbIncomeElig')
r_VA_CaidSlmbIncomeElig                       = WebCalc.find_by_name('r_VA_CaidSlmbIncomeElig')
r_VA_CaidQdwiIncomeAndEarnElig                = WebCalc.find_by_name('r_VA_CaidQdwiIncomeAndEarnElig')
r_VA_CaidQiIncomeElig                         = WebCalc.find_by_name('r_VA_CaidQiIncomeElig')
r_VA_CaidNonSsi1619bWorksInitialFinancialElig = WebCalc.find_by_name('r_VA_CaidNonSsi1619bWorksInitialFinancialElig')
r_VA_CaidWorksOngoingIncomeElig               = WebCalc.find_by_name('r_VA_CaidWorksOngoingIncomeElig')
r_VA_Caid300PctIncomeElig                     = WebCalc.find_by_name('r_VA_Caid300PctIncomeElig')

if ((r_VA_CaidAuxGrantIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidCovGroupSsiRecipientElig.calculate manager) == 'Eligible' || (r_VA_CaidPsdcIncomeElig.calculate manager) == 'Eligible' || 
  (r_VA_CaidPadcIncomeElig.calculate manager) == 'Eligible' || (r_VA_Caid1619bIncomeElig.calculate manager) == 'Eligible' || (r_VA_Caid80PctFplIncomeElig.calculate manager) == 'Eligible' || 
  (r_VA_CaidQmbIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSlmbIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidQdwiIncomeAndEarnElig.calculate manager) == 'Eligible' || 
  (r_VA_CaidQiIncomeElig.calculate manager) == 'Eligible' ||  (r_VA_CaidNonSsi1619bWorksInitialFinancialElig.calculate manager) == 'Eligible' || (r_VA_CaidWorksOngoingIncomeElig.calculate manager) == 'Eligible' ||
  (r_VA_Caid300PctIncomeElig.calculate manager) == 'Eligible') then
  'Eligible'
elsif ((r_VA_CaidAuxGrantIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidCovGroupSsiRecipientElig.calculate manager) == 'Ineligible' || (r_VA_CaidPsdcIncomeElig.calculate manager) == 'Ineligible' || 
    (r_VA_CaidPadcIncomeElig.calculate manager) == 'Ineligible' || (r_VA_Caid1619bIncomeElig.calculate manager) == 'Ineligible' || (r_VA_Caid80PctFplIncomeElig.calculate manager) == 'Ineligible' || 
    (r_VA_CaidQmbIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSlmbIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidQdwiIncomeAndEarnElig.calculate manager) == 'Ineligible' || 
    (r_VA_CaidQiIncomeElig.calculate manager) == 'Ineligible' ||  (r_VA_CaidNonSsi1619bWorksInitialFinancialElig.calculate manager) == 'Ineligible' || (r_VA_CaidWorksOngoingIncomeElig.calculate manager) == 'Ineligible' || 
    (r_VA_Caid300PctIncomeElig.calculate manager) == 'Ineligible') then
   'Ineligible' 
else
   'N/A' 
end 
"
@r_VA_CaidIncomeElig.save!

#66	5140	Income Eligibility for covered group that individual is getting or applying for.	r_VA_CaidSpouseIncomeElig
#=IF(OR(E590="Eligible";E592="Eligible";E594="Eligible";E596="Eligible";E598="Eligible";
#E600="Eligible";E602="Eligible";E604="Eligible";E606="Eligible";
#E608="Eligible";E610="Eligible";E612="Eligible";E614="Eligible");"Eligible";
#IF(OR(E590="Ineligible";E592="Ineligible";E594="Ineligible";E596="Ineligible";E598="Ineligible";E600="Ineligible";E602="Ineligible";E604="Ineligible";E606="Ineligible";E608="Ineligible";E610="Ineligible";E612="Ineligible";E614="Ineligible");"Ineligible";"N/A"))
@r_VA_CaidSpouseIncomeElig  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseIncomeElig')
#590  r_VA_CaidSpouseAuxGrantIncomeElig
#E592 r_VA_CaidSpouseCovGroupSsiRecipientElig
#E594 r_VA_CaidSpousePsdcIncomeElig
#E596 r_VA_SpouseCaidPadcIncomeElig
#E598 r_VA_CaidSpouse1619bIncomeElig
#E600 r_VA_CaidSpouse80PctFplIncomeElig
#E602 r_VA_CaidSpouseQmbIncomeElig
#E604 r_VA_CaidSpouseSlmbIncomeElig
#E606 r_VA_CaidSpouseQdwiIncomeAndEarnElig
#E608 r_VA_CaidSpouseQiIncomeElig
#E610 r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig
#E612 r_VA_CaidSpouseWorksOngoingIncomeElig
#E614 r_VA_CaidSpouse300PctIncomeElig
@r_VA_CaidSpouseIncomeElig.operation = "
r_VA_CaidSpouseAuxGrantIncomeElig                   = WebCalc.find_by_name('r_VA_CaidSpouseAuxGrantIncomeElig')
r_VA_CaidSpouseCovGroupSsiRecipientElig             = WebCalc.find_by_name('r_VA_CaidSpouseCovGroupSsiRecipientElig')
r_VA_CaidSpousePsdcIncomeElig                       = WebCalc.find_by_name('r_VA_CaidSpousePsdcIncomeElig')
r_VA_SpouseCaidPadcIncomeElig                       = WebCalc.find_by_name('r_VA_SpouseCaidPadcIncomeElig')
r_VA_CaidSpouse1619bIncomeElig                      = WebCalc.find_by_name('r_VA_CaidSpouse1619bIncomeElig')
r_VA_CaidSpouse80PctFplIncomeElig                   = WebCalc.find_by_name('r_VA_CaidSpouse80PctFplIncomeElig')
r_VA_CaidSpouseQmbIncomeElig                        = WebCalc.find_by_name('r_VA_CaidSpouseQmbIncomeElig')
r_VA_CaidSpouseSlmbIncomeElig                       = WebCalc.find_by_name('r_VA_CaidSpouseSlmbIncomeElig')
r_VA_CaidSpouseQdwiIncomeAndEarnElig                = WebCalc.find_by_name('r_VA_CaidSpouseQdwiIncomeAndEarnElig')
r_VA_CaidSpouseQiIncomeElig                         = WebCalc.find_by_name('r_VA_CaidSpouseQiIncomeElig')
r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig = WebCalc.find_by_name('r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig')
r_VA_CaidSpouseWorksOngoingIncomeElig               = WebCalc.find_by_name('r_VA_CaidSpouseWorksOngoingIncomeElig')
r_VA_CaidSpouse300PctIncomeElig                     = WebCalc.find_by_name('r_VA_CaidSpouse300PctIncomeElig')
if ((r_VA_CaidSpouseAuxGrantIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseCovGroupSsiRecipientElig.calculate manager) == 'Eligible' || (r_VA_CaidSpousePsdcIncomeElig.calculate manager) == 'Eligible' || 
  (r_VA_SpouseCaidPadcIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouse1619bIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouse80PctFplIncomeElig.calculate manager) == 'Eligible' || 
  (r_VA_CaidSpouseQmbIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseSlmbIncomeElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseQdwiIncomeAndEarnElig.calculate manager) == 'Eligible' || 
  (r_VA_CaidSpouseQiIncomeElig.calculate manager) == 'Eligible' ||  (r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig.calculate manager) == 'Eligible' || (r_VA_CaidSpouseWorksOngoingIncomeElig.calculate manager) == 'Eligible' ||
  (r_VA_CaidSpouse300PctIncomeElig.calculate manager) == 'Eligible') then
  'Eligible'
elsif ((r_VA_CaidSpouseAuxGrantIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouseCovGroupSsiRecipientElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpousePsdcIncomeElig.calculate manager) == 'Ineligible' || 
    (r_VA_SpouseCaidPadcIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouse1619bIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouse80PctFplIncomeElig.calculate manager) == 'Ineligible' || 
    (r_VA_CaidSpouseQmbIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouseSlmbIncomeElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouseQdwiIncomeAndEarnElig.calculate manager) == 'Ineligible' || 
    (r_VA_CaidSpouseQiIncomeElig.calculate manager) == 'Ineligible' ||  (r_VA_CaidSpouseNonSsi1619bWorksInitialFinancialElig.calculate manager) == 'Ineligible' || (r_VA_CaidSpouseWorksOngoingIncomeElig.calculate manager) == 'Ineligible' ||
    (r_VA_CaidSpouse300PctIncomeElig.calculate manager) == 'Ineligible') then
   'Ineligible' 
else
   'N/A' 
end 
"
@r_VA_CaidSpouseIncomeElig.save!

#66 67	5320	r_VA_CaidCovGrpNumR = IF CaidGet = YES, THEN vA_CaidGetCoveredGroup,'ELSE IF caidApply = YES, THEN vA_CaidApplyCoveredGroup, ELSE Not Computed	
#r_VA_CaidCovGrpNumR
@r_VA_CaidCovGrpNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidCovGrpNumR')
#=IF(E620="YES";E622;IF(E624="YES";E626;"Not Computed"))
#620 caidGet
#622 vA_CaidGetCoveredGroup
#624 caidApply
#626 vA_CaidApplyCoveredGroup
@r_VA_CaidCovGrpNumR.operation = "
caidGet                   = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup    = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidApply                 = manager.get_answer_by_question_name('caidApply')
vA_CaidApplyCoveredGroup  = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if caidGet == 'Yes' then 
    vA_CaidGetCoveredGroup
elsif caidApply == 'Yes' then
  vA_CaidApplyCoveredGroup
else
  'Not Computed'
end 
"
@r_VA_CaidCovGrpNumR.save!

#66 67	5330	r_VA_CaidSpouseCovGrpNumR = IF caidSpouseGet = YES, THEN vA_caidSpouseGetCoveredGroup, ELSE IF caidSpouseApply = YES, THEN vA_caidSpouseApplyCoveredGroup, ELSE Not Computed	
#r_VA_CaidSpouseCovGrpNumR
@r_VA_CaidSpouseCovGrpNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseCovGrpNumR')
#=IF(E621="YES";E623;IF(E625="YES";E627;"Not Computed"))
#621 caidSpouseGet
#623 vA_caidSpouseGetCoveredGroup
#625 caidSpouseApply
#627 vA_caidSpouseApplyCoveredGroup
@r_VA_CaidSpouseCovGrpNumR.operation = "
caidSpouseGet   = manager.get_answer_by_question_name('caidSpouseGet')
vA_caidSpouseGetCoveredGroup   = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
caidSpouseApply   = manager.get_answer_by_question_name('caidSpouseApply')
vA_caidSpouseApplyCoveredGroup   = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
if caidSpouseGet == 'Yes' then 
    vA_caidSpouseGetCoveredGroup
elsif caidSpouseApply == 'Yes' then
  vA_caidSpouseApplyCoveredGroup
else
  'Not Computed'
end 
"
@r_VA_CaidSpouseCovGrpNumR.save!

#67	5342	r_VA CaidWorksInitialNonFinEligNumR = IF vA_CaidApplyCoveredGroup <> MEDICAID WORKS, THEN Not Computed, ELSE IF r_VA_CaidWorksInitialNonFinElig = Eligible, THEN Eligible, ELSE Ineligible	
#r_VA_CaidWorksInitialNonFinEligNumR
@r_VA_CaidWorksInitialNonFinEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidWorksInitialNonFinEligNumR')
#=IF(E626<>"MEDICAID WORKS";"Not Computed";IF(E630="Eligible";"Eligible";"Ineligible"))
#626 vA_CaidApplyCoveredGroup
#630 r_VA_CaidWorksInitialNonFinElig
@r_VA_CaidWorksInitialNonFinEligNumR.operation = "
vA_CaidApplyCoveredGroup        = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
r_VA_CaidWorksInitialNonFinElig = WebCalc.find_by_name('r_VA_CaidWorksInitialNonFinElig')
if vA_CaidApplyCoveredGroup != 'MEDICAID WORKS' then 
    'Not Computed'
elsif (r_VA_CaidWorksInitialNonFinElig.calculate manager) == 'Eligible' then
  'Eligible'
else
  'Not Ineligible'
end 
"
@r_VA_CaidWorksInitialNonFinEligNumR.save!


#67	5344	r_VA CaidSpouseWorksInitialNonFinEligNumR = IF vA_caidSpouseApplyCoveredGroup <> MEDICAID WORKS, THEN Not Computed, ELSE IF r_VA_CaidSpouseWorksInitialNonFinElig = Eligible, THEN Eligible, ELSE Ineligible	
#r_VA_CaidSpouseWorksInitialNonFinEligNumR
@r_VA_CaidSpouseWorksInitialNonFinEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseWorksInitialNonFinEligNumR')
#=IF(E627<>"MEDICAID WORKS";"Not Computed";IF(E631="Eligible";"Eligible";"Ineligible"))
#627 vA_caidSpouseApplyCoveredGroup
#631 r_VA_CaidSpouseWorksInitialNonFinElig
@r_VA_CaidSpouseWorksInitialNonFinEligNumR.operation = "
vA_caidSpouseApplyCoveredGroup        = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
r_VA_CaidSpouseWorksInitialNonFinElig = WebCalc.find_by_name('r_VA_CaidSpouseWorksInitialNonFinElig')
if vA_caidSpouseApplyCoveredGroup != 'MEDICAID WORKS' then 
    'Not Computed'
elsif (r_VA_CaidSpouseWorksInitialNonFinElig.calculate manager) == 'Eligible' then
  'Eligible'
else
  'Not Ineligible'
end 
"
@r_VA_CaidSpouseWorksInitialNonFinEligNumR.save!

#5350	r_VA_CaidResourceEligNumR = IF r_VA_CaidUserResourceElig <> N/A, THEN r_VA_CaidUserResourceElig, ELSE Not Computed	
#r_VA_CaidResourceEligNumR
@r_VA_CaidResourceEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidResourceEligNumR')
#==IF(E634<>"N/A";E634;"Not Computed")
#634 r_VA_CaidUserResourceElig
@r_VA_CaidResourceEligNumR.operation = "
r_VA_CaidUserResourceElig = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
if (r_VA_CaidUserResourceElig.calculate manager) != 'N/A' then 
    (r_VA_CaidUserResourceElig.calculate manager)
else
  'Not Computed'
end 
"
@r_VA_CaidResourceEligNumR.save!

#66	5360	r_VA_CaidSpouseResourceEligNumR = IF r_VA_CaidSpouseResourceElig <> N/A, THEN r_VA_CaidSpouseResourceElig, ELSE Not Computed	
#r_VA_CaidSpouseResourceEligNumR
@r_VA_CaidSpouseResourceEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseResourceEligNumR')
#=IF(E635<>"N/A";E635;"Not Computed")
#635 r_VA_CaidSpouseResourceElig
@r_VA_CaidSpouseResourceEligNumR.operation = "
r_VA_CaidSpouseResourceElig = WebCalc.find_by_name('r_VA_CaidSpouseResourceElig')
r_VA_CaidSpouseResourceElig = (r_VA_CaidSpouseResourceElig.calculate manager)
if r_VA_CaidSpouseResourceElig != 'N/A' then 
    r_VA_CaidSpouseResourceElig
else
  'Not Computed'
end 
"
@r_VA_CaidSpouseResourceEligNumR.save!

#66	5370	r_VA_CaidIncomeEligNumR = IF r_VA_CaidIncomeElig <> N/A, THEN r_VA_CaidIncomeElig, ELSE Not Computed	r_VA_CaidIncomeEligNumR
@r_VA_CaidIncomeEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidIncomeEligNumR')
#=IF(E636<>"N/A";E636;"Not Computed")
#636 r_VA_CaidIncomeElig
@r_VA_CaidIncomeEligNumR.operation = "
r_VA_CaidIncomeElig = WebCalc.find_by_name('r_VA_CaidIncomeElig')
r_VA_CaidIncomeElig = (r_VA_CaidIncomeElig.calculate manager)
if r_VA_CaidIncomeElig != 'N/A' then 
    r_VA_CaidIncomeElig
else
  'Not Computed'
end 
"
@r_VA_CaidIncomeEligNumR.save!

#66	5380	r_VA_CaidSpouseIncomeEligNumR = IF r_VA_CaidSpouseIncomeElig <> N/A,THEN  r_VA_CaidSpouseIncomeElig, ELSE Not Computed	
#r_VA_CaidSpouseIncomeEligNumR
@r_VA_CaidSpouseIncomeEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseIncomeEligNumR')
#=IF(E637<>"N/A";E637;"Not Computed")
#637 r_VA_CaidSpouseIncomeElig
@r_VA_CaidSpouseIncomeEligNumR.operation = "
r_VA_CaidSpouseIncomeElig = WebCalc.find_by_name('r_VA_CaidSpouseIncomeElig')
r_VA_CaidSpouseIncomeElig = (r_VA_CaidSpouseIncomeElig.calculate manager)
if r_VA_CaidSpouseIncomeElig != 'N/A' then 
    r_VA_CaidSpouseIncomeElig
else
  'Not Computed'
end 
"
@r_VA_CaidSpouseIncomeEligNumR.save!

#67	5400	r_VA_CaidSsi1619bWorksInitialEligNumR = IF vA_CaidSsiRecipientApplyWorks <> YES, THEN Not Computed, 
#ELSE IF r_VA_CaidUserResourceElig = Eligible AND r_VA_CaidIncomeElig = Eligible, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSsi1619bWorksInitialEligNumR
@r_VA_CaidSsi1619bWorksInitialEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSsi1619bWorksInitialEligNumR')
#=IF(E628<>"YES";"Not Computed";IF(AND(E634="Eligible";E636="Eligible");"Eligible";"Ineligible"))
#628 vA_CaidSsiRecipientApplyWorks
#634 r_VA_CaidUserResourceElig
#636 r_VA_CaidIncomeElig
@r_VA_CaidSsi1619bWorksInitialEligNumR.operation = "
vA_CaidSsiRecipientApplyWorks   = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
r_VA_CaidUserResourceElig       = WebCalc.find_by_name('r_VA_CaidUserResourceElig')
r_VA_CaidIncomeElig             = WebCalc.find_by_name('r_VA_CaidIncomeElig')
if vA_CaidSsiRecipientApplyWorks != 'Yes' then 
    'Not Computed'
elsif (r_VA_CaidUserResourceElig.calculate manager) == 'Eligible' && (r_VA_CaidIncomeElig.calculate manager) == 'Eligible' then
  'Eligible'
else
  'Ineligible'
end 
"
@r_VA_CaidSsi1619bWorksInitialEligNumR.save!

#67	5410	r_VA_CaidSpouseSsi1619bWorksInitialEligNumR = IF vA_CaidSpouseSsiRecipientApplyWorks <> YES, THEN Not Computed, 
#ELSE IF r_VA_CaidSpouseResourceElig = Eligible AND r_VA_CaidSpouseIncomeElig = Eligible, THEN Eligible, ELSE Ineligible 	
#r_VA_CaidSpouseSsi1619bWorksInitialEligNumR
@r_VA_CaidSpouseSsi1619bWorksInitialEligNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseSsi1619bWorksInitialEligNumR')
#==IF(E629<>"YES";"Not Computed";IF(AND(E635="Eligible";E637="Eligible");"Eligible";"Ineligible"))
#629 vA_CaidSpouseSsiRecipientApplyWorks
#635 r_VA_CaidSpouseResourceElig
#637 r_VA_CaidSpouseIncomeElig
@r_VA_CaidSpouseSsi1619bWorksInitialEligNumR.operation = "
vA_CaidSpouseSsiRecipientApplyWorks   = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
r_VA_CaidSpouseResourceElig           = WebCalc.find_by_name('r_VA_CaidSpouseResourceElig')
r_VA_CaidSpouseIncomeElig             = WebCalc.find_by_name('r_VA_CaidSpouseIncomeElig')
if vA_CaidSpouseSsiRecipientApplyWorks != 'Yes' then 
    'Not Computed'
elsif WebCalc.find_by_name('(r_VA_CaidSpouseResourceElig.calculate manager)') == 'Eligible' && WebCalc.find_by_name('(r_VA_CaidSpouseIncomeElig.calculate manager)') == 'Eligible' then
  'Eligible'
else
  'Ineligible'
end 
"
@r_VA_CaidSpouseSsi1619bWorksInitialEligNumR.save!

#from workbook 68
#5550	r_VA_CaidMedicalExpNumR = IF r_VA_CaidWorksInitialNonFinEligNumR <> Ineligible AND r_VA_CaidResourceEligNumR = Eligible AND r_VA_CaidIncomeEligNumR = Eligible, THEN estMedExpWithCaidAmt, ELSE estMedExpWithoutCaidAmt	
#r_VA_CaidMedicalExpNumR
@r_VA_CaidMedicalExpNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidMedicalExpNumR')
#=IF(AND(E657<>"Ineligible";E659="Eligible";E661="Eligible");E653;E655)
#657 r_VA_CaidWorksInitialNonFinEligNumR
#659 r_VA_CaidResourceEligNumR
#661 r_VA_CaidIncomeEligNumR
#653 estMedExpWithCaidAmt
#655 estMedExpWithoutCaidAmt
@r_VA_CaidMedicalExpNumR.operation = "
r_VA_CaidWorksInitialNonFinEligNumR = WebCalc.find_by_name('r_VA_CaidWorksInitialNonFinEligNumR')
r_VA_CaidResourceEligNumR           = WebCalc.find_by_name('r_VA_CaidResourceEligNumR')
r_VA_CaidIncomeEligNumR             = WebCalc.find_by_name('r_VA_CaidIncomeEligNumR')
estMedExpWithCaidAmt                = manager.get_answer_by_question_name('estMedExpWithCaidAmt')
estMedExpWithoutCaidAmt             = manager.get_answer_by_question_name('estMedExpWithoutCaidAmt')
if (r_VA_CaidWorksInitialNonFinEligNumR.calculate manager)  != 'Ineligible' && (r_VA_CaidResourceEligNumR.calculate manager) == 'Eligible' && (r_VA_CaidIncomeEligNumR.calculate manager) == 'Eligible' then
  estMedExpWithCaidAmt.to_f
else
  estMedExpWithoutCaidAmt.to_f
end 
"
@r_VA_CaidMedicalExpNumR.save!

#5560	r_VA_CaidSpouseMedicalExpNumR = IF r_VA CaidSpouseWorksInitialNonFinEligNumR <> Ineligible AND r_VA_CaidSpouseResourceEligNumR = Eligible AND r_VA_CaidSpouseIncomeEligNumR = Eligible, THEN spouseEstMedExpWithCaidAmt, ELSE spouseEstMedExpWithoutCaidAmt	
#r_VA_CaidSpouseMedicalExpNumR
@r_VA_CaidSpouseMedicalExpNumR  = WebCalc.find_or_create_by_name(:name => 'r_VA_CaidSpouseMedicalExpNumR')
#=IF(AND(E657<>"Ineligible";E659="Eligible";E661="Eligible");E653;E655)
#657 r_VA_CaidWorksInitialNonFinEligNumR
#659 r_VA_CaidResourceEligNumR
#661 r_VA_CaidIncomeEligNumR
#653 estMedExpWithCaidAmt
#655 EstMedExpWithoutCaidAmt
@r_VA_CaidSpouseMedicalExpNumR.operation = "
r_VA_CaidSpouseWorksInitialNonFinEligNumR = WebCalc.find_by_name('r_VA_CaidSpouseWorksInitialNonFinEligNumR')
r_VA_CaidSpouseResourceEligNumR           = WebCalc.find_by_name('r_VA_CaidSpouseResourceEligNumR')
r_VA_CaidSpouseIncomeEligNumR             = WebCalc.find_by_name('r_VA_CaidSpouseIncomeEligNumR')
spouseEstMedExpWithCaidAmt                = manager.get_answer_by_question_name('spouseEstMedExpWithCaidAmt')
spouseEstMedExpWithoutCaidAmt             = manager.get_answer_by_question_name('spouseEstMedExpWithoutCaidAmt')
if (r_VA_CaidSpouseWorksInitialNonFinEligNumR.calculate manager)  != 'Ineligible' && (r_VA_CaidSpouseResourceEligNumR.calculate manager) == 'Eligible' && (r_VA_CaidSpouseIncomeEligNumR.calculate manager) == 'Eligible' then
  spouseEstMedExpWithCaidAmt.to_f
else
  spouseEstMedExpWithoutCaidAmt.to_f
end 
"
@r_VA_CaidSpouseMedicalExpNumR.save!

#44xxx x
#We are now diverting from the old seed file to blend in calcs from the WebSsiWi calc sheet
#many are adapted from the class AddWebSsiWiCalcSheetWebcalcs migration
 @rTotalWorkExpAmt  = WebCalc.find_or_create_by_name(:name => 'rTotalWorkExpAmt')
  #disWorkExpAmt     estEarnTaxAmt     othWorkExpAmt
  @rTotalWorkExpAmt.operation = "
  disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
  estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
  othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
  disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f
  "
  @rTotalWorkExpAmt.save!

  @rWorkExpAndInvestAmt = WebCalc.find_or_create_by_name(:name => 'rWorkExpAndInvestAmt')
  #13 rTotalWorkExpAmt + employInvestAmt
  @rWorkExpAndInvestAmt.operation = "
  rTotalWorkExpAmt = WebCalc.find_by_name('rTotalWorkExpAmt')
  employInvestAmt = manager.get_answer_by_question_name('employInvestAmt')
  Float(rTotalWorkExpAmt.calculate manager) + employInvestAmt.to_f 
  "
  @rWorkExpAndInvestAmt.save!

  @rInvestWorkExpNotPassIrweBweAmt = WebCalc.find_or_create_by_name(:name => 'rInvestWorkExpNotPassIrweBweAmt')
  @rInvestWorkExpNotPassIrweBweAmt.operation = "
  rTotalWorkExpAmt = WebCalc.find_by_name('rTotalWorkExpAmt')
  passAmt          = manager.get_answer_by_question_name('passAmt')
  ssiCaidIrweAmt   = manager.get_answer_by_question_name('ssiCaidIrweAmt')
  bweAmt           = manager.get_answer_by_question_name('bweAmt')
  [(Float(rTotalWorkExpAmt.calculate manager) - passAmt.to_f - ssiCaidIrweAmt.to_f - bweAmt.to_f) , 0].max
  "
  @rInvestWorkExpNotPassIrweBweAmt.save!

  @rSpouseTotalWorkExpAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseTotalWorkExpAmt')
  #26 =SUM(F21:F26)
  #22 spouseDisWorkExpAmt + #23 spouseEstEarnTaxAmt + #24 spouseOthWorkExpAmt
  @rSpouseTotalWorkExpAmt.operation = "
  spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
  spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
  spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
  spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f
  "
  @rSpouseTotalWorkExpAmt.save!

  @rSpouseWorkExpAndInvestAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseWorkExpAndInvestAmt')
  #30 =SUM(F26:F30)  rSpouseTotalWorkExpAmt + spouseEmployInvestAmt
  @rSpouseWorkExpAndInvestAmt.operation = "
  rSpouseTotalWorkExpAmt = WebCalc.find_by_name('rSpouseTotalWorkExpAmt')
  spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
  Float(rSpouseTotalWorkExpAmt.calculate manager) + spouseEmployInvestAmt.to_f
  "
  @rSpouseWorkExpAndInvestAmt.save!

  @rSpouseInvestWorkExpNotPassIrweBweAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseInvestWorkExpNotPassIrweBweAmt')
  #37 =MAX(0;F31-F33-F34-F35)
  #31 rSpouseWorkExpAndInvestAmt - spousePassAmt - spouseSsiCaidIrweAmt - spouseBweAmt
  @rSpouseInvestWorkExpNotPassIrweBweAmt.operation = "
  rSpouseWorkExpAndInvestAmt  = WebCalc.find_by_name('rSpouseWorkExpAndInvestAmt')
  spousePassAmt               = manager.get_answer_by_question_name('spousePassAmt')
  spouseSsiCaidIrweAmt        = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
  spouseBweAmt                = manager.get_answer_by_question_name('spouseBweAmt')
  [(Float(rSpouseWorkExpAndInvestAmt.calculate manager) - spousePassAmt.to_f - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f), 0].max
  "
  @rSpouseInvestWorkExpNotPassIrweBweAmt.save!

  @rFbrWorkIncentivePossAmt = WebCalc.find_or_create_by_name(:name => 'rFbrWorkIncentivePossAmt')
  #46 =IF(AND(F41+F42>0;F40="True");MIN(F44;F43);F45)
  #IF ((ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt > 0) AND r_SsiSpousalDeemCalcsUsed = True), THEN rFbrWorkIncentivePossAmt = the lower of (rateFbrAmt or r_FbrSpouseDeemAmt), ELSE r_FbrNoSpouseDeemAmt
  #41 ssiSpouseDeemUnearnAmt
  #42 ssiSpouseDeemEarnAmt
  #40 r_SsiSpousalDeemCalcsUsed  NOte this is T/F and not currency
  #44 rateFbrAmt
  #43 r_FbrSpouseDeemAmt
  #45 r_FbrNoSpouseDeemAmt
  #debugger
  @rFbrWorkIncentivePossAmt.operation = "
  ssiSpouseDeemUnearnAmt      = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
  ssiSpouseDeemEarnAmt        = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
  r_SsiSpousalDeemCalcsUsed   = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  rateFbrAmt                  = WebCalc.find_by_name('rateFbrAmt')
  r_FbrSpouseDeemAmt          = WebCalc.find_by_name('r_FbrSpouseDeemAmt')
  r_FbrNoSpouseDeemAmt        = WebCalc.find_by_name('r_FbrNoSpouseDeemAmt')
  if ((ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f) > 0) && (r_SsiSpousalDeemCalcsUsed.calculate manager) == true then
    [Float(rateFbrAmt.calculate manager), Float(r_FbrSpouseDeemAmt.calculate manager)].min
  else
    Float(r_FbrNoSpouseDeemAmt.calculate manager)
  end
  "
  @rFbrWorkIncentivePossAmt.save!

  @countIncForHighestUserPassReimbAmt = WebCalc.find_or_create_by_name(:name => 'countIncForHighestUserPassReimbAmt')
  #If R_SsiSpousalDeemCalcsUsed = false, THEN CountIncForHighestUserPassReimbAmt = R_TotalIncMinusBweNoSpouseDeemAmt - spousePassAmt, ELSE R_TotalIncMinusBweSpouseDeemAmt (cannot be < 0)
    #56 =MAX(0;IF(F50="False";F51-F54;F52))
  #F50 r_SsiSpousalDeemCalcsUsed
  #F51 r_TotalIncMinusBweNoSpouseDeemAmt
  #F54 spousePassAmt
  #F52 r_TotalIncMinusBweSpouseDeemAmt
  @countIncForHighestUserPassReimbAmt.operation = "
  r_SsiSpousalDeemCalcsUsed         = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_TotalIncMinusBweNoSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBweNoSpouseDeemAmt')
  r_TotalIncMinusBweSpouseDeemAmt   = WebCalc.find_by_name('r_TotalIncMinusBweSpouseDeemAmt')
  spousePassAmt                     = manager.get_answer_by_question_name('spousePassAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == false then
    [(Float(r_TotalIncMinusBweNoSpouseDeemAmt.calculate manager) - spousePassAmt.to_f) , 0].max
  else
    [(Float(r_TotalIncMinusBweSpouseDeemAmt.calculate manager)), 0].max
  end
  "
  @countIncForHighestUserPassReimbAmt.save!
#xxxxxddd


   @rCountIncForHighestSpousePassReimbAmt = WebCalc.find_or_create_by_name(:name => 'rCountIncForHighestSpousePassReimbAmt')
  #58 =MAX(0;IF(F50="False";F51-F55;F52-54))  If r_SsiSpousalDeemCalcsUsed = false, THEN countIncForHighestUserPassReimbAmt = r_TotalIncMinusBweNoSpouseDeemAmt - passAmt, ELSE r_TotalIncMinusBweSpouseDeemAmt - passAmt (cannot be < 0)
  #F50 r_SsiSpousalDeemCalcsUsed
  #f51 r_TotalIncMinusBweNoSpouseDeemAmt
  #f55 passAmt 
  #f52 r_TotalIncMinusBweSpouseDeemAmt
  #f54 spousePassAmt  Note this is a typo not fixed in #38  This was adjused by RMC on Sept 20 2011, did not see spouse pass in formula so removed
  @rCountIncForHighestSpousePassReimbAmt.operation = "
  r_SsiSpousalDeemCalcsUsed         = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_TotalIncMinusBweNoSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBweNoSpouseDeemAmt')
  r_TotalIncMinusBweSpouseDeemAmt   = WebCalc.find_by_name('r_TotalIncMinusBweSpouseDeemAmt')
  passAmt                           = manager.get_answer_by_question_name('passAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == false then
    [(Float(r_TotalIncMinusBweNoSpouseDeemAmt.calculate manager) - passAmt.to_f), 0].max
  else
    [(Float(r_TotalIncMinusBweSpouseDeemAmt.calculate manager) - passAmt.to_f), 0].max
  end 
  "
  @rCountIncForHighestSpousePassReimbAmt.save!

  @rHighestUserPassReimbAvailAmt = WebCalc.find_or_create_by_name(:name => 'rHighestUserPassReimbAvailAmt')
  #60 =MAX(0;F53-F57)
  #f53 rFbrWorkIncentivePossAmt
  #f57 countIncForHighestUserPassReimbAmt
  @rHighestUserPassReimbAvailAmt.operation = "
  rFbrWorkIncentivePossAmt = WebCalc.find_by_name('rFbrWorkIncentivePossAmt')
  countIncForHighestUserPassReimbAmt = WebCalc.find_by_name('countIncForHighestUserPassReimbAmt')
  [(Float(rFbrWorkIncentivePossAmt.calculate manager) - Float(countIncForHighestUserPassReimbAmt.calculate manager)), 0].max
  "
  @rHighestUserPassReimbAvailAmt.save!

  @rHighestSpousePassReimbAvailAmt = WebCalc.find_or_create_by_name(:name => 'rHighestSpousePassReimbAvailAmt')
  #62 =MAX(0;F53-F59)
  #53 rFbrWorkIncentivePossAmt
  #59 rCountIncForHighestSpousePassReimbAmt
  @rHighestSpousePassReimbAvailAmt.operation = "
  rFbrWorkIncentivePossAmt                = WebCalc.find_by_name('rFbrWorkIncentivePossAmt')
  rCountIncForHighestSpousePassReimbAmt   = WebCalc.find_by_name('rCountIncForHighestSpousePassReimbAmt')
  [(Float(rFbrWorkIncentivePossAmt.calculate manager) - Float(rCountIncForHighestSpousePassReimbAmt.calculate manager)), 0].max
  "
  @rHighestSpousePassReimbAvailAmt.save!

  @rUnearnForSsiCalcAmt = WebCalc.find_or_create_by_name(:name => 'rUnearnForSsiCalcAmt')
  #74 =IF(F66="true";F67;F68)
  #f66 r_SsiSpousalDeemCalcsUsed
  #f67 r_UnearnForSsiCalcSpouseDeemAmt
  #f68 r_UnearnForSsiCalcNoSpouseDeemAmt
  @rUnearnForSsiCalcAmt.operation = "
  r_SsiSpousalDeemCalcsUsed         = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_UnearnForSsiCalcSpouseDeemAmt   = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemAmt')
  r_UnearnForSsiCalcNoSpouseDeemAmt = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == true then
    Float(r_UnearnForSsiCalcSpouseDeemAmt.calculate manager)
  else
    Float(r_UnearnForSsiCalcNoSpouseDeemAmt.calculate manager)
  end
  "
  @rUnearnForSsiCalcAmt.save!

  @rFbrAmt = WebCalc.find_or_create_by_name(:name => 'rFbrAmt')
  #75 =IF(F66="true";F71;F72)
  #66 r_SsiSpousalDeemCalcsUsed
  #F71 r_FbrSpouseDeemAmt
  #F72 r_FbrNoSpouseDeemAmt
  @rFbrAmt.operation = "
  r_SsiSpousalDeemCalcsUsed     = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_FbrSpouseDeemAmt            = WebCalc.find_by_name('r_FbrSpouseDeemAmt')
  r_FbrNoSpouseDeemAmt          = WebCalc.find_by_name('r_FbrNoSpouseDeemAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == true then
    Float(r_FbrSpouseDeemAmt.calculate manager)
  else
    Float(r_FbrNoSpouseDeemAmt.calculate manager)    
  end    
  "
  @rFbrAmt.save!

  @rUnearnMinusFbrAmt = WebCalc.find_or_create_by_name(:name => 'rUnearnMinusFbrAmt')
  #76 =F75-F76
  #F75 rUnearnForSsiCalcAmt
  #F76 rFbrAmt
  @rUnearnMinusFbrAmt.operation = "
  rUnearnForSsiCalcAmt  = WebCalc.find_by_name('rUnearnForSsiCalcAmt')
  rFbrAmt               = WebCalc.find_by_name('rFbrAmt')
  Float(rUnearnForSsiCalcAmt.calculate manager) - Float(rFbrAmt.calculate manager)
  "
  @rUnearnMinusFbrAmt.save!

  @rSsiUnearnEligTotPassNeedAmt = WebCalc.find_or_create_by_name(:name => 'rSsiUnearnEligTotPassNeedAmt')
  #78 =IF(F77>0;F77+1;0)
  #F77 rUnearnMinusFbrAmt
  @rSsiUnearnEligTotPassNeedAmt.operation = "
  rUnearnMinusFbrAmt = WebCalc.find_by_name('rUnearnMinusFbrAmt')
  rUnearnMinusFbrAmt = Float(rUnearnMinusFbrAmt.calculate manager)
  if rUnearnMinusFbrAmt > 0 then
    rUnearnMinusFbrAmt + 1
  else
    0
  end
  "
  @rSsiUnearnEligTotPassNeedAmt.save!

  @rSsiUnearnEligAddedPassNeedAmt = WebCalc.find_or_create_by_name(:name => 'rSsiUnearnEligAddedPassNeedAmt')
  #80 =MAX(0;F79-(F69+F70))
  #f79  rSsiUnearnEligTotPassNeedAmt
  #F69  passAmt
  #f70  spousePassAmt
  @rSsiUnearnEligAddedPassNeedAmt.operation = "
  rSsiUnearnEligTotPassNeedAmt  = WebCalc.find_by_name('rSsiUnearnEligTotPassNeedAmt')
  passAmt                       = manager.get_answer_by_question_name('passAmt')
  spousePassAmt                 = manager.get_answer_by_question_name('spousePassAmt')
  [(Float(rSsiUnearnEligTotPassNeedAmt.calculate manager) - (passAmt.to_f + spousePassAmt.to_f)), 0].max
  "
  @rSsiUnearnEligAddedPassNeedAmt.save!

  @rEarnNoIrweNoDivideAmt = WebCalc.find_or_create_by_name(:name => 'rEarnNoIrweNoDivideAmt')
  #90 =IF(F87="False";F85;F86) IF r_SsiSpousalDeemCalcsUsed = False, THEN rEarnNoIrweNoDivideAmt = r_EarnBeforeDivideNoSpouseDeemAmt ELSE r_EarnBeforeDivideSpouseDeemAmt
  #F87 r_SsiSpousalDeemCalcsUsed
  #F85 r_EarnBeforeDivideNoSpouseDeemAmt
  #f86 r_EarnBeforeDivideSpouseDeemAmt  
  
  #Sept 20 1011 review
  #39	90	IF r_SsiSpousalDeemCalcsUsed = False, THEN rEarnNoIrweNoDivideAmt  
  #= r_EarnBeforeDivideNoSpouseDeemAmt ELSE r_EarnBeforeDivideSpouseDeemAmt	rEarnNoIrweNoDivideAmt
     
  @rEarnNoIrweNoDivideAmt.operation = "
  r_SsiSpousalDeemCalcsUsed           = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_EarnBeforeDivideNoSpouseDeemAmt   = WebCalc.find_by_name('r_EarnBeforeDivideNoSpouseDeemAmt')
  r_EarnBeforeDivideSpouseDeemAmt     = WebCalc.find_by_name('r_EarnBeforeDivideSpouseDeemAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == false then
    Float(r_EarnBeforeDivideNoSpouseDeemAmt.calculate manager)
  else
    Float(r_EarnBeforeDivideSpouseDeemAmt.calculate manager)
  end
  "
  @rEarnNoIrweNoDivideAmt.save!

  @rEarnMinusSpouseIrweNoDivideAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusSpouseIrweNoDivideAmt')
  #92 =F91-F88 rEarnMinusSpouseIrweNoDivideAmt = rEarnNoIrweNoDivideAmt - spouseSsiCaidIrweAmt
  @rEarnMinusSpouseIrweNoDivideAmt.operation = "
  rEarnNoIrweNoDivideAmt  = WebCalc.find_by_name('rEarnNoIrweNoDivideAmt')
  spouseSsiCaidIrweAmt    = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
  Float(rEarnNoIrweNoDivideAmt.calculate manager) - spouseSsiCaidIrweAmt.to_f
  "
  @rEarnMinusSpouseIrweNoDivideAmt.save!

  @rCountEarnMinusSpouseIrweDivideNoBweAmt = WebCalc.find_or_create_by_name(:name => 'rCountEarnMinusSpouseIrweDivideNoBweAmt')
  #94 =F93/2 Countable Earned Income after subtracting Spouse's IRWE and after dividing by 2 but before subtracting Spouse  BWE
  #f93 rEarnMinusSpouseIrweNoDivideAmt
  @rCountEarnMinusSpouseIrweDivideNoBweAmt.operation = "
  rEarnMinusSpouseIrweNoDivideAmt = WebCalc.find_by_name('rEarnMinusSpouseIrweNoDivideAmt')
  (Float(rEarnMinusSpouseIrweNoDivideAmt.calculate manager)/2)
  "
  @rCountEarnMinusSpouseIrweDivideNoBweAmt.save!


  @rEarnMinusSpouseIrweBweAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusSpouseIrweBweAmt')
  #98 =F95-F97 Countable Earned Income after subtracting Spouse's IRWE, dividing by 2, and subtracting Spouse BWE (can not be less than zero)
  #f95 rCountEarnMinusSpouseIrweDivideNoBweAmt
  #f97 spouseBweAmt
  @rEarnMinusSpouseIrweBweAmt.operation = "
  rCountEarnMinusSpouseIrweDivideNoBweAmt = WebCalc.find_by_name('rCountEarnMinusSpouseIrweDivideNoBweAmt')
  spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
  Float(rCountEarnMinusSpouseIrweDivideNoBweAmt.calculate manager) - spouseBweAmt.to_f 
  "
  @rEarnMinusSpouseIrweBweAmt.save!
  
  @rEarnMinusUserIrweNoDivideAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusUserIrweNoDivideAmt')
  #105 =F102-F103 rEarnMinusUserIrweNoDivideAmt = rEarnNoIrweNoDivideAmt - ssiCaidIrweAmt
  @rEarnMinusUserIrweNoDivideAmt.operation = "
  rEarnNoIrweNoDivideAmt = WebCalc.find_by_name('rEarnNoIrweNoDivideAmt')
  ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
  Float(rEarnNoIrweNoDivideAmt.calculate manager) - ssiCaidIrweAmt.to_f
  "
  @rEarnMinusUserIrweNoDivideAmt.save! 
  
  @rEarnMinusUserIrweDivideNoBweAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusUserIrweDivideNoBweAmt')
  #106 =F106/2 rEarnMinusUserIrweDivideNoBweAmt = rEarnMinusUserIrweNoDivideAmt / 2
  @rEarnMinusUserIrweDivideNoBweAmt.operation = "
  rEarnMinusUserIrweNoDivideAmt = WebCalc.find_by_name('rEarnMinusUserIrweNoDivideAmt')
  (Float(rEarnMinusUserIrweNoDivideAmt.calculate manager)/2)
  "
  @rEarnMinusUserIrweDivideNoBweAmt.save! 

  @rEarnMinusUserIrweBweAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusUserIrweBweAmt')
  #107 =F107-F104 rEarnMinusUserIrweBweAmt = rEarnMinusUserIrweDivideNoBweAmt - bweAmt
  @rEarnMinusUserIrweBweAmt.operation = "
  rEarnMinusUserIrweDivideNoBweAmt = WebCalc.find_by_name('rEarnMinusUserIrweDivideNoBweAmt')
  bweAmt = manager.get_answer_by_question_name('bweAmt')
  (Float(rEarnMinusUserIrweDivideNoBweAmt.calculate manager) - bweAmt.to_f)
  "
  @rEarnMinusUserIrweBweAmt.save!

  @rIrweNeededForSsiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rIrweNeededForSsiSgaTestAmt')
  #117 =MAX(0;F112-F113) rIrweNeededForSsiSgaTestAmt = ssiOrCaidEarnAmt - r_SgaAmt (cannot be < 0)
  @rIrweNeededForSsiSgaTestAmt.operation = "
  ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
  r_SgaAmt = WebCalc.find_by_name('r_SgaAmt')
  [(ssiOrCaidEarnAmt.to_f - Float(r_SgaAmt.calculate manager)), 0].max
  "
  @rIrweNeededForSsiSgaTestAmt.save!

  @rAddedIrweNeededForSsiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rAddedIrweNeededForSsiSgaTestAmt')
  #118 =MAX(0;F118-F114) rAddedIrweNeededForSsiSgaTestAmt = rIrweNeededForSsiSgaTestAmt - sgaIrweAmt (cannot be < 0)
  @rAddedIrweNeededForSsiSgaTestAmt.operation = "
  rIrweNeededForSsiSgaTestAmt = WebCalc.find_by_name('rIrweNeededForSsiSgaTestAmt')
  sgaIrweAmt = manager.get_answer_by_question_name('sgaIrweAmt')
  [(Float(rIrweNeededForSsiSgaTestAmt.calculate manager) - sgaIrweAmt.to_f), 0].max
  "
  @rAddedIrweNeededForSsiSgaTestAmt.save!

  @rIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rIrweSubsidyNeededForDiSgaTestAmt')
  #119 =MAX(0;F111-F113) rIrweSubsidyNeededForDiSgaTestAmt = ssdiEarnAmt - r_SgaAmt (cannot be < 0)
  @rIrweSubsidyNeededForDiSgaTestAmt.operation = "
  ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
  r_SgaAmt = WebCalc.find_by_name('r_SgaAmt')
  [(ssdiEarnAmt.to_f - Float(r_SgaAmt.calculate manager)), 0].max
  "
  @rIrweSubsidyNeededForDiSgaTestAmt.save!

#talked with Ruth and the Excel description is correct, no change needed here 9/20/2011
  @rAddedIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rAddedIrweSubsidyNeededForDiSgaTestAmt')
  #120 =MAX(0;F120-F114)  rAddedIrweSubsidyNeededForDiSgaTestAmt = rIrweSubsidyNeededForDiSgaTestAmt - sgaIrweAmt - subsidyEmpSupAmt - subsidyWkDutiesReducAmt (cannot be < 0)
  #39 55	 120	          rAddedIrweSubsidyNeededForDiSgaTestAmt = rIrweSubsidyNeededForDiSgaTestAmt - sgaIrweAmt - subsidyEmpSupAmt - subsidyWkDutiesReducAmt (cannot be < 0)	rAddedIrweSubsidyNeededForDiSgaTestAmt
  
  @rAddedIrweSubsidyNeededForDiSgaTestAmt.operation = "
  rIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_by_name('rIrweSubsidyNeededForDiSgaTestAmt')
  sgaIrweAmt = manager.get_answer_by_question_name('sgaIrweAmt')
  subsidyEmpSupAmt = manager.get_answer_by_question_name('subsidyEmpSupAmt')
  subsidyWkDutiesReducAmt = manager.get_answer_by_question_name('subsidyWkDutiesReducAmt')
  [(Float(rIrweSubsidyNeededForDiSgaTestAmt.calculate manager) - sgaIrweAmt.to_f - subsidyEmpSupAmt.to_f - subsidyWkDutiesReducAmt.to_f), 0].max
  "
  @rAddedIrweSubsidyNeededForDiSgaTestAmt.save!

  @rSpouseIrweNeededForSsiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseIrweNeededForSsiSgaTestAmt')
  #130 =MAX(0;F125-F126) rSpouseIrweNeededForSsiSgaTestAmt = spouseSsiOrCaidEarnAmt - r_SgaAmt (cannot be < 0)
  @rSpouseIrweNeededForSsiSgaTestAmt.operation = "
  spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
  r_SgaAmt = WebCalc.find_by_name('r_SgaAmt')
  [(spouseSsiOrCaidEarnAmt.to_f - Float(r_SgaAmt.calculate manager)), 0].max
  "
  @rSpouseIrweNeededForSsiSgaTestAmt.save!

  @rSpouseAddedIrweNeededForSsiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseAddedIrweNeededForSsiSgaTestAmt')
  #131 =MAX(0;F131-F127) rSpouseAddedIrweNeededForSsiSgaTestAmt = rSpouseIrweNeededForSsiSgaTestAmt - spouseSgaIrweAmt (cannot be < 0)
  @rSpouseAddedIrweNeededForSsiSgaTestAmt.operation = "
  rSpouseIrweNeededForSsiSgaTestAmt = WebCalc.find_by_name('rSpouseIrweNeededForSsiSgaTestAmt')
  spouseSgaIrweAmt = manager.get_answer_by_question_name('spouseSgaIrweAmt')
  [(Float(rSpouseIrweNeededForSsiSgaTestAmt.calculate manager) - spouseSgaIrweAmt.to_f), 0].max
  "
  @rSpouseAddedIrweNeededForSsiSgaTestAmt.save!

  @rSpouseIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseIrweSubsidyNeededForDiSgaTestAmt')
  #132 =MAX(0;F124-F126) rSpouseIrweSubsidyNeededForDiSgaTestAmt = spouseSsdiEarnAmt - r_SgaAmt (cannot be < 0)
  @rSpouseIrweSubsidyNeededForDiSgaTestAmt.operation = "
  spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt')
  r_SgaAmt = WebCalc.find_by_name('r_SgaAmt')
  [(spouseSsdiEarnAmt.to_f - Float(r_SgaAmt.calculate manager)), 0].max
  "
  @rSpouseIrweSubsidyNeededForDiSgaTestAmt.save!

  @rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt')
  #133 =MAX(0;F133-F127) rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt = rSpouseIrweSubsidyNeededForDiSgaTestAmt - spouseSgaIrweAmt - spouseSubsidyEmpSupAmt - spouseSubsidyWkDutiesReducAmt (cannot be < 0)
  #note looks like a miss in the workbook, going with description rather than formula, email sent on 4/27/2011
  @rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt.operation = "
  rSpouseIrweSubsidyNeededForDiSgaTestAmt = WebCalc.find_by_name('rSpouseIrweSubsidyNeededForDiSgaTestAmt')
  spouseSgaIrweAmt                        = manager.get_answer_by_question_name('spouseSgaIrweAmt')
  spouseSubsidyEmpSupAmt                  = manager.get_answer_by_question_name('spouseSubsidyEmpSupAmt')
  spouseSubsidyWkDutiesReducAmt           = manager.get_answer_by_question_name('spouseSubsidyWkDutiesReducAmt')
  [(Float(rSpouseIrweSubsidyNeededForDiSgaTestAmt.calculate manager) - spouseSgaIrweAmt.to_f - spouseSubsidyEmpSupAmt.to_f - spouseSubsidyWkDutiesReducAmt.to_f), 0].max
  "
  @rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt.save!
  
  @rDisWorkExpNotIrwePassAmt = WebCalc.find_or_create_by_name(:name => 'rDisWorkExpNotIrwePassAmt')
  #140 =MAX(0;F136-F138-F139) Amount of disability-related work expenses not covered under an IRWE or PASS (Can not be less than zero)
  #F136 disWorkExpAmt
  #F138 ssiCaidIrweAmt
  #F139 passAmt
  @rDisWorkExpNotIrwePassAmt.operation = "
  disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
  ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
  passAmt = manager.get_answer_by_question_name('passAmt')
  [(disWorkExpAmt.to_f - ssiCaidIrweAmt.to_f - passAmt.to_f), 0].max
  "
  @rDisWorkExpNotIrwePassAmt.save!

  @rSpouseDisWorkExpNotIrwePassAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseDisWorkExpNotIrwePassAmt')
  #147 =MAX(0;F143-F145-F146) Amount of disability-related work expenses not covered under an IRWE or PASS (Can not be less than zero)
  #f143 spouseDisWorkExpAmt
  #F145 spouseSsiCaidIrweAmt
  #F146 spousePassAmt
  @rSpouseDisWorkExpNotIrwePassAmt.operation = "
  spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
  spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
  spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
  [(spouseDisWorkExpAmt.to_f - spouseSsiCaidIrweAmt.to_f - spousePassAmt.to_f), 0].max
  "
  @rSpouseDisWorkExpNotIrwePassAmt.save!

  @r_UnearnForSsiCalcAmt = WebCalc.find_or_create_by_name(:name => 'r_UnearnForSsiCalcAmt')
  #156 =IF(F152="True"; F154;F153) IF r_SsiSpousalDeemCalcsUsed = True, THEN r_UnearnForSsiCalcAmt = r_UnearnForSsiCalcSpouseDeemAmt, ELSE r_UnearnForSsiCalcAmt
  #f153 r_UnearnForSsiCalcNoSpouseDeemAmt
  @r_UnearnForSsiCalcAmt.operation = "
  r_SsiSpousalDeemCalcsUsed           = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
  r_UnearnForSsiCalcSpouseDeemAmt     = WebCalc.find_by_name('r_UnearnForSsiCalcSpouseDeemAmt')
  r_UnearnForSsiCalcNoSpouseDeemAmt   = WebCalc.find_by_name('r_UnearnForSsiCalcNoSpouseDeemAmt')
  if (r_SsiSpousalDeemCalcsUsed.calculate manager) == true then
   Float(r_UnearnForSsiCalcSpouseDeemAmt.calculate manager)
 else
   Float(r_UnearnForSsiCalcNoSpouseDeemAmt.calculate manager)
 end
 "
  @r_UnearnForSsiCalcAmt.save!
  
  @rMaxSsiCheckWithIrweBweAmt = WebCalc.find_or_create_by_name(:name => 'rMaxSsiCheckWithIrweBweAmt')
  #158 =MAX(0;F151-F157) rMaxSsiCheckWithIrweBweAmt = rFbrWorkIncentivePossAmt - r_UnearnForSsiCalcAmt (cannot be < 0)
  @rMaxSsiCheckWithIrweBweAmt.operation = "
  rFbrWorkIncentivePossAmt  = WebCalc.find_by_name('rFbrWorkIncentivePossAmt')
  r_UnearnForSsiCalcAmt     = WebCalc.find_by_name('r_UnearnForSsiCalcAmt')
  [(Float(rFbrWorkIncentivePossAmt.calculate manager) - Float(r_UnearnForSsiCalcAmt.calculate manager)), 0].max
  "
  @rMaxSsiCheckWithIrweBweAmt.save!
  
  @rMaxReimbPossWithIrweAmt = WebCalc.find_or_create_by_name(:name => 'rMaxReimbPossWithIrweAmt')
  #160 =MIN(F159;F155) rMaxReimbPossWithIrweAmt =  the smaller of rMaxSsiCheckWithIrweBweAmt or rEarnMinusSpouseIrweBweAmt
  @rMaxReimbPossWithIrweAmt.operation = "
  rMaxSsiCheckWithIrweBweAmt = WebCalc.find_by_name('rMaxSsiCheckWithIrweBweAmt')
  rEarnMinusSpouseIrweBweAmt = WebCalc.find_by_name('rEarnMinusSpouseIrweBweAmt')
  [Float(rMaxSsiCheckWithIrweBweAmt.calculate manager), Float(rEarnMinusSpouseIrweBweAmt.calculate manager)].min
  "
  @rMaxReimbPossWithIrweAmt.save!
  
  @rIrweForMaxReimbPossAmt = WebCalc.find_or_create_by_name(:name => 'rIrweForMaxReimbPossAmt')
  #162 =F155*2  rIrweForMaxReimbPossAmt = 2 * rEarnMinusSpouseIrweBweAmt
  #Nov 18 review per email
  #162:   rIrweForMaxReimbPossAmt = 2 * rMaxReimbPossWithIrweAmt
  @rIrweForMaxReimbPossAmt.operation = "
   rMaxReimbPossWithIrweAmt = WebCalc.find_by_name('rMaxReimbPossWithIrweAmt')
  (Float(rMaxReimbPossWithIrweAmt.calculate manager) * 2)
  "
  @rIrweForMaxReimbPossAmt.save! 
  
  @rSpouseMaxReimbPossWithIrweAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseMaxReimbPossWithIrweAmt')
  #168 =MIN(F166;F167) rSpouseMaxReimbPossWithIrweAmt = smaller of rMaxSsiCheckWithIrweBweAmt OR rEarnMinusUserIrweBweAmt
  @rSpouseMaxReimbPossWithIrweAmt.operation = "
  rMaxSsiCheckWithIrweBweAmt = WebCalc.find_by_name('rMaxSsiCheckWithIrweBweAmt')
  rEarnMinusUserIrweBweAmt = WebCalc.find_by_name('rEarnMinusUserIrweBweAmt')
  [Float(rMaxSsiCheckWithIrweBweAmt.calculate manager), Float(rEarnMinusUserIrweBweAmt.calculate manager)].min
  "
  @rSpouseMaxReimbPossWithIrweAmt.save!

  @RSpouseIrweForMaxReimbPossAmt = WebCalc.find_or_create_by_name(:name => 'RSpouseIrweForMaxReimbPossAmt')
  #170 =F167*2 rIrweForMaxReimbPossAmt = 2 * rEarnMinusUserIrweBweAmt
  #Nov 18 2011 review per email
  # 170:  RSpouseIrweForMaxReimbPossAmt = 2 * rSpouseMaxReimbPossWithIrweAmt
  #       RSpouseIrweForMaxReimbPossAmt = 2 * rSpouseMaxReimbPossWithIrweAmt
 #  Nov 29 review looks fine rSpouseMaxReimbPossWithIrweAmt
 
  @RSpouseIrweForMaxReimbPossAmt.operation = "
  rSpouseMaxReimbPossWithIrweAmt = WebCalc.find_by_name('rSpouseMaxReimbPossWithIrweAmt')
  (Float(rSpouseMaxReimbPossWithIrweAmt.calculate manager) * 2)
  "
  @RSpouseIrweForMaxReimbPossAmt.save!

  @rTotWorkExpAmt = WebCalc.find_or_create_by_name(:name => 'rTotWorkExpAmt')
  #181 =F175+F176+F177 rTotWorkExpAmt = disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt
  @rTotWorkExpAmt.operation = "
  disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
  estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
  othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
  (disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f)
  "
  @rTotWorkExpAmt.save!

  @rWorkExpNotBweOrPassAmt = WebCalc.find_or_create_by_name(:name => 'rWorkExpNotBweOrPassAmt')
  #183 =MAX(0;F182-F179-F180) rWorkExpNotBweOrPassAmt = rTotWorkExpAmt - bweAmt - (passAmt - employInvestAmt) (cannot be < 0)
  ##### Note this needs to be reviewed the calcs are different than description
  @rWorkExpNotBweOrPassAmt.operation = "
  rTotWorkExpAmt = WebCalc.find_by_name('rTotWorkExpAmt')
  bweAmt = manager.get_answer_by_question_name('bweAmt')
  passAmt = manager.get_answer_by_question_name('passAmt')
  employInvestAmt = manager.get_answer_by_question_name('employInvestAmt')
  [(Float(rTotWorkExpAmt.calculate manager) - bweAmt.to_f - [(passAmt.to_f - employInvestAmt.to_f), 0].max), 0].max
  "
  @rWorkExpNotBweOrPassAmt.save!

  @rSpouseTotWorkExpAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseTotWorkExpAmt')
  #193 =F187+F188+F189 rSpouseTotWorkExpAmt = spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt
  @rSpouseTotWorkExpAmt.operation = "
  spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
  spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
  spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
  (spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f)
  "
  @rSpouseTotWorkExpAmt.save!

  @rSpouseWorkExpNotBweOrPassAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseWorkExpNotBweOrPassAmt')
  #195 =MAX(0;F194-F191-F192) rSpouseWorkExpNotBweOrPassAmt = rSpouseTotWorkExpAmt - spouseBweAmt - (spousePassAmt - spouseEmployInvestAmt) (cannot be < 0)
  #NOte another reviewable one Bob partial possible fix based on call
  @rSpouseWorkExpNotBweOrPassAmt.operation = "
  rSpouseTotWorkExpAmt = WebCalc.find_by_name('rSpouseTotWorkExpAmt')
  spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
  spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
  spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
  [(Float(rSpouseTotWorkExpAmt.calculate manager) - spouseBweAmt.to_f - [(spousePassAmt.to_f - spouseEmployInvestAmt.to_f), 0].max), 0].max
  "
  @rSpouseWorkExpNotBweOrPassAmt.save!

  @rTotBweReimbAvail = WebCalc.find_or_create_by_name(:name => 'rTotBweReimbAvail')
  #201 =MIN(F198;F200) Total amount of reimbursement available with use of a BWE
  #f198 rMaxSsiCheckWithIrweBweAmt
  #f200 rEarnMinusSpouseIrweBweAmt
  @rTotBweReimbAvail.operation = "
  rMaxSsiCheckWithIrweBweAmt = WebCalc.find_by_name('rMaxSsiCheckWithIrweBweAmt')
  rEarnMinusSpouseIrweBweAmt = WebCalc.find_by_name('rEarnMinusSpouseIrweBweAmt')
  [Float(rMaxSsiCheckWithIrweBweAmt.calculate manager), Float(rEarnMinusSpouseIrweBweAmt.calculate manager)].min
  "
  @rTotBweReimbAvail.save!

  @rSpouseTotBweReimbAvail = WebCalc.find_or_create_by_name(:name => 'rSpouseTotBweReimbAvail')
  #212 =MIN(F209;F211) Total amount of reimbursement available with use of a BWE
  #f209 rMaxSsiCheckWithIrweBweAmt
  #f211 rEarnMinusUserIrweBweAmt
  #review looks fishy on Nov 4 2011 passes test.
  # 209 rMaxSsiCheckWithIrweBweAmt
  #211 rEarnMinusUserIrweBweAmt
  @rSpouseTotBweReimbAvail.operation = "
  rMaxSsiCheckWithIrweBweAmt = WebCalc.find_by_name('rMaxSsiCheckWithIrweBweAmt')
  rEarnMinusUserIrweBweAmt = WebCalc.find_by_name('rEarnMinusUserIrweBweAmt')
  [Float(rMaxSsiCheckWithIrweBweAmt.calculate manager), Float(rEarnMinusUserIrweBweAmt.calculate manager)].min
  "
  @rSpouseTotBweReimbAvail.save!

  @rSSIEarnSpouseEarnOrDeemAmt = WebCalc.find_or_create_by_name(:name => 'rSSIEarnSpouseEarnOrDeemAmt')
  #229 =(IF(F221="YES";F223;0))+(IF(F222="YES";F224+F225;0)) rSSIEarnSpouseEarnOrDeemAmt = (IF Student = YES, THEN ssiOrCaidEarnAmt, ELSE 0) + (IF spouseStudent = YES, THEN spouseSsiOrCaidEarnAmt + ssiSpouseDeemEarnAmt, ELSE 0)
  @rSSIEarnSpouseEarnOrDeemAmt.operation = "
  student = manager.get_answer_by_question_name('student')
  ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
  spouseStudent = manager.get_answer_by_question_name('spouseStudent')
  spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
  ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
  returnVar = 0
  if student == 'Yes' then
    returnVar = ssiOrCaidEarnAmt.to_f
  end
  if spouseStudent ==  'Yes' then
    returnVar = returnVar +  spouseSsiOrCaidEarnAmt.to_f + ssiSpouseDeemEarnAmt.to_f
  end
  returnVar    
  "
  @rSSIEarnSpouseEarnOrDeemAmt.save!

  @rSEIEPossAmt = WebCalc.find_or_create_by_name(:name => 'rSEIEPossAmt')
  #231 =MIN(F230;F226) rSEIEPossAmt = Minimum of rSSIEarnSpouseEarnOrDeemAmt AND rateSEIEMaxMonthly
  @rSEIEPossAmt.operation = "
  rSSIEarnSpouseEarnOrDeemAmt = WebCalc.find_by_name('rSSIEarnSpouseEarnOrDeemAmt')
  rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
  [Float(rSSIEarnSpouseEarnOrDeemAmt.calculate manager), Float(rateSEIEMaxMonthly.calculate manager)].min
  "
  @rSEIEPossAmt.save!
  
  @rAddSEIEAmt = WebCalc.find_or_create_by_name(:name => 'rAddSEIEAmt')
  #233 =F232-(F227+F228) rAddSEIEAmt = rSEIEPossAmt - (seieAmt + spouseSeieAmt)
  @rAddSEIEAmt.operation = "
  rSEIEPossAmt = WebCalc.find_by_name('rSEIEPossAmt')
  seieAmt = manager.get_answer_by_question_name('seieAmt')
  spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
  Float(rSEIEPossAmt.calculate manager) - (seieAmt.to_f + spouseSeieAmt.to_f)
  "
  @rAddSEIEAmt.save!
  
  @rEarnMinusSeieAmt = WebCalc.find_or_create_by_name(:name => 'rEarnMinusSeieAmt')
  #242 =F237-F238 rEarnMinusSeieAmt = ssiOrCaidEarnAmt - seieAmt
  @rEarnMinusSeieAmt.operation = "
  ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
  seieAmt = manager.get_answer_by_question_name('seieAmt')
  ssiOrCaidEarnAmt.to_f - seieAmt.to_f
  "
  @rEarnMinusSeieAmt.save!
   
  @rSpouseEarnMinusSeieAmt = WebCalc.find_or_create_by_name(:name => 'rSpouseEarnMinusSeieAmt')
  #244 =(F239+F240)-F241 rSpouseEarnMinusSeieAmt = (ssiSpouseDeemEarnAmt + spouseSsiOrCaidEarnAmt) - spouseSeieAmt
  @rSpouseEarnMinusSeieAmt.operation = "
  ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
  spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
  spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
  (ssiSpouseDeemEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f) - spouseSeieAmt.to_f    
  "
  @rSpouseEarnMinusSeieAmt.save!
  
  @rIncAvailForPassNoPassAmt = WebCalc.find_or_create_by_name(:name => 'rIncAvailForPassNoPassAmt')
  #264 =MAX(0;SUM(F248:F257)-SUM(F258:F261)) rIncAvailForPassNoPassAmt = (Sum of r_SsdiPayAllAdjustButCareBAmt thru ssiParDeemAmt) - (Sum of ssiCaidIrweAmt thru spouseBweAmt) Not < 0
  #f248 r_SsdiPayAllAdjustButCareBAmt
  #f249 r_SpouseSsdiPayAllAdjustButCareBAmt
  #f250 unearnAmt
  #f251 spouseUnEarnAmt
  #f252 ssiOrCaidEarnAmt
  #f253 spouseSsiOrCaidEarnAmt
  #f254 inKindPMVAmt
  #f255 ssiSpouseDeemUnearnAmt
  #f256 ssiSpouseDeemEarnAmt
  #f257 ssiParDeemAmt
  
  #f258 ssiCaidIrweAmt
  #f259 bweAmt
  #f260 spouseSsiCaidIrweAmt
  #f261 spouseBweAmt
  #f262 passAmt {not used in this calc}
  #f263 spousePassAmt {not used in this calc}
  @rIncAvailForPassNoPassAmt.operation = "
  r_SsdiPayAllAdjustButCareBAmt       = WebCalc.find_by_name('r_SsdiPayAllAdjustButCareBAmt')
  r_SpouseSsdiPayAllAdjustButCareBAmt = WebCalc.find_by_name('r_SpouseSsdiPayAllAdjustButCareBAmt')
  ssiOrCaidEarnAmt                    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
  unearnAmt                           = manager.get_answer_by_question_name('unearnAmt')
  spouseUnEarnAmt                     = manager.get_answer_by_question_name('spouseUnEarnAmt')
  ssiOrCaidEarnAmt                    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
  spouseSsiOrCaidEarnAmt              = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
  inKindPMVAmt                        = manager.get_answer_by_question_name('inKindPMVAmt')
  ssiSpouseDeemUnearnAmt              = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
  ssiSpouseDeemEarnAmt                = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
  ssiParDeemAmt                       = manager.get_answer_by_question_name('ssiParDeemAmt')
  ssiCaidIrweAmt                      = manager.get_answer_by_question_name('ssiCaidIrweAmt')
  bweAmt                              = WebCalc.find_by_name('bweAmt')
  spouseSsiCaidIrweAmt                = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
  spouseBweAmt                        = manager.get_answer_by_question_name('spouseBweAmt')
  returnVar = Float(r_SsdiPayAllAdjustButCareBAmt.calculate manager) + Float(r_SpouseSsdiPayAllAdjustButCareBAmt.calculate manager) + unearnAmt.to_f + spouseUnEarnAmt.to_f + ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f + 
  inKindPMVAmt.to_f + ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f + ssiParDeemAmt.to_f
  returnVar = [(returnVar -  ssiCaidIrweAmt.to_f + bweAmt.to_f + spouseSsiCaidIrweAmt.to_f + spouseBweAmt.to_f), 0].min
  "
  @rIncAvailForPassNoPassAmt.save!  
 
  @rIncAvailForPassMinusSpousePassAmt = WebCalc.find_or_create_by_name(:name => 'rIncAvailForPassMinusSpousePassAmt')
  #266 =MAX(F265-F263;0) rIncAvailForPassMinusSpousePassAmt = rIncAvailForPassNoPassAmt - spousePassAmt
  @rIncAvailForPassMinusSpousePassAmt.operation = "
  rIncAvailForPassNoPassAmt = WebCalc.find_by_name('rIncAvailForPassNoPassAmt')
  spousePassAmt  = manager.get_answer_by_question_name('spousePassAmt')
  [(Float(rIncAvailForPassNoPassAmt.calculate manager) - spousePassAmt.to_f), 0].max
  "
  @rIncAvailForPassMinusSpousePassAmt.save!
  
  @rIncomeAvailforSpousePassMinusUserPassAmt = WebCalc.find_or_create_by_name(:name => 'rIncomeAvailforSpousePassMinusUserPassAmt')
  #268 =MAX(F267-F262;0) Amount of Income available for use in a Spouse's PASS if there is a user PASS (can not be less than zero)
  #f267 rIncAvailForPassMinusSpousePassAmt
  #f262 passAmt
  @rIncomeAvailforSpousePassMinusUserPassAmt.operation = "
  rIncAvailForPassMinusSpousePassAmt = WebCalc.find_by_name('rIncAvailForPassMinusSpousePassAmt')
  passAmt  = manager.get_answer_by_question_name('passAmt')
  [(Float(rIncAvailForPassMinusSpousePassAmt.calculate manager) - passAmt.to_f), 0].max
  "
  @rIncomeAvailforSpousePassMinusUserPassAmt.save!
 
  @rDacNotCaidEligUnearnWithDi = WebCalc.find_or_create_by_name(:name => 'rDacNotCaidEligUnearnWithDi')
  #280 =IF(AND(F272="YES";F274="YES";F276=0;F277=0;F278>0;F281=0;F282=0);1;0) IF (ssiGet = YES or spouseSsiGet = YES) AND (ssdiDac = YES OR spouseSsdiDac = YES) AND rSsiUnearnEligAddedPassNeedAmt > 0, THEN rDacNotCaidEligUnearnWithDi = TRUE, ELSE FALSE
  @rDacNotCaidEligUnearnWithDi.operation = "
  ssiGet  = manager.get_answer_by_question_name('ssiGet')
  spouseSsiGet  = manager.get_answer_by_question_name('spouseSsiGet')
  ssdiDac  = manager.get_answer_by_question_name('ssdiDac')
  spouseSsdiDac  = WebCalc.find_by_name('spouseSsdiDac')
  rSsiUnearnEligAddedPassNeedAmt = WebCalc.find_by_name('rSsiUnearnEligAddedPassNeedAmt')
  if (ssiGet == 'Yes' || spouseSsiGet == 'Yes') && (ssdiDac == 'Yes' || spouseSsdiDac == 'Yes') && (Float(rSsiUnearnEligAddedPassNeedAmt.calculate manager) > 0) then
    true
  else
    false
  end
  "
  @rDacNotCaidEligUnearnWithDi.save!
 
  @rDacDiSubractAmt = WebCalc.find_or_create_by_name(:name => 'rDacDiSubractAmt')
  #282 =IF(F274="YES";F279;0)+IF(F275="YES";F280;0) rDacDiSubractAmt 
  #= (If ssdiDac = YES, THEN r_SsdiPayAllAdjustButCareBAmt, ELSE 0) + (If spouseSsdiDac = YES, THEN r_SpouseSsdiPayAllAdjustButCareBAmt ELSE 0)
  @rDacDiSubractAmt.operation = "
  ssdiDac  = manager.get_answer_by_question_name('ssdiDac')
  r_SsdiPayAllAdjustButCareBAmt = WebCalc.find_by_name('r_SsdiPayAllAdjustButCareBAmt')
  spouseSsdiDac  = manager.get_answer_by_question_name('spouseSsdiDac')
  r_SpouseSsdiPayAllAdjustButCareBAmt = WebCalc.find_by_name('r_SpouseSsdiPayAllAdjustButCareBAmt')
  returnVal = 0
  if ssdiDac == 'Yes' then
    returnVal = Float(r_SsdiPayAllAdjustButCareBAmt.calculate manager)
  end
  if spouseSsdiDac == 'Yes' then
    returnVal = returnVal + Float(r_SpouseSsdiPayAllAdjustButCareBAmt.calculate manager)
  end
  returnVal
  "
  @rDacDiSubractAmt.save!
 
  @rDacCaidIneligUnearnNoDi = WebCalc.find_or_create_by_name(:name => 'rDacCaidIneligUnearnNoDi')
  #284 =IF(AND(F272="YES";F274="YES";(F278-F287)>0);1;0) IF ssiGet = YES AND ssdiDac = YES AND (rSsiUnearnEligAddedPassNeedAmt - rDacDiSubractAmt) > 0, THEN rDacCaidIneligUnearnNoDi = TRUE, ELSE FALSE
  @rDacCaidIneligUnearnNoDi.operation = "
  ssiGet  = manager.get_answer_by_question_name('ssiGet')
  ssdiDac  = manager.get_answer_by_question_name('ssdiDac')
  rSsiUnearnEligAddedPassNeedAmt = WebCalc.find_by_name('rSsiUnearnEligAddedPassNeedAmt')
  rDacDiSubractAmt = WebCalc.find_by_name('rDacDiSubractAmt')
  if ssiGet == 'Yes' && ssdiDac == 'Yes' && ((Float(rSsiUnearnEligAddedPassNeedAmt.calculate manager) - Float(rDacDiSubractAmt.calculate manager)) > 0) then
    true
  else
    false
  end 
  "
  @rDacCaidIneligUnearnNoDi.save!
  
  @rSpouseDacCaidIneligUnearnNoDi = WebCalc.find_or_create_by_name(:name => 'rSpouseDacCaidIneligUnearnNoDi')
  #286 =IF(AND(F273="YES";F275="YES";(F278-F287)>0);1;0) IF spouseSsiGet = YES AND spouseSsdiDac = YES AND (rSsiUnearnEligAddedPassNeedAmt - rDacDiSubractAmt) > 0, THEN rSpouseDacCaidIneligUnearnNoDi = TRUE, ELSE FALSE
  @rSpouseDacCaidIneligUnearnNoDi.operation = "
  spouseSsiGet  = manager.get_answer_by_question_name('spouseSsiGet')
  spouseSsdiDac  = manager.get_answer_by_question_name('spouseSsdiDac')
  rSsiUnearnEligAddedPassNeedAmt = WebCalc.find_by_name('rSsiUnearnEligAddedPassNeedAmt')
  rDacDiSubractAmt = WebCalc.find_by_name('rDacDiSubractAmt')
  rDacDiSubractAmt = Float(rDacDiSubractAmt.calculate manager)
  if spouseSsiGet == 'Yes' && spouseSsdiDac == 'Yes' && ((Float(rSsiUnearnEligAddedPassNeedAmt.calculate manager) - rDacDiSubractAmt) > 0) then
    true
  else
   false
 end
 "
  @rSpouseDacCaidIneligUnearnNoDi.save!
  
  #Nov 4 review No doc 
  #IF ssiGet = YES AND rSsiUnearnEligAddedPassNeedAmt > 0, THEN rSsiIneligUnearn = TRUE, ELSE FALSE
   @rSsiIneligUnearn  = WebCalc.find_or_create_by_name(:name => 'rSsiIneligUnearn')
   @rSsiIneligUnearn.operation = "
    ssiGet = manager.get_answer_by_question_name('ssiGet')
    rSsiUnearnEligAddedPassNeedAmt = WebCalc.find_by_name('rSsiUnearnEligAddedPassNeedAmt')
    if (ssiGet == 'Yes' && Float(rSsiUnearnEligAddedPassNeedAmt.calculate manager) > 0 ) then
      true
    else
     false
    end
   "
   @rSsiIneligUnearn.save! 

   #rCaidIneligUnearn
   #IF ssiGet = YES AND ((ssdiDac <> YES AND rSsiIneligUnearn = TRUE) OR (ssdiDac = YES AND rDacCaidIneligUnearnNoDi = TRUE)) , THEN rCaidIneligUnearn = TRUE, ELSE FALSE
   
   @rCaidIneligUnearn  = WebCalc.find_or_create_by_name(:name => 'rCaidIneligUnearn')
    @rCaidIneligUnearn.operation = "
     ssiGet = manager.get_answer_by_question_name('ssiGet')
     ssdiDac = manager.get_answer_by_question_name('ssdiDac')
     rSsiIneligUnearn = WebCalc.find_by_name('rSsiIneligUnearn')
     rDacCaidIneligUnearnNoDi = WebCalc.find_by_name('rDacCaidIneligUnearnNoDi')
     if (ssiGet == 'Yes' && (ssdiDac != 'Yes' && (rSsiIneligUnearn.calculate manager) == true) || (ssdiDac == 'Yes' && (rDacCaidIneligUnearnNoDi.calculate manager) == true)) then
       true
     else
      false
     end
    "
    @rCaidIneligUnearn.save!
  
  #  IF spouseSsiGet = YES AND ((spouseSsdiDac <> YES AND rSsiIneligUnearn = TRUE) OR (spouseSsdiDac = YES AND rSpouseDacCaidIneligUnearnNoDi = TRUE)) , THEN rSpouseCaidIneligUnearn = TRUE, ELSE FALSE
  
    @rSpouseCaidIneligUnearn  = WebCalc.find_or_create_by_name(:name => 'rSpouseCaidIneligUnearn')
     @rSpouseCaidIneligUnearn.operation = "
      spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
      spouseSsdiDac = manager.get_answer_by_question_name('spouseSsdiDac')
      rSsiIneligUnearn = WebCalc.find_by_name('rSsiIneligUnearn')
      rSpouseDacCaidIneligUnearnNoDi = WebCalc.find_by_name('rSpouseDacCaidIneligUnearnNoDi')
      if ( spouseSsiGet == 'Yes' && ((spouseSsdiDac != 'Yes' && (rSsiIneligUnearn.calculate manager) == true) || (spouseSsdiDac == 'Yes' && (rSpouseDacCaidIneligUnearnNoDi.calculate manager) == true))) then
        true
      else
       false
      end
     "
     @rSpouseCaidIneligUnearn.save!

     #IF ssiResourceLimitExceed = YES OR ssiCoupleResourceLimitExceed = YES, THEN rSsiResourceLimitExceed = TRUE, ELSE FALSE
     
     @rSsiResourceLimitExceed  = WebCalc.find_or_create_by_name(:name => 'rSsiResourceLimitExceed')
      @rSsiResourceLimitExceed.operation = "
       ssiResourceLimitExceed = manager.get_answer_by_question_name('ssiResourceLimitExceed')
       ssiCoupleResourceLimitExceed = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
       if ( ssiResourceLimitExceed == 'Yes' || ssiCoupleResourceLimitExceed == 'Yes' ) then
         true
       else
        false
       end
      "
      @rSsiResourceLimitExceed.save!

      #IF (caidMostGroupsResourceLimitExceed OR caidCoupleMostGroupsResourceLimitExceed OR caidQdwiResourceLimitExceed or caidCoupleQdwiResourceLimitExceed 
      #OR caidQmbSlmbQiResourceLimitExceed OR caidCoupleQmbSlmbQiResourceLimitExceed OR CaidGetWorksWinResourceLimitExceed) = YES, THEN rCaidResourceLimitExceed = TRUE, ELSE FALSE
      
      @rCaidResourceLimitExceed  = WebCalc.find_or_create_by_name(:name => 'rCaidResourceLimitExceed')
       @rCaidResourceLimitExceed.operation = "
       caidMostGroupsResourceLimitExceed        = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
       caidCoupleMostGroupsResourceLimitExceed  = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
       caidQdwiResourceLimitExceed              = manager.get_answer_by_question_name('caidQdwiResourceLimitExceed')
       caidCoupleQdwiResourceLimitExceed        = manager.get_answer_by_question_name('caidCoupleQdwiResourceLimitExceed')
       caidQmbSlmbQiResourceLimitExceed         = manager.get_answer_by_question_name('caidQmbSlmbQiResourceLimitExceed')
       caidCoupleQmbSlmbQiResourceLimitExceed   = manager.get_answer_by_question_name('caidCoupleQmbSlmbQiResourceLimitExceed')
       caidWorksResourceLimitExceed             = manager.get_answer_by_question_name('caidWorksResourceLimitExceed')
       if ( caidMostGroupsResourceLimitExceed == 'Yes' || caidCoupleMostGroupsResourceLimitExceed == 'Yes' || caidQdwiResourceLimitExceed == 'Yes' || caidCoupleQdwiResourceLimitExceed == 'Yes' || 
         caidQmbSlmbQiResourceLimitExceed == 'Yes'  ||
         caidCoupleQmbSlmbQiResourceLimitExceed == 'Yes' || 
         caidWorksResourceLimitExceed == 'Yes') then
          true
        else
         false
        end
       "
       @rCaidResourceLimitExceed.save!
 
   @r1619bIneligUnearnOrResources  = WebCalc.find_or_create_by_name(:name => 'r1619bIneligUnearnOrResources')
    @r1619bIneligUnearnOrResources.operation = "
     rCaidIneligUnearn = WebCalc.find_by_name('rCaidIneligUnearn')
     rCaidResourceLimitExceed = WebCalc.find_by_name('rCaidResourceLimitExceed')
     if ((rCaidIneligUnearn.calculate manager) == true || (rCaidResourceLimitExceed.calculate manager) == true) then
       true
     else
      false
     end
    "
    @r1619bIneligUnearnOrResources.save! 


#    IF (ssiIndividThreshold = NO AND ssiOrCaidEarnAmt > VA_RateSsiCaidMonthlyThresholdAmt) OR (ssiIndividThreshold = YES AND (ssiOrCaidEarnAmt * 12) > ssiAnnualIndividThresholdAmt), THEN r1619bIneligThreshold = TRUE, ELSE FALSE
#this needs to be adjsted if new states, may want to pull out rate ito its own calc
    @r1619bIneligThreshold  = WebCalc.find_or_create_by_name(:name => 'r1619bIneligThreshold')
    @r1619bIneligThreshold.operation = "
      ssiIndividThreshold = manager.get_answer_by_question_name('ssiIndividThreshold')
      ssiAnnualIndividThresholdAmt = manager.get_answer_by_question_name('ssiAnnualIndividThresholdAmt')
      ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
      blind = manager.get_answer_by_question_name('blind')      
      unless manager.get_answer_by_question_name('sitDate').blank? 
          sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
          if blind != 'Yes' then
             nonBlindRate = MedicaidAnnualThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
             if !(nonBlindRate.blank?) then
                thresholdRate = nonBlindRate.virginia
             else
               thresholdRate = 32545.01
             end 
          else
             blindRate = MedicaidAnnualBlindThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
             if !(blindRate.blank?) then
                thresholdRate = blindRate.virginia
            else
              thresholdRate = 32545.01
            end
          
          end
      else
         thresholdRate =  32545.01
      end
      
      if ssiIndividThreshold == 'Yes' then
        thresholdRate = ssiAnnualIndividThresholdAmt.to_f
      end
      if (ssiOrCaidEarnAmt.to_f * 12)  > thresholdRate then
        true
      else
        false
      end 
     "
     @r1619bIneligThreshold.save!

     @rSpouse1619bIneligThreshold  = WebCalc.find_or_create_by_name(:name => 'rSpouse1619bIneligThreshold')
     @rSpouse1619bIneligThreshold.operation = "
       spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
       spouseAnnualIndividThresholdAmt = manager.get_answer_by_question_name('spouseAnnualIndividThresholdAmt')
       spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
       spouseBlind = manager.get_answer_by_question_name('spouseBlind')      
       unless manager.get_answer_by_question_name('sitDate').blank? 
           sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
             if spouseBlind != 'Yes' then
               nonBlindRate = MedicaidAnnualThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
              if !(nonBlindRate.blank?) then
                 thresholdRate = nonBlindRate.virginia
              else
                thresholdRate = 32545.01
              end 
           else
             blindRate = MedicaidAnnualBlindThreshold.find(:last, :conditions => ['start_date <= ?', sitDate])
              if !(blindRate.blank?) then
                 thresholdRate = blindRate.virginia
             else
               thresholdRate = 32545.01
             end

           end
       else
          thresholdRate =  32545.01
       end

       if spouseIndividThreshold == 'Yes' then
         thresholdRate = spouseAnnualIndividThresholdAmt.to_f
       end
       if (spouseSsiOrCaidEarnAmt.to_f * 12)  > thresholdRate then
         true
       else
         false
       end 
      "
      @rSpouse1619bIneligThreshold.save!
 
 
 ###*** Note to RMC stop here on manual code review, Restart o Nov7 8:30 AM
  #    39	333	IF ssiGet = YES, AND ssiOrCaidEarnAmt > 0, 
        # AND r_SsiUserOverUnderAdjustCalcAmt + r_SsiCoupleOverUnderAdjustCalcAmt = 0 AND r1619bIneligUnearnOrResources = FALSE AND r1619bIneligThreshold = FALSE, 
        #THEN r1619bElig = TRUE, ELSE FALSE
   #1/22/3012 refactoring question What are we trying to do here with the over/under adjust?
      @r1619bElig  = WebCalc.find_or_create_by_name(:name => 'r1619bElig')
       @r1619bElig.operation = "
        ssiGet = manager.get_answer_by_question_name('ssiGet')
        ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
        r_SsiUserOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiUserOverUnderAdjustCalcAmt')
        r_SsiCoupleOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiCoupleOverUnderAdjustCalcAmt')
        r1619bIneligUnearnOrResources = WebCalc.find_by_name('r1619bIneligUnearnOrResources')
        r1619bIneligThreshold = WebCalc.find_by_name('r1619bIneligThreshold')
        if ( ssiGet == 'Yes' && ssiOrCaidEarnAmt.to_f > 0 && ((Float(r_SsiUserOverUnderAdjustCalcAmt.calculate manager) + Float(r_SsiCoupleOverUnderAdjustCalcAmt.calculate manager)) == 0) && (r1619bIneligUnearnOrResources.calculate manager) == false && (r1619bIneligThreshold.calculate manager) == false) then
          true
        else
         false
        end
       "
       @r1619bElig.save!
    
      # IF spouseSsiGet = YES, AND spouseSsiOrCaidEarnAmt > 0, AND r_SsiCoupleOverUnderAdjustCalcAmt = 0 
      #AND r1619bIneligUnearnOrResources = FALSE AND rSpouse1619bIneligThreshold = FALSE, THEN rSpouse1619bElig = TRUE, ELSE FALSE
      
       @rSpouse1619bElig  = WebCalc.find_or_create_by_name(:name => 'rSpouse1619bElig')
       @rSpouse1619bElig.operation = "
        spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
        spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
        r_SsiCoupleOverUnderAdjustCalcAmt = WebCalc.find_by_name('r_SsiCoupleOverUnderAdjustCalcAmt')
        r1619bIneligUnearnOrResources = WebCalc.find_by_name('r1619bIneligUnearnOrResources')
        rSpouse1619bIneligThreshold = WebCalc.find_by_name('rSpouse1619bIneligThreshold')
        if ( spouseSsiGet == 'Yes' && spouseSsiOrCaidEarnAmt.to_f > 0 && (Float(r_SsiCoupleOverUnderAdjustCalcAmt.calculate manager) == 0) && (r1619bIneligUnearnOrResources.calculate manager) == false && (rSpouse1619bIneligThreshold.calculate manager) == false) then
          true
        else
         false
        end
       "
       @rSpouse1619bElig.save!
   
  #     IF ssiGet = YES AND (rSsiIneligUnearn = TRUE, OR rSsiResourceLimitExceed = TRUE, OR r1619bIneligThreshold = TRUE), THEN RLoseSSIFinancial = TRUE, ELSE FALSE 
 #Nov 16th review 
  #39 55	343	IF ssiGet = YES AND (rSsiIneligUnearn = TRUE, OR rSsiResourceLimitExceed = TRUE, OR r1619bIneligThreshold = TRUE), THEN rLoseSsiAnd1619bFinancial = TRUE, ELSE FALSE 	
  #rLoseSsiAnd1619bFinancial
  
       @rLoseSsiAnd1619bFinancial  = WebCalc.find_or_create_by_name(:name => 'rLoseSsiAnd1619bFinancial')
       @rLoseSsiAnd1619bFinancial.operation = "
      ssiGet = manager.get_answer_by_question_name('ssiGet')
      rSsiIneligUnearn = WebCalc.find_by_name('rSsiIneligUnearn')
      rSsiResourceLimitExceed = WebCalc.find_by_name('rSsiResourceLimitExceed')
      r1619bIneligThreshold = WebCalc.find_by_name('r1619bIneligThreshold')
      if ( ssiGet == 'Yes' && ((rSsiIneligUnearn.calculate manager) == true || (rSsiResourceLimitExceed.calculate manager) == true || (r1619bIneligThreshold.calculate manager) == true)) then
        true
      else
        false
      end
       "
       @rLoseSsiAnd1619bFinancial.save!
 
 
 ##rateFBR? xx      
#*********
#WebVaCalc worksheet  Starting with 55, no reference number or version number
#note **** this needs work Need migration to set up VA_RateAGPersonalAllowance in the va_max_auxiliary_grant_facility_rates table
#38 43	140	r_VA_IndivProvAuxGrantPaymentAmt = IF vA_LiveInAuxGrantFacility = Y AND ssiResourceLimitExceed <> Y, THEN vA_AuxGrantFacilityRateAmt - rateFbrAmt + VA_RateAGPersonalAllowance, ELSE 0.00  (Cannot be less than 0)	
#r_VA_IndivProvAuxGrantPaymentAmt
#edit on 12/12/11 for Personal alllowance and DB changes to MaxAuxiliaryGrantFacilityRatesTable
@r_VA_IndivProvAuxGrantPaymentAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_IndivProvAuxGrantPaymentAmt')
@r_VA_IndivProvAuxGrantPaymentAmt.operation = "
   vA_LiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
   ssiResourceLimitExceed = manager.get_answer_by_question_name('ssiResourceLimitExceed')
   vA_AuxGrantFacilityRateAmt = manager.get_answer_by_question_name('vA_AuxGrantFacilityRateAmt')
   rateAgPersonalAllowance = WebCalc.find_by_name('rateAgPersonalAllowance')
   rateFbrAmt = WebCalc.find_by_name('rateFbrAmt')
   if vA_LiveInAuxGrantFacility == 'Yes' &&  ssiResourceLimitExceed != 'Yes' then
    returnval = vA_AuxGrantFacilityRateAmt.to_f - Float(rateFbrAmt.calculate manager) + Float(rateAgPersonalAllowance.calculate manager)
   else
     0  
   end
  "
  @r_VA_IndivProvAuxGrantPaymentAmt.save!
  
#WebVaCalc
#note **** this needs work Need migration for  VA_RateAGPersonalAllowance
#38	150	r_VA_CoupleProvAuxGrantPaymentAmt = IF vA_liveWithSpouseAuxGrantFacility = Y AND ssiCoupleResourceLimitExceed <> Y, THEN vA_CoupleAuxGrantFacilityRateAmt - rateFbrCoupleAmt + (VA_RateAGPersonalAllowance times 2), ELSE 0.00	
#r_VA_CoupleProvAuxGrantPaymentAmt
#=IF(AND(E6="YES";E8<>"YES");E10-E12+(2*E13);0)
#6 vA_liveWithSpouseAuxGrantFacility
#8 ssiCoupleResourceLimitExceed
#10 vA_CoupleAuxGrantFacilityRateAmt
#12 rateFbrCoupleAmt
#13 VA_RateAGPersonalAllowance
 #xx
@r_VA_CoupleProvAuxGrantPaymentAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_CoupleProvAuxGrantPaymentAmt')
@r_VA_CoupleProvAuxGrantPaymentAmt.operation = "
vA_liveWithSpouseAuxGrantFacility         = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
ssiCoupleResourceLimitExceed              = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
vA_CoupleAuxGrantFacilityRateAmt          = manager.get_answer_by_question_name('vA_CoupleAuxGrantFacilityRateAmt')
rateAgPersonalAllowance                   = WebCalc.find_by_name('rateAgPersonalAllowance')
rateFbrCoupleAmt                          = WebCalc.find_by_name('rateFbrCoupleAmt')
if vA_liveWithSpouseAuxGrantFacility == 'Yes' &&  ssiCoupleResourceLimitExceed != 'Yes' then
  returnval = vA_CoupleAuxGrantFacilityRateAmt.to_f - Float(rateFbrCoupleAmt.calculate manager) + ( Float(rateAgPersonalAllowance.calculate manager) * 2)
 else
   0  
 end
"
@r_VA_CoupleProvAuxGrantPaymentAmt.save!

#WebVaCalc 38	160	r_VA_ProvAuxGrantPaymentAmt = IF vA_LiveInAuxGrantFacility = Y, THEN r_VA_IndivProvAuxGrantPaymentAmt, ELSE IF  vA_liveWithSpouseAuxGrantFacility = Y, THEN r_VA_CoupleProvAuxGrantPaymentAmt, ELSE 0.00	
#r_VA_ProvAuxGrantPaymentAmt
#=IF(E5="YES";E15;IF(E6="YES";E16;0))
#e5 vA_LiveInAuxGrantFacility
#15 r_VA_IndivProvAuxGrantPaymentAmt
#6 vA_liveWithSpouseAuxGrantFacility
#16 r_VA_CoupleProvAuxGrantPaymentAmt

@r_VA_ProvAuxGrantPaymentAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_ProvAuxGrantPaymentAmt')
@r_VA_ProvAuxGrantPaymentAmt.operation = "
vA_LiveInAuxGrantFacility           = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
r_VA_IndivProvAuxGrantPaymentAmt    = WebCalc.find_by_name('r_VA_IndivProvAuxGrantPaymentAmt')
r_VA_CoupleProvAuxGrantPaymentAmt   = WebCalc.find_by_name('r_VA_CoupleProvAuxGrantPaymentAmt')
vA_liveWithSpouseAuxGrantFacility   = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
if vA_LiveInAuxGrantFacility == 'Yes' then
  Float(r_VA_IndivProvAuxGrantPaymentAmt.calculate manager)
elsif vA_liveWithSpouseAuxGrantFacility == 'Yes' then
  Float(r_VA_CoupleProvAuxGrantPaymentAmt.calculate manager)
else
  0  
end
 "
@r_VA_ProvAuxGrantPaymentAmt.save!

#WebVaCalc 240	rTotCountIncFBRExceedAmt = IF r_SsiSpousalDeemCalcsUsed = FALSE, THEN r_TotalIncMinusBwePassNoSpouseDeemAmt - r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt, 
#ELSE r_TotalIncMinusBwePassSpouseDeemAmt - r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt (not < 0)	
#rTotCountIncFBRExceedAmt
#Nov 7 review
#240	rTotCountIncFBRExceedAmt = IF r_SsiSpousalDeemCalcsUsed = FALSE, THEN r_TotalIncMinusBwePassNoSpouseDeemAmt - r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt, 
#                                ELSE r_TotalIncMinusBwePassSpouseDeemAmt - r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt (not < 0)	
#rTotCountIncFBRExceedAmt
#=MAX(0;IF(E23=0;E19-E21;E20-E22))
#23 r_SsiSpousalDeemCalcsUsed
#19 r_TotalIncMinusBwePassNoSpouseDeemAmt
#21 r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt
#20 r_TotalIncMinusBwePassSpouseDeemAmt
#22 r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt

#58	240	rTotCountIncFBRExceedAmt 
#= IF r_SsiSpousalDeemCalcsUsed = FALSE, THEN r_TotalIncMinusBwePassNoSpouseDeemAmt - r_FbrNoSpouseDeemAmt, ELSE r_TotalIncMinusBwePassSpouseDeemAmt - r_FbrSpouseDeemAmt (not < 0)	rTotCountIncFBRExceedAmt
#=MAX(0;IF(E23=0;E19-E21;E20-E22))
#23 r_SsiSpousalDeemCalcsUsed
#19 r_TotalIncMinusBwePassNoSpouseDeemAmt
#21 r_FbrNoSpouseDeemAmt
#20 r_TotalIncMinusBwePassSpouseDeemAmt
#22 r_FbrSpouseDeemAmt
@rTotCountIncFBRExceedAmt  = WebCalc.find_or_create_by_name(:name => 'rTotCountIncFBRExceedAmt')
@rTotCountIncFBRExceedAmt.operation = "
r_SsiSpousalDeemCalcsUsed             = WebCalc.find_by_name('r_SsiSpousalDeemCalcsUsed')
r_TotalIncMinusBwePassNoSpouseDeemAmt = WebCalc.find_by_name('r_TotalIncMinusBwePassNoSpouseDeemAmt')
r_FbrNoSpouseDeemAmt                  = WebCalc.find_by_name('r_FbrNoSpouseDeemAmt')
r_TotalIncMinusBwePassSpouseDeemAmt   = WebCalc.find_by_name('r_TotalIncMinusBwePassSpouseDeemAmt')
r_FbrSpouseDeemAmt                    = WebCalc.find_by_name('r_FbrSpouseDeemAmt')
if (r_SsiSpousalDeemCalcsUsed.calculate manager) == false  then
  [(Float(r_TotalIncMinusBwePassNoSpouseDeemAmt.calculate manager) - Float(r_FbrNoSpouseDeemAmt.calculate manager)), 0].max
else
  [(Float(r_TotalIncMinusBwePassSpouseDeemAmt.calculate manager) - Float(r_FbrSpouseDeemAmt.calculate manager)), 0].max
end
"
@rTotCountIncFBRExceedAmt.save!

##xxz
#WebVaCalc 260	r_VA_AuxGrantPaymentAmt = r_VA_ProvAuxGrantPaymentAmt - rTotCountIncFBRExceedAmt (not < 0)	
#r_VA_AuxGrantPaymentAmt
@r_VA_AuxGrantPaymentAmt  = WebCalc.find_or_create_by_name(:name => 'r_VA_AuxGrantPaymentAmt')
@r_VA_AuxGrantPaymentAmt.operation = "
r_VA_ProvAuxGrantPaymentAmt = WebCalc.find_by_name('r_VA_ProvAuxGrantPaymentAmt')
rTotCountIncFBRExceedAmt    = WebCalc.find_by_name('rTotCountIncFBRExceedAmt')
[Float(r_VA_ProvAuxGrantPaymentAmt.calculate manager) - Float(rTotCountIncFBRExceedAmt.calculate manager), 0].max
"
@r_VA_AuxGrantPaymentAmt.save!

####
#update questions with text and display rules + validation?

@birthDate.text = 'What is your birthdate?  (MM/DD/YYYY)'
@birthDate.validation_message = "Click on the Calendar Icon to the right of the question or enter the Month/Day/Year, for example enter 01/21/1990 for January 21st, 1990."
@birthDate.save!
  
@sitDate.text = 'Enter date for  your current situation (MM/DD/YYYY).'
@sitDate.default_answer = "expression= Date.today.strftime('%m/%d/%Y')"
@sitDate.validation_message = "Click on the Calendar Icon to the right of the question or enter the Month/Day/Year, for example enter 01/15/2011 for January 15th, 2011."
@sitDate.save!

@state.text ='In what State do you live?'      
@state.display_rules ="WebCalc.find_by_name('rAge')
rAge = WebCalc.find_by_name('rAge')
rAge = rAge.calculate manager

if rAge >= 15 && rAge < 66 then
  true
else
  false
end"
      
@state.default_answer   = 'Virginia'   
@state.save!

@blind.text = "Are you legally blind according to SSA criteria?"
#@x.default_answer = ""
@blind.display_rules = "WebCalc.find_by_name('rAge')
rAge = WebCalc.find_by_name('rAge')
rAge = rAge.calculate manager
state = manager.get_answer_by_question_name('state')
if rAge >= 15 && rAge < 66  && state == 'Virginia' then 
  true
else
  false
end    
"
#@x.validation_rules = ""
#@x.validation_message= ""
@blind.save!
     
@disability.text = "Do you have a disability according to SSA criteria?"
@disability.default_answer = "Yes"
@disability.display_rules = "WebCalc.find_by_name('rAge')
rAge = WebCalc.find_by_name('rAge')
rAge = rAge.calculate manager
state = manager.get_answer_by_question_name('state')
blind = manager.get_answer_by_question_name('blind')
if rAge >= 15 && rAge < 66  && state == 'Virginia' && blind == 'No' then 
  true
else
  false
end    
"
#@x.validation_rules = ""
#@x.validation_message= ""
@disability.save!
     
@bPQY.text ="Do you have a current Benefits Planning Query (bPQY) report from SSA?"
@bPQY.default_answer = "Yes"
@bPQY.display_rules = "blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'"
#@bPQY.validation_rules = ""
#@bPQY.validation_message= ""
@bPQY.save!

@sitName.text = "Enter a brief name for this situation."
@sitName.default_answer = "expression=
if(@situation.blank? || @situation.situation_type==Situation::TYPES[:current_situation])
'Current Situation'
else
'What If {@situation.case.what_ifs.count}'
end"
@sitName.display_rules = "blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'
"
@sitName.save!

@vA_CityCounty.text ="In what Virginia City or County do you live?"
@vA_CityCounty.answer_choices = "counties and cities"
@vA_CityCounty.default_answer = "Henrico"
@vA_CityCounty.display_rules = "blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'
"
#@vA_CityCounty.validation_rules = ""
#@vA_CityCounty.validation_message= ""
@vA_CityCounty.save!
#counties and cities

@married.text = "Does (or would) SSA consider you married?"
@married.default_answer = "No"
@married.display_rules = "blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'"
#@married.validation_rules = ""
#@married.validation_message= ""
@married.save!

@liveWithSpouse.text = "Are you living with your spouse?"
@liveWithSpouse.default_answer = "No"
@liveWithSpouse.display_rules = "
married = manager.get_answer_by_question_name('married')
married == 'Yes'
"
#@liveWithSpouse.validation_rules = ""
#@liveWithSpouse.validation_message= ""
@liveWithSpouse.save!

@spouseBirthDate.text = "What is your spouse's birthdate? (MM/DD/YYYY)"
#@x.default_answer = ""
@spouseBirthDate.display_rules = "
married = manager.get_answer_by_question_name('married')
married == 'Yes'"
#@x.validation_rules = ""
#@x.validation_message= ""
@spouseBirthDate.save!

@spouseBlind.text = "Is your spouse legally blind according to SSA criteria?"
@spouseBlind.default_answer = "No"
@spouseBlind.display_rules = "
married = manager.get_answer_by_question_name('married')
married == 'Yes'"
#@x.validation_rules = ""
#@x.validation_message= ""
@spouseBlind.save!

@spouseDisability.text = "Does your spouse have a disability according to SSA criteria?"
@spouseDisability.default_answer = "No"
@spouseDisability.display_rules = "spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseBlind == 'No'"
#@x.validation_rules = ""
#@x.validation_message= ""
@spouseDisability.save!                                                          

@vA_CaidliveWithSpouseAndOwnParents.text = "Do you and your spouse live with your parents?"
@vA_CaidliveWithSpouseAndOwnParents.default_answer = "No"
@vA_CaidliveWithSpouseAndOwnParents.display_rules = "
unless manager.get_answer_by_question_name('sitDate').blank? || manager.get_answer_by_question_name('spouseBirthDate').blank?
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rAge = WebCalc.find_by_name('rAge')
  liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
  liveWithSpouse == 'Yes' && (rAge.calculate manager)  < 21
else
  false
end
"
#@x.validation_rules = ""
#@x.validation_message= ""
@vA_CaidliveWithSpouseAndOwnParents.save!                                                                

@vA_CaidliveWithSpouseAndSpouseParents.text = "Do you and your spouse live with your spouse's parents?"
@vA_CaidliveWithSpouseAndSpouseParents.default_answer = "No"
@vA_CaidliveWithSpouseAndSpouseParents.display_rules = "
unless manager.get_answer_by_question_name('sitDate').blank? || manager.get_answer_by_question_name('spouseBirthDate').blank?
  sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
  rSpouseAge = WebCalc.find_by_name('rSpouseAge')
  liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
  vA_CaidliveWithSpouseAndOwnParents = manager.get_answer_by_question_name('vA_CaidliveWithSpouseAndOwnParents')
  liveWithSpouse == 'Yes' &&  Float(rSpouseAge.calculate manager) < 21 && vA_CaidliveWithSpouseAndOwnParents != 'Yes'
else
  false
end
"
#@x.validation_rules = ""
#@x.validation_message= ""
@vA_CaidliveWithSpouseAndSpouseParents.save!                                                                

@liveWithSpouseAndOthers.text = "Do you and your spouse live with other adults?"
@liveWithSpouseAndOthers.default_answer = "No"
@liveWithSpouseAndOthers.display_rules = "liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
vA_CaidliveWithSpouseAndOwnParents = manager.get_answer_by_question_name('vA_CaidliveWithSpouseAndOwnParents')
vA_CaidliveWithSpouseAndSpouseParents = manager.get_answer_by_question_name('vA_CaidliveWithSpouseAndSpouseParents')
liveWithSpouse == 'Yes' && vA_CaidliveWithSpouseAndOwnParents != 'Yes' && vA_CaidliveWithSpouseAndSpouseParents != 'Yes' 
"
#@x.validation_rules = ""
#@x.validation_message= ""
@liveWithSpouseAndOthers.save!                                                                

#IF liveWithSpouseAndOthers = Y
@liveWithSpouseInFacility.text = "Do you and your spouse live in an assisted living facility, a group home, an institution or foster care?"
@liveWithSpouseInFacility.default_answer = "No"
@liveWithSpouseInFacility.display_rules = "
liveWithSpouseAndOthers = manager.get_answer_by_question_name('liveWithSpouseAndOthers')
liveWithSpouseAndOthers == 'Yes'"
#@x.validation_rules = ""
#@x.validation_message= ""
@liveWithSpouseInFacility.save!                                                                

#IF married = Y AND liveWithSpouse = N
@spouseLiveInFacility.text = "Does your spouse live in an assisted living facility, a group home, an institution or foster care?"
@spouseLiveInFacility.default_answer = "No"
@spouseLiveInFacility.display_rules = "
married = manager.get_answer_by_question_name('married')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
married == 'Yes' && liveWithSpouse == 'No'
"
#@x.validation_rules = ""
#@x.validation_message= ""
@spouseLiveInFacility.save!                                                                

#IF married = N OR liveWithSpouse = N
                                                             
@alone.text = "Do you live alone?"
@alone.default_answer = "Yes"
@alone.display_rules = "
married = manager.get_answer_by_question_name('married')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
married == 'No' || liveWithSpouse == 'No'
"
#@alone.validation_rules = ""
#@alone.validation_message= ""
@alone.save!                                                                                  

@liveWithParents.text = "Do you live with your parents?"
@liveWithParents.default_answer = "Yes"
@liveWithParents.display_rules = "
alone = manager.get_answer_by_question_name('alone')
married = manager.get_answer_by_question_name('married')
rAge = WebCalc.find_by_name('rAge')
married != 'Yes' && alone == 'No' && Float(rAge.calculate manager) < 22
"
#@liveWithParents.validation_rules = ""
#@liveWithParents.validation_message= ""
@liveWithParents.save!                                                                                  

#IF alone = N AND liveWithParents <> Y
@liveWithOthers.text = "Do you live with other adults?"
@liveWithOthers.default_answer = "Yes"
@liveWithOthers.display_rules = "
alone = manager.get_answer_by_question_name('alone')
liveWithParents = manager.get_answer_by_question_name('liveWithParents')
alone == 'No' && liveWithParents  != 'Yes'"
@liveWithOthers.validation_rules = ""
@liveWithOthers.validation_message= ""
@liveWithOthers.save!                                                                                  

#IF liveWithOthers = Y
#Nov 2 2011 edit
#IF liveWithOthers = Y
@liveInFacility.text = "Do you live in an assisted living facility, a group home, an institution or foster care?"
@liveInFacility.default_answer = "No"
@liveInFacility.display_rules = "
liveWithOthers = manager.get_answer_by_question_name('liveWithOthers')
liveWithOthers == 'Yes'"
#@liveInFacility.validation_rules = ""
#@liveInFacility.validation_message= ""
@liveInFacility.save!                                                                                  

@ssiGet.text = "Do you receive Supplemental Security Income (SSI)?"
@ssiGet.default_answer = "Yes"
@ssiGet.display_rules = "blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'"
#@ssiGet.validation_rules = ""
#@ssiGet.validation_message= ""
@ssiGet.save!                                                                                  

#If ssiGet = YES AND blind = NO
@ssiGetFinalDetermination.text = "Do you have a Final Determination letter from SSA saying that you are eligible for SSI?"
@ssiGetFinalDetermination.default_answer = "No"
@ssiGetFinalDetermination.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
blind = manager.get_answer_by_question_name('blind')
ssiGet == 'Yes' && blind == 'No'"
#@ssiGetFinalDetermination.validation_rules = ""
#@ssiGetFinalDetermination.validation_message= ""
@ssiGetFinalDetermination.save!                                                                                  

@ssiGet12MonthsSinceOnset.text = "Has it been at least 12 months since the onset of your disability as determined by SSA for SSI eligibility purposes?"
@ssiGet12MonthsSinceOnset.default_answer = "No"
#If ssiGetFinalDetermination = YES AND blind = NO
@ssiGet12MonthsSinceOnset.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
blind = manager.get_answer_by_question_name('blind')
ssiGet == 'Yes' && blind == 'No'
"
#@ssiGet12MonthsSinceOnset.validation_rules = ""
#@ssiGet12MonthsSinceOnset.validation_message= ""
@ssiGet12MonthsSinceOnset.save!                                                                                  

@vA_LiveInAuxGrantFacility.text = "Do you live in a facility or foster care supported by an Auxiliary Grant?"
@vA_LiveInAuxGrantFacility.workbook_order = "28.55"
@vA_LiveInAuxGrantFacility.default_answer = "No"
#IF liveInFacility = Y AND state = VA
@vA_LiveInAuxGrantFacility.display_rules = "
liveInFacility = manager.get_answer_by_question_name('liveInFacility')
state = manager.get_answer_by_question_name('state')
liveInFacility == 'Yes' && state == 'Virginia'"
#@vA_LiveInAuxGrantFacility.validation_rules = ""
#@vA_LiveInAuxGrantFacility.validation_message= ""
@vA_LiveInAuxGrantFacility.save!                                                                                  

@vA_liveWithSpouseAuxGrantFacility.text = "Do you and your spouse live in a facility or foster care supported by an Auxiliary Grant?"
@vA_liveWithSpouseAuxGrantFacility.workbook_order = "28.6"
@vA_liveWithSpouseAuxGrantFacility.default_answer = "No"
#IF liveWithSpouseInFacility = Y AND state = VA
@vA_liveWithSpouseAuxGrantFacility.display_rules = "
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
state = manager.get_answer_by_question_name('state')
liveWithSpouseInFacility == 'Yes' && state == 'Virginia'"
#@vA_liveWithSpouseAuxGrantFacility.validation_rules = ""
#@vA_liveWithSpouseAuxGrantFacility.validation_message= ""
@vA_liveWithSpouseAuxGrantFacility.save!                                                                                  

#Current adjustment needed
@ssiUserActualAmt.text = "What is the actual amount of your monthly SSI payment ? (Do not count payment amounts to other family members, if any.)"
@ssiUserActualAmt.default_answer = "0.00"
#If Current/What-If Button = Current AND ssiGet = Y
@ssiUserActualAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssiGet == 'Yes' && !manager.situation.what_if?
"
@ssiUserActualAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@ssiUserActualAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiUserActualAmt.save!                                                                                  
  
@caidGet.text = "Do you have any form of Medicaid coverage?"
@caidGet.default_answer = "expression= 
ssiGet = manager.get_answer_by_question_name('ssiGet')
if ssiGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end
"
#If blind = Y OR disability = Y
@caidGet.display_rules = "
blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'
"
#@caidGet.validation_rules = ""
#@caidGet.validation_message= ""
@caidGet.save!
#EXPRESSION:  If ssiGet = Y, THEN SSI Recipient, if (liveWithSpouseInFacility = Y OR liveInFacility = Y), THEN 300% SSI, ELSE 80% FPL
@vA_CaidGetCoveredGroup.text = "Virginia Medicaid: Under what Covered Group do you have Medicaid Coverage?"
@vA_CaidGetCoveredGroup.default_answer = "expression= 
ssiGet = manager.get_answer_by_question_name('ssiGet')
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
liveInFacility = manager.get_answer_by_question_name('liveInFacility')
if ssiGet == 'Yes' then
  answer = 'SSI Recipient'
elsif (liveWithSpouseInFacility == 'Yes' || liveInFacility == 'Yes') then
  answer = '300% SSI'
else 
  answer = '80% FPL'
end
"
@vA_CaidGetCoveredGroup.display_rules = "
state = manager.get_answer_by_question_name('state')
caidGet = manager.get_answer_by_question_name('caidGet')
state == 'Virginia' && caidGet == 'Yes'
"
#@vA_CaidGetCoveredGroup.validation_rules = ""
#@vA_CaidGetCoveredGroup.validation_message= ""
@vA_CaidGetCoveredGroup.save!

@vA_CaidInstitutionServicesGet.text = "Do you receive Institutional Care Medicaid Services?"
@vA_CaidInstitutionServicesGet.default_answer = "No"
#If state = VA AND caidGet = Y AND vA_CaidGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) 
#AND (liveWithSpouseInFacility = Y OR liveInFacility = Y) 
#AND vA_LiveInAuxGrantFacility <> Y AND vA_liveWithSpouseAuxGrantFacility <> Y
@vA_CaidInstitutionServicesGet.display_rules = "
state = manager.get_answer_by_question_name('state')
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
liveInFacility = manager.get_answer_by_question_name('liveInFacility')
vA_LiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
vA_liveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
state == 'Virginia' && caidGet == 'Yes' && vA_CaidGetCoveredGroup != 'QMB' && vA_CaidGetCoveredGroup != 'SLMB' && vA_CaidGetCoveredGroup != 'QI' && vA_CaidGetCoveredGroup != 'QDWI'  &&
(liveWithSpouseInFacility == 'Yes' ||  liveInFacility == 'Yes') && vA_LiveInAuxGrantFacility != 'Yes' && vA_liveWithSpouseAuxGrantFacility != 'Yes'"
#@vA_CaidInstitutionServicesGet.validation_rules = ""
#@vA_CaidInstitutionServicesGet.validation_message= ""
@vA_CaidInstitutionServicesGet.save!

@vA_CaidWaiverServicesGet.text = "Do you receive Home and Community-based Care (CBC) Waiver Services?"
@vA_CaidWaiverServicesGet.default_answer = "No"
#If state = Virginia AND caidGet = Y AND vA_CaidGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) 
#AND liveWithSpouseInFacility <> Y AND liveInFacility <> Y
@vA_CaidWaiverServicesGet.display_rules = "
state = manager.get_answer_by_question_name('state')
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
liveInFacility = manager.get_answer_by_question_name('liveInFacility')
state == 'Virginia' && caidGet == 'Yes' && vA_CaidGetCoveredGroup != 'QMB' && vA_CaidGetCoveredGroup != 'SLMB' && vA_CaidGetCoveredGroup != 'QI' && vA_CaidGetCoveredGroup != 'QDWI'  &&
liveWithSpouseInFacility != 'Yes' &&  liveInFacility != 'Yes'"
#@vA_CaidWaiverServicesGet.validation_rules = ""
#@vA_CaidWaiverServicesGet.validation_message= ""
@vA_CaidWaiverServicesGet.save!

@caidApply.default_answer = "Yes"     
@caidApply.text = "Are you applying for Medicaid coverage?"
#IF caidGet = N
@caidApply.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidGet == 'No'
"
#@caidApply.validation_rules = ""
#@caidApply.validation_message= ""
@caidApply.save!                                                       

#63	35.1	Are you applying for MEDICAID WORKS?	vA_CaidSsiRecipientApplyWorks
@vA_CaidSsiRecipientApplyWorks.text = "Are you applying for MEDICAID WORKS?"
@vA_CaidSsiRecipientApplyWorks.default_answer = "No"
#IF vA_CaidGetCoveredGroup = SSI Recipient OR 1619b (SSI Medicaid while working)

@vA_CaidSsiRecipientApplyWorks.display_rules = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidGetCoveredGroup == 'SSI Recipient' ||  vA_CaidGetCoveredGroup == '1619b (SSI Medicaid while working)'"
#@vA_CaidApplyCoveredGroup.validation_rules = ""
#@vA_CaidApplyCoveredGroup.validation_message= ""
@vA_CaidSsiRecipientApplyWorks.save!

@vA_CaidApplyCoveredGroup.text = "Under what Virginia Covered Group are you applying for Medicaid coverage?"
@vA_CaidApplyCoveredGroup.default_answer = "80% FPL"
@vA_CaidApplyCoveredGroup.display_rules = "
state = manager.get_answer_by_question_name('state')
caidApply = manager.get_answer_by_question_name('caidApply')
state == 'Virginia' && caidApply == 'Yes'"
#@vA_CaidApplyCoveredGroup.validation_rules = ""
#@vA_CaidApplyCoveredGroup.validation_message= ""
@vA_CaidApplyCoveredGroup.save!

@vA_CaidInstitutionServicesApply.text = "Are you applying for Institutional Care Medicaid Services?"
@vA_CaidInstitutionServicesApply.default_answer = "No"
#If state = Virginia AND (caidGet = Y OR caidApply = YES) AND ((vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) <> (QMB OR SLMB OR QI OR QDWI)) 
# AND vA_CaidInstitutionServicesGet <> YES
@vA_CaidInstitutionServicesApply.display_rules = "
state = manager.get_answer_by_question_name('state')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidInstitutionServicesGet')
state == 'Virginia' && (caidGet == 'Yes' || caidApply == 'Yes') && vA_CaidGetCoveredGroup != 'QMB' && vA_CaidGetCoveredGroup != 'SLMB' && vA_CaidGetCoveredGroup != 'QI' && vA_CaidGetCoveredGroup != 'QDWI'  &&
vA_CaidApplyCoveredGroup != 'QMB' && vA_CaidApplyCoveredGroup != 'SLMB' && vA_CaidApplyCoveredGroup != 'QI' && vA_CaidApplyCoveredGroup != 'QDWI'  &&
vA_CaidInstitutionServicesGet != 'Yes'"
#@vA_CaidInstitutionServicesApply.validation_rules = ""
#@vA_CaidInstitutionServicesApply.validation_message= ""
@vA_CaidInstitutionServicesApply.save!

@vA_CaidWaiverServicesApply.text = "Are you applying for Home and Community-based Care (CBC) Waiver Services?"
@vA_CaidWaiverServicesApply.default_answer = "No"
#If state = Virginia AND (caidGet = Y OR caidApply = YES) AND ((vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) <> (QMB OR SLMB OR QI OR QDWI)) 
#AND vA_CaidWaiverServicesGet <> YES AND vA_CaidInstitutionServicesApply <> YES
@vA_CaidWaiverServicesApply.display_rules = "state = manager.get_answer_by_question_name('state')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidWaiverServicesGet')
vA_CaidInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidInstitutionServicesApply')
state == 'Virginia' && (caidGet == 'Yes' || caidApply == 'Yes' ) && 
vA_CaidGetCoveredGroup != 'QMB' && vA_CaidGetCoveredGroup != 'SLMB' && vA_CaidGetCoveredGroup != 'QI' && vA_CaidGetCoveredGroup != 'QDWI'  &&
vA_CaidApplyCoveredGroup != 'QMB' && vA_CaidApplyCoveredGroup != 'SLMB' && vA_CaidApplyCoveredGroup != 'QI' && vA_CaidApplyCoveredGroup != 'QDWI'  &&
vA_CaidWaiverServicesGet != 'Yes' && vA_CaidInstitutionServicesApply != 'Yes'"
#@vA_CaidWaiverServicesApply.validation_rules = ""
#@vA_CaidWaiverServicesApply.validation_message= ""
@vA_CaidWaiverServicesApply.save!

@spouseIsCaidCommunitySpouse.text = 'Is your spouse considered for Medicaid purposes to be a "community spouse"?'
@spouseIsCaidCommunitySpouse.default_answer = "No"
#If married = Y AND (vA_CaidInstitutionServicesGet = Y OR vA_CaidWaiverServicesGet = Y OR vA_CaidInstitutionServicesApply = Y 
#OR vA_CaidWaiverServicesApply = Y)
@spouseIsCaidCommunitySpouse.display_rules = "
married = manager.get_answer_by_question_name('married')
vA_CaidInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidInstitutionServicesGet')
vA_CaidWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidWaiverServicesGet')
vA_CaidInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidInstitutionServicesApply')
vA_CaidWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidWaiverServicesApply')
(married == 'Yes' && (vA_CaidInstitutionServicesGet == 'Yes' || vA_CaidWaiverServicesGet == 'Yes' || vA_CaidInstitutionServicesApply == 'Yes' || vA_CaidWaiverServicesApply == 'Yes'))"
#@spouseIsCaidCommunitySpouse.validation_rules = ""
#@spouseIsCaidCommunitySpouse.validation_message= ""
@spouseIsCaidCommunitySpouse.save!

#new question added Nov 8 2011
#58	35.6	Are you getting or applying for Medicaid as a Protected Adult Disabled Child because you lost SSI because you began receiving SSDI or an increase in SSDI?	vA_CaidDacLoseSsi
@vA_CaidDacLoseSsi.text = 'Are you getting or applying for Medicaid as a Protected Adult Disabled Child because you lost SSI because you began receiving SSDI or an increase in SSDI?'
@vA_CaidDacLoseSsi.default_answer = "Yes"

#IF vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = Protected Adult Disabled Child AND ssiGet = NO
#=IF(AND(OR(L41="Protected AdultDisabled Child";L45="Protected AdultDisabled Child");L33="NO");"Appear";"no")
#41 vA_CaidGetCoveredGroup
#45 vA_CaidApplyCoveredGroup
#33 ssiGet
@vA_CaidDacLoseSsi.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
(ssiGet == 'Yes' && (vA_CaidGetCoveredGroup == 'Protected Adult Disabled Child' || vA_CaidApplyCoveredGroup == 'Protected Adult Disabled Child'))"
#spouseIsCaidCommunitySpouse.validation_rules = ""
#spouseIsCaidCommunitySpouse.validation_message= ""
@vA_CaidDacLoseSsi.save!

@ssdiGet.text = "Do you receive Social Security Disability Insurance (SSDI)?"
@ssdiGet.default_answer = "Yes"
#If blind = Y OR disability = Y
@ssdiGet.display_rules = "
blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
blind == 'Yes' || disability == 'Yes'
"
#@ssdiGet.validation_rules = ""
#@ssdiGet.validation_message= ""
@ssdiGet.save!

@ssdiGet12MonthsSinceOnset.text = "Has it been at least 12 months since the onset of your disability as determined by SSA for SSDI eligibility purposes?"
@ssdiGet12MonthsSinceOnset.default_answer = "No"
#If ssdiGet = Y
@ssdiGet12MonthsSinceOnset.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiGet == 'Yes'
"
#@ssdiGet12MonthsSinceOnset.validation_rules = ""
#@ssdiGet12MonthsSinceOnset.validation_message= ""
@ssdiGet12MonthsSinceOnset.save!

@ssdiEarnRec.text = "Are your SSDI benefits based on your own earnings record or on someone else's?"
@ssdiEarnRec.default_answer = "Self"
#If ssdiGet = Y
@ssdiEarnRec.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiGet == 'Yes'
"
#@ssdiEarnRec.validation_rules = ""
#@ssdiEarnRec.validation_message= ""
@ssdiEarnRec.save!                                             

@ssdiEarnRecDependents.text = "Do any dependents receive SSDI benefits based on your earnings record?"
@ssdiEarnRecDependents.default_answer = "No"
#If ssdiEarnRec = Self
@ssdiEarnRecDependents.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiGet == 'Yes' && ssdiEarnRec == 'Self'
"
#@ssdiEarnRecDependents.validation_rules = ""
#@ssdiEarnRecDependents.validation_message= ""
@ssdiEarnRecDependents.save!                                             

@ssdiDac.text = "Are you a Disabled Adult Child according to SSA?"
@ssdiDac.default_answer = "No"
#If ssdiEarnRec = Other
@ssdiDac.display_rules = "
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiEarnRec == 'Other'
"
#@ssdiDac.validation_rules = ""
#@ssdiDac.validation_message= ""
@ssdiDac.save!                                             

@blindOnsetDate.text = "What is the onset date of your blindness according to SSA? (MM/DD/YYYY)"
@blindOnsetDate.default_answer = "expression= 
birthDate = manager.get_answer_by_question_name('birthDate')
"
#If ssdiGet = Y AND blind = Y AND rAge > 54 yrs AND < 65 yrs)
@blindOnsetDate.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
blind = manager.get_answer_by_question_name('blind')
rAge = WebCalc.find_by_name('rAge')
rAge = rAge.calculate manager
if rAge > 54 && rAge < 65 && blind == 'Yes' && ssdiGet == 'Yes' then
  true
else
 false
end
"
#@blindOnsetDate.validation_rules = ""
#@blindOnsetDate.validation_message= ""
@blindOnsetDate.save!                                             

@blindSkillsBefore55.text = "Are your work skills and abilities different now than before age 55?"
@blindSkillsBefore55.default_answer = "No"
#If ssdiGet = Y AND blind = Y AND (sitDate - birthDate > 54 AND < 65) AND (blindOnsetDate - birthDate <= 55 yrs)
@blindSkillsBefore55.display_rules = "
unless manager.get_answer_by_question_name('birthDate').blank? ||manager.get_answer_by_question_name('blindOnsetDate').blank?
  ssdiGet = manager.get_answer_by_question_name('ssdiGet')
  blind = manager.get_answer_by_question_name('blind')
  blindOnsetDate = Date.strptime(manager.get_answer_by_question_name('blindOnsetDate'), '%m/%d/%Y')
  birthDate = Date.strptime(manager.get_answer_by_question_name('birthDate'), '%m/%d/%Y')
  rAge = WebCalc.find_by_name('rAge')
  rAge = Float(rAge.calculate manager)
 
 #I'll live with calculating onset age every time  
  onsetAge = (blindOnsetDate.year - birthDate.year)
  subyear= 0
  if birthDate.month > blindOnsetDate.month then
    subyear = 1
  elsif birthDate.month == blindOnsetDate.month then
    if Birthdate.day > blindOnsetDate.day  then
      subyear = 1
    end
  end
  onsetAge = OnsetAge - subyear
    
  rAge > 54 && rAge < 65 && onsetAge <= 55 && blind == 'Yes' && ssdiGet == 'Yes'
  
else
  false
end
"
#@blindSkillsBefore55.validation_rules = ""
#@blindSkillsBefore55.validation_message= ""
@blindSkillsBefore55.save!                                             

@blindSkillsBeforeOnset.text = "Are your work skills and abilities different now than before the onset date of your blindness?"
@blindSkillsBeforeOnset.default_answer = "No"
#If ssdiGet = Y AND blind = Y AND (sitDate - birthDate > 54 AND < 65) AND (blindOnsetDate - birthDate > 55 yrs)
@blindSkillsBeforeOnset.display_rules = "
unless manager.get_answer_by_question_name('birthDate').blank? || manager.get_answer_by_question_name('blindOnsetDate').blank? 
  ssdiGet = manager.get_answer_by_question_name('ssdiGet')
  blind = manager.get_answer_by_question_name('blind')
  
  birthDate = Date.strptime(manager.get_answer_by_question_name('birthDate'), '%m/%d/%Y')
  blindOnsetDate = Date.strptime(manager.get_answer_by_question_name('blindOnsetDate'), '%m/%d/%Y')
  rAge = WebCalc.find_by_name('rAge')
  rAge = Float(rAge.calculate manager)
      
  onsetAge = (blindOnsetDate.year - birthDate.year)
  subyear= 0
  if birthDate.month > blindOnsetDate.month then
    subyear = 1
  elsif birthDate.month == blindOnsetDate.month then
    if Birthdate.day > blindOnsetDate.day  then
      subyear = 1
    end
  end
  onsetAge = onsetAge - subyear
    
  if rAge > 54 && rAge < 65 && onsetAge > 55 && blind == 'Yes' && ssdiGet == 'Yes' then
    true
  else
    false
  end
  
else
  false
end
"
#@blindSkillsBeforeOnset.validation_rules = ""
#@blindSkillsBeforeOnset.validation_message= ""
@blindSkillsBeforeOnset.save!                                             

@ssdiActualAmt.text = "What is the actual amount of the monthly SSDI payment that you receive? (Do not count payment amounts to other family members, if any.)"
@ssdiActualAmt.default_answer = "0.00"
#If Current/What-If Button = Current AND ssdiGet = Y
@ssdiActualAmt.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiGet == 'Yes' && !manager.situation.what_if?
"
@ssdiActualAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@ssdiActualAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssdiActualAmt.save!                                             

@careAGet.text = "Do you have Medicare Part A (Hospitalization Insurance)?"
#EXPRESSION: If ssdiGet = Y, THEN YES, ELSE NO
@careAGet.default_answer = "expression= 
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
if ssdiGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end"
#If ssiGet = Y OR ssdiGet = Y OR caidGet = Y OR caidApply = Y
@careAGet.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
ssiGet ==  'Yes' || ssdiGet == 'Yes' || caidGet ==  'Yes' || caidApply == 'Yes' 
"
#@careAGet.validation_rules = ""
#@careAGet.validation_message= ""
@careAGet.save!                                             

@careBGet.text = "Do you have Medicare Part B (Medical Insurance)?"
#EXPRESSION: If ssdiGet = Y, THEN YES, ELSE NO
@careBGet.default_answer = "expression= 
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
if ssdiGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end"
#If careAGet = Y
@careBGet.display_rules = "
careAGet = manager.get_answer_by_question_name('careAGet')
careAGet ==  'Yes'
"
#@careBGet.validation_rules = ""
#@careBGet.validation_message= ""
@careBGet.save!                                             
                                                            
@careBDeduct.text = "Is Your Medicare Part B Premium Deducted from your SSDI Payment?"
#EXPRESSION: If caidGet = Y, THEN NO, ELSE YES
@careBDeduct.default_answer = "expression= 
caidGet = manager.get_answer_by_question_name('caidGet')
if caidGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end"
#If ssdiGet = Y AND careBGet = Y
@careBDeduct.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
careBGet = manager.get_answer_by_question_name('careBGet')
ssdiGet ==  'Yes' && careBGet ==  'Yes' 
"
#@careBDeduct.validation_rules = ""
#@careBDeduct.validation_message= ""
@careBDeduct.save!                                             

@careBPaySelf.text = "Are you paying your Part B Premium yourself out-of-pocket?"
@careBPaySelf.default_answer = "Yes"
#IF careBDeduct = N
@careBPaySelf.display_rules = "
careBDeduct = manager.get_answer_by_question_name('careBDeduct')
careBDeduct ==  'No'
"
#@careBPaySelf.validation_rules = ""
#@careBPaySelf.validation_message= ""
@careBPaySelf.save!                                             

@careBPremiumAmt.text = "How much is your Medicare Part B Premium?"
#EXPRESSION: RateCareBPremium for sitDate
@careBPremiumAmt.default_answer = "96.40"
#IF careBGet = Y
@careBPremiumAmt.display_rules = "
careBGet = manager.get_answer_by_question_name('careBGet')
careBGet ==  'Yes'
"
#@careBPremiumAmt.validation_rules = ""
#@careBPremiumAmt.validation_message= ""
@careBPremiumAmt.save!                                             

@spouseSsiGet.text = "Spouse SSI: Does your spouse receive SSI?"
@spouseSsiGet.default_answer = "No"
#If married = Y AND (spouseBlind = Y OR spouseDisability = Y
@spouseSsiGet.display_rules = "
married = manager.get_answer_by_question_name('married')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseDisability = manager.get_answer_by_question_name('spouseDisability')
married ==  'Yes' && (spouseBlind ==  'Yes' || spouseDisability ==  'Yes')
"
#@spouseSsiGet.validation_rules = ""
#@spouseSsiGet.validation_message= ""
@spouseSsiGet.save!                                             
                                                            
@vA_SpouseLiveInAuxGrantFacility.text = "Does your spouse live in a facility or foster care supported by an Auxiliary Grant?"
@vA_SpouseLiveInAuxGrantFacility.default_answer = "No"
#If spouseLiveInFacility = Y AND ssiGet = Y AND caidSpouseGet = Y AND state = VA
@vA_SpouseLiveInAuxGrantFacility.display_rules = "
spouseLiveInFacility = manager.get_answer_by_question_name('spouseLiveInFacility')
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
state = manager.get_answer_by_question_name('state')
spouseLiveInFacility == 'Yes' && ssiGet ==  'Yes' && caidSpouseGet == 'Yes' && state == 'Virginia'"
#@vA_SpouseLiveInAuxGrantFacility.validation_rules = ""
#@vA_SpouseLiveInAuxGrantFacility.validation_message= ""
@vA_SpouseLiveInAuxGrantFacility.save!                                             

@ssiSpouseActualAmt.text = "What is the actual monthly amount of the SSI payment that your spouse receives?"
@ssiSpouseActualAmt.default_answer = "0.00"
#If Current/What-If Button = Current AND spouseSsiGet = Y AND SsiGet = Y
@ssiSpouseActualAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiGet ==  'Yes' && spouseSsiGet ==  'Yes' && !manager.situation.what_if?"
@ssiSpouseActualAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiSpouseActualAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiSpouseActualAmt.save!                                             

@caidSpouseGet.text = "Is your spouse currently covered by some type of Medicaid?"
@caidSpouseGet.default_answer = "No"
#If married = Y AND (spouseBlind = Y OR spouseDisability = Y
@caidSpouseGet.display_rules = "
married = manager.get_answer_by_question_name('married')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseDisability = manager.get_answer_by_question_name('spouseDisability')
married == 'Yes' && (spouseBlind ==  'Yes' || spouseDisability ==  'Yes')
"
#@caidSpouseGet.validation_rules = ""
#@caidSpouseGet.validation_message= ""
@caidSpouseGet.save!                                             

@vA_caidSpouseGetCoveredGroup.text = "Under what Covered Group does your spouse have Medicaid Coverage?"
#IF spouseSsiGet = Y THEN SSI Recipient, ELSE 80% FPL
@vA_caidSpouseGetCoveredGroup.default_answer = "expression= 
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
if spouseSsiGet == 'Yes' then
  answer = 'SSI Recipient'
else
  answer = '80% FPL'
end"
#If caidSpouseGet = Y AND (caidGet = Y OR caidApply = Y)  Bob has a Sept 23 2011 email to Ruth, Does not believe workbook
@vA_caidSpouseGetCoveredGroup.display_rules = "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidSpouseGet == 'Yes' && (caidGet == 'Yes' || caidApply ==  'Yes')
"
#@vA_caidSpouseGetCoveredGroup.validation_rules = ""
#@vA_caidSpouseGetCoveredGroup.validation_message= ""
@vA_caidSpouseGetCoveredGroup.save!                                             

@vA_CaidSpouseInstitutionServicesGet.text = "Does your spouse receive Institutional Care Medicaid Services?"
@vA_CaidSpouseInstitutionServicesGet.default_answer = "No"
#If state = Virginia AND caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) 
#AND (liveWithSpouseInFacility = Y OR spouseLiveInFacility = Y) AND vA_SpouseLiveInAuxGrantFacility <> Y AND vA_liveWithSpouseAuxGrantFacility <> Y
#Revised on 12/22/2011 based on Wb 64
#If state = Virginia AND caidSpouseGet = Y AND (caidGet = Y OR caidApply = Y) AND vA_caidSpouseGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) AND (liveWithSpouseInFacility = Y OR spouseLiveInFacility = Y) AND vA_SpouseLiveInAuxGrantFacility <> Y AND vA_liveWithSpouseAuxGrantFacility <> Y
@vA_CaidSpouseInstitutionServicesGet.display_rules = "
state = manager.get_answer_by_question_name('state')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
spouseLiveInFacility = manager.get_answer_by_question_name('spouseLiveInFacility')
vA_SpouseLiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_SpouseLiveInAuxGrantFacility')
vA_liveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
(state == 'Virginia' && caidSpouseGet == 'Yes' && (caidGet == 'Yes' || caidApply == 'Yes')  && 
vA_caidSpouseGetCoveredGroup != 'QMB' && vA_caidSpouseGetCoveredGroup != 'SLMB' && vA_caidSpouseGetCoveredGroup != 'QI' && vA_caidSpouseGetCoveredGroup != 'QDWI'  &&
(liveWithSpouseInFacility == 'Yes' || spouseLiveInFacility == 'Yes') && vA_SpouseLiveInAuxGrantFacility != 'Yes' && vA_liveWithSpouseAuxGrantFacility != 'Yes')"
#@vA_CaidSpouseInstitutionServicesGet.validation_rules = ""
#@vA_CaidSpouseInstitutionServicesGet.validation_message= ""
@vA_CaidSpouseInstitutionServicesGet.save!                                             

@vA_CaidSpouseWaiverServicesGet.text = "Does your spouse receive Home and Community-based Care (CBC) Waiver Services?"
@vA_CaidSpouseWaiverServicesGet.default_answer = "No"
#If state = Virginia AND caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) 
#AND liveWithSpouseInFacility <> Y AND spouseLiveInFacility <> Y
#revsied on 12/22/2011
#If state = Virginia AND caidSpouseGet = Y AND (caidGet = Y OR caidApply = Y) AND vA_caidSpouseGetCoveredGroup <> (QMB OR SLMB OR QI OR QDWI) AND liveWithSpouseInFacility <> Y AND spouseLiveInFacility <> Y
@vA_CaidSpouseWaiverServicesGet.display_rules = "
state = manager.get_answer_by_question_name('state')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
liveWithSpouseInFacility = manager.get_answer_by_question_name('liveWithSpouseInFacility')
spouseLiveInFacility = manager.get_answer_by_question_name('spouseLiveInFacility')
vA_SpouseLiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_SpouseLiveInAuxGrantFacility')
vA_liveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
(state == 'Virginia' && caidSpouseGet == 'Yes' && (caidGet == 'Yes' || caidApply == 'Yes')  && 
vA_caidSpouseGetCoveredGroup != 'QMB' && vA_caidSpouseGetCoveredGroup != 'SLMB' && vA_caidSpouseGetCoveredGroup != 'QI' && vA_caidSpouseGetCoveredGroup != 'QDWI'  &&
liveWithSpouseInFacility != 'Yes' && spouseLiveInFacility != 'Yes')"
#@vA_CaidSpouseWaiverServicesGet.validation_rules = ""
#@vA_CaidSpouseWaiverServicesGet.validation_message= ""
@vA_CaidSpouseWaiverServicesGet.save!

@caidSpouseApply.text = "Is your spouse currently applying for some type of Medicaid?"
@caidSpouseApply.default_answer = "No"
#If caidSpouseGet = N
@caidSpouseApply.display_rules = "
married = manager.get_answer_by_question_name('married')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseDisability = manager.get_answer_by_question_name('spouseDisability')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
married == 'Yes' && (spouseBlind ==  'Yes' || spouseDisability ==  'Yes') && caidSpouseGet == 'No'
"
#@caidSpouseApply.validation_rules = ""
#@caidSpouseApply.validation_message= ""
@caidSpouseApply.save!                                                           

@vA_caidSpouseApplyCoveredGroup.text = "For what Covered Group is your spouse applying for Medicaid Coverage?"
@vA_caidSpouseApplyCoveredGroup.default_answer = "80% FPL"
#If caidSpouseApply = Y AND (caidGet = Y OR caidApply = Y)
#note this is under review Email to Ruth on 9/27/2011
@vA_caidSpouseApplyCoveredGroup.display_rules = "
married = manager.get_answer_by_question_name('married')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseDisability = manager.get_answer_by_question_name('spouseDisability')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
married == 'Yes' && (spouseBlind ==  'Yes' || spouseDisability ==  'Yes') && caidSpouseGet == 'No'  && caidGet == 'Yes' &&  caidApply == 'Yes'"
#@vA_caidSpouseApplyCoveredGroup.validation_rules = ""
#@vA_caidSpouseApplyCoveredGroup.validation_message= ""
@vA_caidSpouseApplyCoveredGroup.save!

#added on 12/2/2011
#63 64	56.1	Is your spouse applying for MEDICAID WORKS?	vA_CaidSpouseSsiRecipientApplyWorks
@vA_CaidSpouseSsiRecipientApplyWorks.text = "Is your spouse applying for MEDICAID WORKS?"
@vA_CaidSpouseSsiRecipientApplyWorks.default_answer = "No"
#IF vA_SpouseLiveInAuxGrantFacility = SSI Recipient OR 1619b (SSI Medicaid while working)
#vA_caidSpouseGetCoveredGroup
#Email sent to Ruth on 12/22 to discuss adding caidget & caid apply phrase
@vA_CaidSpouseSsiRecipientApplyWorks.display_rules = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseGetCoveredGroup == 'SSI Recipient' || vA_caidSpouseGetCoveredGroup == '1619b (SSI Medicaid while working)' 
"
#@caidSpouseApply.validation_rules = ""
#@caidSpouseApply.validation_message= ""
@vA_CaidSpouseSsiRecipientApplyWorks.save!

@vA_CaidSpouseInstitutionServicesApply.text = "Is your spouse applying for Institutional Care Medicaid Services?"
@vA_CaidSpouseInstitutionServicesApply.default_answer = "No"
#If state = VA AND (caidSpouseGet = YES OR caidSpouseApply = YES) 
#AND ((vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) <> (QMB OR SLMB OR QI OR QDWI)) 
#AND vA_CaidSpouseInstitutionServicesGet <> YES
@vA_CaidSpouseInstitutionServicesApply.display_rules = "
state = manager.get_answer_by_question_name('state')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesGet')
(state == 'Virginia' && (caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') &&
vA_caidSpouseGetCoveredGroup != 'QMB' && vA_caidSpouseGetCoveredGroup != 'SLMB' && vA_caidSpouseGetCoveredGroup != 'QI' && vA_caidSpouseGetCoveredGroup != 'QDWI'  &&
vA_caidSpouseApplyCoveredGroup != 'QMB' && vA_caidSpouseApplyCoveredGroup != 'SLMB' && vA_caidSpouseApplyCoveredGroup != 'QI' && vA_caidSpouseApplyCoveredGroup != 'QDWI'  &&
vA_CaidSpouseInstitutionServicesGet != 'Yes')"
#@vA_CaidSpouseInstitutionServicesApply.validation_rules = ""
#@vA_CaidSpouseInstitutionServicesApply.validation_message= ""
@vA_CaidSpouseInstitutionServicesApply.save!

@vA_CaidSpouseWaiverServicesApply.text = "Is your spouse applying for Home and Community-based Care (CBC) Waiver Services?"
@vA_CaidSpouseWaiverServicesApply.default_answer = "No"
#If state = VA AND (caidSpouseGet = YES OR caidSpouseApply = YES) 
#AND ((vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup) <> (QMB OR SLMB OR QI OR QDWI)) 
#AND vA_CaidSpouseWaiverServicesGet <> YES AND vA_CaidSpouseInstitutionServicesApply <> YES
@vA_CaidSpouseWaiverServicesApply.display_rules = "
state = manager.get_answer_by_question_name('state')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesGet')
vA_CaidSpouseInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesApply')
(state == 'Virginia' && (caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') &&
vA_caidSpouseGetCoveredGroup != 'QMB' && vA_caidSpouseGetCoveredGroup != 'SLMB' && vA_caidSpouseGetCoveredGroup != 'QI' && vA_caidSpouseGetCoveredGroup != 'QDWI'  &&
vA_caidSpouseApplyCoveredGroup != 'QMB' && vA_caidSpouseApplyCoveredGroup != 'SLMB' && vA_caidSpouseApplyCoveredGroup != 'QI' && vA_caidSpouseApplyCoveredGroup != 'QDWI'  &&
vA_CaidSpouseWaiverServicesGet != 'Yes' && vA_CaidSpouseInstitutionServicesApply != 'Yes')"
#@vA_CaidSpouseWaiverServicesApply.validation_rules = ""
#@vA_CaidSpouseWaiverServicesApply.validation_message= ""
@vA_CaidSpouseWaiverServicesApply.save!

@userIsCaidCommunitySpouse.text = 'Are you considered for Medicaid purposes to be a "community spouse"?'
@userIsCaidCommunitySpouse.default_answer = "No"
#If married = Y 
#AND (vA_CaidSpouseInstitutionServicesGet = Y OR vA_CaidSpouseWaiverServicesGet = Y 
#OR vA_CaidSpouseInstitutionServicesApply = Y OR vA_CaidSpouseWaiverServicesApply = Y)
@userIsCaidCommunitySpouse.display_rules = "
state = manager.get_answer_by_question_name('state')
married = manager.get_answer_by_question_name('married')
vA_CaidSpouseInstitutionServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesGet')
vA_CaidSpouseWaiverServicesGet = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesGet')
vA_CaidSpouseInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesApply')
vA_CaidSpouseWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesApply')
(state == 'Virginia' && married == 'Yes' && (vA_CaidSpouseInstitutionServicesGet == 'Yes' || vA_CaidSpouseWaiverServicesGet == 'Yes' || 
vA_CaidSpouseInstitutionServicesApply == 'Yes' || vA_CaidSpouseWaiverServicesApply == 'Yes'))"
#@userIsCaidCommunitySpouse.validation_rules = ""
#@userIsCaidCommunitySpouse.validation_message= ""
@userIsCaidCommunitySpouse.save!

@spouseSsdiGet.text = "Spouse SSDI: Does your spouse receive SSDI?"
@spouseSsdiGet.default_answer = "No"
#IF spouseSsiGet = Y OR caidSpouseGet = Y OR caidSpouseApply = Y
@spouseSsdiGet.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
spouseSsiGet ==  'Yes' || caidSpouseGet ==  'Yes' || caidSpouseApply ==  'Yes'
"
#@spouseSsdiGet.validation_rules = ""
#@spouseSsdiGet.validation_message= ""
@spouseSsdiGet.save!

@spouseSsdiEarnRec.text = "Are your spouse's SSDI benefits based on your spouse's own earnings record (Self) or on someone else's (Other)?"
@spouseSsdiEarnRec.default_answer = "Self"
#IF spouseSsdiGet = Y
@spouseSsdiEarnRec.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiGet ==  'Yes'
"
#@spouseSsdiEarnRec.validation_rules = ""
#@spouseSsdiEarnRec.validation_message= ""
@spouseSsdiEarnRec.save!

@spouseSsdiEarnRecDependents.text = "Do any dependents receive SSDI benefits based on your spouse's earnings record?"
@spouseSsdiEarnRecDependents.default_answer = "No"
#IF spouseSsdiEarnRec = Self
@spouseSsdiEarnRecDependents.display_rules = "
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseSsdiEarnRec ==  'Self'
"
#@spouseSsdiEarnRecDependents.validation_rules = ""
#@spouseSsdiEarnRecDependents.validation_message= ""
@spouseSsdiEarnRecDependents.save!

@spouseSsdiDac.text = "Is your spouse a Disabled Adult Child according to SSA?"
@spouseSsdiDac.default_answer = "No"
#If spouseSsdiEarnRec = Other
@spouseSsdiDac.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseSsdiGet == 'Yes' && spouseSsdiEarnRec ==  'Other'
"
#@spouseSsdiDac.validation_rules = ""
#@spouseSsdiDac.validation_message= ""
@spouseSsdiDac.save!

@spouseBlindOnsetDate.text = "What is the onset date of your spouse's blindness according to SSA?"
#
@spouseBlindOnsetDate.default_answer = "expression= 
spouseBirthDate = manager.get_answer_by_question_name('spouseBirthDate')"
#If spouseSsdiGet = Y AND spouseBlind = Y AND (rSpouseAge  => 55 yrs AND < 65 yrs)
@spouseBlindOnsetDate.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
rSpouseAge = WebCalc.find_by_name('rSpouseAge')
rSpouseAge = rSpouseAge.calculate manager
rSpouseAge > 54 && rSpouseAge < 65 && spouseBlind == 'Yes' && spouseSsdiGet == 'Yes'
"
#@spouseBlindOnsetDate.validation_rules = ""
#@spouseBlindOnsetDate.validation_message= ""
@spouseBlindOnsetDate.save!

@spouseBlindSkillsBefore55.text = "Are your spouse's work skills and abilities different now than before age 55?"
@spouseBlindSkillsBefore55.default_answer = "No"
#If spouseSsdiGet = Y AND spouseBlind = Y AND (rSpouseAge => 55 AND < 65) AND (RspouseBlindOnsetAge <= 55 yrs)
@spouseBlindSkillsBefore55.display_rules = "
unless manager.get_answer_by_question_name('spouseBirthDate').blank? || manager.get_answer_by_question_name('spouseBlindOnsetDate').blank? 
  spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
  spouseBlind = manager.get_answer_by_question_name('spouseBlind')
  spouseBirthDate = Date.strptime(manager.get_answer_by_question_name('spouseBirthDate'), '%m/%d/%Y')
  spouseBlindOnsetDate = Date.strptime(manager.get_answer_by_question_name('spouseBlindOnsetDate'), '%m/%d/%Y')
  rSpouseAge = WebCalc.find_by_name('rSpouseAge')
  rSpouseAge = rSpouseAge.calculate manager
  
  rSpouseOnsetAge = (spouseBlindOnsetDate.year - spouseBirthDate.year)
  subyear= 0
  if spouseBirthDate.month > spouseBlindOnsetDate.month then
    subyear = 1
  elsif spouseBirthDate.month == spouseBlindOnsetDate.month then
    if spouseBirthDate.day > spouseBlindOnsetDate.day  then
      subyear = 1
    end
  end
  spouseOnsetAge = spouseOnsetAge - subyear
    
  spouseAge > 54 && spouseAge < 65 && spouseOnsetAge <= 55 && spouseBlind == 'Yes' && spouseSsdiGet == 'Yes'
  
else
  false
end
"
#@spouseBlindSkillsBefore55.validation_rules = ""
#@spouseBlindSkillsBefore55.validation_message= ""
@spouseBlindSkillsBefore55.save!

@spouseBlindSkillsBeforeOnset.text = "Are your spouse's work skills and abilities different now than before the onset of blindness?"
@spouseBlindSkillsBeforeOnset.default_answer = "No"
#If spouseSsdiGet = Y AND spouseBlind = Y AND (rSpouseAge => 55 AND < 65) AND (RspouseBlindOnsetAge > 55 yrs)
@spouseBlindSkillsBeforeOnset.display_rules = "
unless manager.get_answer_by_question_name('spouseBirthDate').blank? || manager.get_answer_by_question_name('spouseBlindOnsetDate').blank? 
  spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
  spouseBlind = manager.get_answer_by_question_name('spouseBlind')
  spouseBirthDate = Date.strptime(manager.get_answer_by_question_name('spouseBirthDate'), '%m/%d/%Y')
  spouseBlindOnsetDate = Date.strptime(manager.get_answer_by_question_name('spouseBlindOnsetDate'), '%m/%d/%Y')
  rSpouseAge = WebCalc.find_by_name('rSpouseAge')
  rSpouseAge = Float(rSpouseAge.calculate manager)
    
  spouseOnsetAge = (spouseBlindOnsetDate.year - spouseBirthDate.year)
  subyear= 0
  if spouseBirthDate.month > spouseBlindOnsetDate.month then
    subyear = 1
  elsif spouseBirthDate.month == spouseBlindOnsetDate.month then
    if spouseBirthDate.day > spouseBlindOnsetDate.day  then
      subyear = 1
    end
  end
  spouseOnsetAge = spouseOnsetAge - subyear
    
  rSpouseAge > 54 && rSpouseAge < 65 && spouseOnsetAge > 55 && spouseBlind == 'Yes' && spouseSsdiGet == 'Yes'
  
else
  false
end
"
#@spouseBlindSkillsBeforeOnset.validation_rules = ""
#@spouseBlindSkillsBeforeOnset.validation_message= ""
@spouseBlindSkillsBeforeOnset.save!                                                           

#current fix needed
@spouseSsdiActualAmt.text = "What is the actual amount of the monthly SSDI payment that your spouse receives?"
@spouseSsdiActualAmt.default_answer = "0.00"
#IF Current/What-If Button = Current AND spouseSsdiGet = Y
@spouseSsdiActualAmt.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiGet == 'Yes' && !manager.situation.what_if?" 

@spouseSsdiActualAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@spouseSsdiActualAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseSsdiActualAmt.save!

@spouseCareAGet.text = "Does your spouse have Medicare Part A (Hospitalization Insurance)?"
#EXPRESSION: If spouseSsdiGet = Y, THEN YES, ELSE NO
@spouseCareAGet.default_answer = "expression= 
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
if spouseSsdiGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end
"
@spouseCareAGet.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply= manager.get_answer_by_question_name('caidSpouseApply')
(spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') 
"
#@spouseCareAGet.validation_rules = ""
#@spouseCareAGet.validation_message= ""
@spouseCareAGet.save!

@spouseCareBGet.text = "Does your spouse have Medicare Part B (Medical Insurance)?"
@spouseCareBGet.default_answer = "expression= 
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
if spouseSsdiGet == 'Yes' then
  answer = 'Yes'
else
  answer = 'No'
end"
#If spouseCareAGet = Y
@spouseCareBGet.display_rules = "
spouseCareAGet= manager.get_answer_by_question_name('spouseCareAGet')
spouseCareAGet == 'Yes'
"
#@spouseCareBGet.validation_rules = ""
#@spouseCareBGet.validation_message= ""
@spouseCareBGet.save!

@spouseCareBDeduct.text = "Is your spouse's Medicare Part B Premium Deducted from your spouse's SSDI Payment?"
#EXPRESSION: If caidSpouseGet = Y, THEN NO, ELSE YES
@spouseCareBDeduct.default_answer = "expression= 
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
if caidSpouseGet == 'Yes' then
  answer = 'No'
else
  answer = 'Yes'
end"
#IF spouseSsdiGet AND spouseCareBGet = Y
@spouseCareBDeduct.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseCareBGet = manager.get_answer_by_question_name('spouseCareBGet')
spouseSsdiGet == 'Yes' && spouseCareBGet == 'Yes'
"
#@spouseCareBDeduct.validation_rules = ""
#@spouseCareBDeduct.validation_message= ""
@spouseCareBDeduct.save!

@spouseCareBPaySelf.text = "Is your spouse paying the Part B Premium out-of-pocket?"
@spouseCareBPaySelf.default_answer = "Yes"
#IF spouseCareBDeduct = N
@spouseCareBPaySelf.display_rules = "
spouseCareBDeduct = manager.get_answer_by_question_name('spouseCareBDeduct')
spouseCareBDeduct == 'No'
"
#@spouseCareBPaySelf.validation_rules = ""
#@spouseCareBPaySelf.validation_message= ""
@spouseCareBPaySelf.save!

@spouseCareBPremiumAmt.text = "How much is your spouse's Medicare Part B Premium?"
@spouseCareBPremiumAmt.default_answer = "96.40"
#IF spouseCareBDeduct = Y OR spouseCareBPaySelf = Y
@spouseCareBPremiumAmt.display_rules = "
spouseCareBDeduct = manager.get_answer_by_question_name('spouseCareBDeduct')
spouseCareBPaySelf = manager.get_answer_by_question_name('spouseCareBPaySelf')
spouseCareBDeduct ==  'Yes' || spouseCareBPaySelf ==  'Yes'
"
@spouseCareBPremiumAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseCareBPremiumAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseCareBPremiumAmt.save!

@ssiParDeemAmt.text = "How much of your parents' monthly income is or would be deemed to you for SSI purposes?"
@ssiParDeemAmt.default_answer = "0.00"
#If (ssiGet = Y OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE) AND liveWithParents = Y AND rAge  < 18   review
#October 26th, 2011 edit of display rule
#If (ssiGet = Y OR r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND liveWithParents = Y AND rAge  < 18
@ssiParDeemAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
liveWithParents = manager.get_answer_by_question_name('liveWithParents')
rAge = WebCalc.find_by_name('rAge')
(ssiGet == 'Yes' || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true) && liveWithParents == 'Yes' && Float(rAge.calculate manager) < 18
"
@ssiParDeemAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiParDeemAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiParDeemAmt.save!

@vA_CaidParDeemAmt.text = "How much of your parents' monthly income is deemed to you for Medicaid purposes?"
@vA_CaidParDeemAmt.default_answer = "0.00"
#If (caidGet = Y OR caidApply = Y) AND liveWithParents = Y AND rAge < 21
@vA_CaidParDeemAmt.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = WebCalc.find_by_name('caidApply')
liveWithParents = manager.get_answer_by_question_name('liveWithParents')
rAge = WebCalc.find_by_name('rAge')
(caidGet == 'Yes' || caidApply == 'Yes') && liveWithParents == 'Yes' && Float(rAge.calculate manager) < 21
"
@vA_CaidParDeemAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@vA_CaidParDeemAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_CaidParDeemAmt.save!

@vA_CaidCoupleParDeemAmt.text = "How much parental monthly income is deemed to you and your spouse for Medicaid purposes?"
@vA_CaidCoupleParDeemAmt.default_answer = "0.00"
#If (caidGet = Y OR caidApply = Y) AND (caidSpouseGet = Y OR caidSpouseApply = Y) 
#AND (vA_CaidliveWithSpouseAndOwnParents = Y OR  vA_CaidliveWithSpouseAndSpouseParents = Y)
@vA_CaidCoupleParDeemAmt.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidliveWithSpouseAndOwnParents = manager.get_answer_by_question_name('vA_CaidliveWithSpouseAndOwnParents')
vA_CaidliveWithSpouseAndSpouseParents = manager.get_answer_by_question_name('vA_CaidliveWithSpouseAndSpouseParents')
(caidGet == 'Yes' || caidApply == 'Yes') && (caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') && (vA_CaidliveWithSpouseAndOwnParents == 'Yes' || vA_CaidliveWithSpouseAndSpouseParents == 'Yes')
"
@vA_CaidCoupleParDeemAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@vA_CaidCoupleParDeemAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_CaidCoupleParDeemAmt.save!

@ssiSpouseDeem.text = "Are or would any of your spouse's income or resources be deemed to you for SSI purposes?"
@ssiSpouseDeem.default_answer = "No"
#IF (ssiGet = Y OR  OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE) AND liveWithSpouse = Y AND spouseSsiGet = <> Y review
#0ct 25 review of display rule

#IF (ssiGet = Y OR  OR r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND liveWithSpouse = Y AND spouseSsiGet = <> Y
@ssiSpouseDeem.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
((ssiGet == 'Yes'|| (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true) && liveWithSpouse == 'Yes'  && spouseSsiGet != 'Yes')
"
#@ssiSpouseDeem.validation_rules = ""
#@ssiSpouseDeem.validation_message= ""
@ssiSpouseDeem.save!
## stop here? 
@ssiSpouseDeemUnearnAmt.text = "How much of your spouse's monthly unearned income is deemed to you for SSI purposes?"
@ssiSpouseDeemUnearnAmt.default_answer = "0.00"
#IF ssiSpouseDeem = Y
@ssiSpouseDeemUnearnAmt.display_rules = "
ssiSpouseDeem = manager.get_answer_by_question_name('ssiSpouseDeem')
(ssiSpouseDeem == 'Yes')
"
@ssiSpouseDeemUnearnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiSpouseDeemUnearnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiSpouseDeemUnearnAmt.save!

@vA_CaidSpouseDeem.text = "Is any of your spouse's income deemed to you for Medicaid purposes?"
@vA_CaidSpouseDeem.default_answer = "No"
#IF (CaidGet = Y OR caidApply = Y) AND ((spouseBlind = N AND spouseDisability = N AND rSpouseAge < 65 yrs) OR (caidSpouseGet = N AND caidSpouseApply = N))
@vA_CaidSpouseDeem.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
spouseBlind = manager.get_answer_by_question_name('spouseBlind')
spouseDisability = manager.get_answer_by_question_name('spouseDisability')
rSpouseAge = WebCalc.find_by_name('rSpouseAge')
rSpouseAge = Float(rSpouseAge.calculate manager)
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
(caidGet  == 'Yes' || caidApply  == 'Yes') && ((spouseBlind  == 'No' && spouseDisability  == 'No' && rSpouseAge < 65) || (caidSpouseGet  == 'No' && caidSpouseApply  == 'No'))
"
#@vA_CaidSpouseDeem.validation_rules = ""
#@vA_CaidSpouseDeem.validation_message= ""
@vA_CaidSpouseDeem.save!
                                                                       
@vA_CaidSpouseDeemUnearnAmt.text = "How much of your spouse's monthly unearned income is deemed to you for Medicaid purposes?"
@vA_CaidSpouseDeemUnearnAmt.default_answer = "0.00"
#IF vA_CaidSpouseDeem = Y
@vA_CaidSpouseDeemUnearnAmt.display_rules = "
vA_CaidSpouseDeem = manager.get_answer_by_question_name('vA_CaidSpouseDeem')
(vA_CaidSpouseDeem == 'Yes')
"
@vA_CaidSpouseDeemUnearnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@vA_CaidSpouseDeemUnearnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_CaidSpouseDeemUnearnAmt.save!

@ssiSpouseDeemEarnAmt.text = "How much of your spouse's monthly earned income is deemed to you for SSI purposes?"
@ssiSpouseDeemEarnAmt.default_answer = "0.00"
#IF ssiSpouseDeem = Y
@ssiSpouseDeemEarnAmt.display_rules = "
ssiSpouseDeem = manager.get_answer_by_question_name('ssiSpouseDeem')
ssiSpouseDeem == 'Yes'
"
@ssiSpouseDeemEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiSpouseDeemEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiSpouseDeemEarnAmt.save!
                                                                       
@vA_CaidSpouseDeemEarnAmt.text = "How much of your spouse's monthly earned income is deemed to you for Medicaid purposes?"
@vA_CaidSpouseDeemEarnAmt.default_answer = "0.00"
#IF vA_CaidSpouseDeem = Y
@vA_CaidSpouseDeemEarnAmt.display_rules = "
vA_CaidSpouseDeem = manager.get_answer_by_question_name('vA_CaidSpouseDeem')
vA_CaidSpouseDeem == 'Yes'
"
@vA_CaidSpouseDeemEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@vA_CaidSpouseDeemEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_CaidSpouseDeemEarnAmt.save!

#Wbk 55 review
#ssiResourceLimitExceed         Do you have countable resources that exceed the ~rateSsiResourceLimit~ SSI resource limit? (Do not count resources included in a PASS)
@ssiResourceLimitExceed.text = "Do you have countable resources that exceed the C{rateSsiResourceLimit} SSI resource limit? (Do not count resources included in a PASS)"
@ssiResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the SSI resource limit? (Do not count resources included in a PASS"
@ssiResourceLimitExceed.default_answer = "No"
#If ssiGet = Y AND (liveWithSpouse = N OR (liveWithSpouse = Y AND spouseSsiGet = N AND  ssiSpouseDeem = N))
#workboo5 55 edit
#If ssiGet = Y AND (liveWithSpouse <> Y OR (liveWithSpouse = Y AND spouseSsiGet = N AND  ssiSpouseDeem = N))
@ssiResourceLimitExceed.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiSpouseDeem = manager.get_answer_by_question_name('ssiSpouseDeem')
ssiGet == 'Yes' && (liveWithSpouse != 'Yes' || (liveWithSpouse == 'Yes' && spouseSsiGet == 'No' && ssiSpouseDeem == 'No'))
"
#@ssiResourceLimitExceed.validation_rules = ""
#@ssiResourceLimitExceed.validation_message= ""
@ssiResourceLimitExceed.save!

@ssiCoupleResourceLimitExceed.text = "Do you and your spouse have countable resources that exceed the C{RateCoupleSsiResourceLimit} SSI resource limit? (Do not count resources included in a PASS)"
@ssiCoupleResourceLimitExceed.all_inputs_text = "Do you and your spouse have countable resources that exceed the SSI resource limit? (Do not count resources included in a PASS)"
@ssiCoupleResourceLimitExceed.default_answer = "No"
#If ssiGet = Y AND liveWithSpouse = Y AND (spouseSsiGet = Y OR ssiSpouseDeem = Y)
@ssiCoupleResourceLimitExceed.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiSpouseDeem = manager.get_answer_by_question_name('ssiSpouseDeem')
ssiGet == 'Yes' && (liveWithSpouse == 'Yes' && (spouseSsiGet == 'Yes' || ssiSpouseDeem == 'Yes'))"
#@ssiCoupleResourceLimitExceed.validation_rules = ""
#@ssiCoupleResourceLimitExceed.validation_message= ""
@ssiCoupleResourceLimitExceed.save!

@caidMostGroupsResourceLimitExceed.text = "Do you have countable resources that exceed the C{RateCaidMostGroupsResourceLimit} Medicaid resource limit? (Include your share of any equity in real estate contiguous to your home over the C{VA_RateCaidRealEstateResourceLimit} limit and your share of any other real property)"
@caidMostGroupsResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the Medicaid resource limit? (Include your share of any equity in real estate contiguous to your home over the Real Estate Resource limit and your share of any other real property)"
#'                                                    1234567890123456789012345123456789012345678901234512345678901234567890123451234567890123456789012345123456789012345678901234512345678901234567890123451234567890123456789012345123456789012345678901234512345678901234567890123451234567890123456789012345'
#workbook 55 review                        Do you have countable resources that exceed the ~RateCaidMostGroupsResourceLimit~  Medicaid resource limit? (Include your share of any equity in real estate contiguous to your home over the ~VA_RateCaidRealEstateResourceLimit~ limit and your share of any other real property)
@caidMostGroupsResourceLimitExceed.default_answer = "No"
#oh, bob sees the different alloabel answers chnaged above
#If ((((caidGet = YES AND vA_CaidGetCoveredGroup = (SSI Recipient OR 1619b (SSI Medicaid while working) 
#  OR Auxiliary Grant OR Disabled Adult Child (DAC) OR Protected SSI Disabled Child OR Medically Needy(Spendown)))  
# OR (caidApply = YES AND vA_CaidApplyCoveredGroup =  (SSI Recipient OR 1619b (SSI Medicaid while working) 
# OR MEDICAID WORKS OR Auxiliary Grant OR Disabled Adult Child (DAC) OR Protected SSI Disabled Child OR Medically Needy(Spendown)))) AND liveWithSpouse <> YES)
#review on Nov 4 2011
#If ((((caidGet = YES AND vA_CaidGetCoveredGroup = (SSI Recipient OR 1619b (SSI Medicaid while working) OR Auxiliary Grant OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR Medically Needy(Spendown)))  OR (caidApply = YES AND vA_CaidApplyCoveredGroup =  (SSI Recipient OR 1619b (SSI Medicaid while working) OR MEDICAID WORKS OR Auxiliary Grant OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR Medically Needy(Spendown)))) AND liveWithSpouse <> YES)
@caidMostGroupsResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
 vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
 caidApply = manager.get_answer_by_question_name('caidApply')
 vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 (( caidGet == 'Yes' && 
  (vA_CaidGetCoveredGroup == 'SSI Recipient' || vA_CaidGetCoveredGroup == '1619b (SSI Medicaid while working)' || vA_CaidGetCoveredGroup == 'Auxiliary Grant' ||
   vA_CaidGetCoveredGroup == 'Protected Adult Disabled Child' || vA_CaidGetCoveredGroup == 'Protected SSI Disabled Child'  || 
   vA_CaidGetCoveredGroup == '300% SSI' || vA_CaidGetCoveredGroup == 'Medically Needy(Spendown)' )) ||
  ( caidApply == 'Yes' && 
   (vA_CaidApplyCoveredGroup == 'SSI Recipient' || vA_CaidApplyCoveredGroup == '1619b (SSI Medicaid while working)' || vA_CaidApplyCoveredGroup == 'MEDICAID WORKS' ||
    vA_CaidApplyCoveredGroup == 'Auxiliary Grant' || 
    vA_CaidApplyCoveredGroup == 'Protected Adult Disabled Child' || vA_CaidApplyCoveredGroup == 'Protected SSI Disabled Child'  || 
    vA_CaidApplyCoveredGroup == 'Medically Needy(Spendown)')) && liveWithSpouse != 'Yes')"
#@caidMostGroupsResourceLimitExceed.validation_rules = ""
#@caidMostGroupsResourceLimitExceed.validation_message= ""
@caidMostGroupsResourceLimitExceed.save!

@caidCoupleMostGroupsResourceLimitExceed.text = "Do you and your spouse have countable resources that exceed the C{RateCoupleCaidMostGroupsResourceLimit} Medicaid resource limit? (Include any equity in real estate contiguous to your home over the C{VA_RateCaidRealEstateResourceLimit} limit and in any other real property)"
@caidCoupleMostGroupsResourceLimitExceed.all_inputs_text = "Do you and your spouse have countable resources that exceed the Medicaid resource limit? (Include any equity in real estate contiguous to your home over the Real Estate Resource limit and in any other real property)"
@caidCoupleMostGroupsResourceLimitExceed.default_answer = "No"
#If (((caidGet = YES AND vA_CaidGetCoveredGroup = (SSI Recipient OR 1619b (SSI Medicaid while working) OR Auxiliary Grant OR Disabled Adult Child (DAC) 
# OR Protected SSI Disabled Child OR Medically Needy (Spendown)))  OR (caidApply = YES AND vA_CaidApplyCoveredGroup =  (SSI Recipient OR 1619b (SSI Medicaid while working) OR MEDICAID WORKS OR Auxiliary Grant OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR 300% SSI OR Medically Needy (Spendown)))) AND liveWithSpouse = Y) OR (caidApply = YES AND vA_CaidApplyCoveredGroup =  300% SSI AND AND liveWithSpouse = N)
@caidCoupleMostGroupsResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
 vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
 caidApply = manager.get_answer_by_question_name('caidApply')
 vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 (( caidGet == 'Yes' && 
  (vA_CaidGetCoveredGroup == 'SSI Recipient' || vA_CaidGetCoveredGroup == '1619b (SSI Medicaid while working)' || vA_CaidGetCoveredGroup == 'Auxiliary Grant' ||
   vA_CaidGetCoveredGroup == 'Protected Adult Disabled Child' || vA_CaidGetCoveredGroup == 'Protected SSI Disabled Child'  || 
    vA_CaidGetCoveredGroup == 'Medically Needy(Spendown)' )) ||
  ( caidApply == 'Yes' && 
   (vA_CaidApplyCoveredGroup == 'SSI Recipient' || vA_CaidApplyCoveredGroup == '1619b (SSI Medicaid while working)' || vA_CaidApplyCoveredGroup == 'MEDICAID WORKS' ||
    vA_CaidApplyCoveredGroup == 'Auxiliary Grant' || 
    vA_CaidApplyCoveredGroup == 'Protected Adult Disabled Child' || vA_CaidApplyCoveredGroup == 'Protected SSI Disabled Child'  || vA_CaidApplyCoveredGroup == '300% SSI' ||
    vA_CaidApplyCoveredGroup == 'Medically Needy(Spendown)')) && liveWithSpouse == 'Yes')  || (caidApply == 'Yes' && vA_CaidApplyCoveredGroup == '300% SSI'  && liveWithSpouse == 'No')"
#@caidCoupleMostGroupsResourceLimitExceed.validation_rules = ""
#@caidCoupleMostGroupsResourceLimitExceed.validation_message= ""
@caidCoupleMostGroupsResourceLimitExceed.save!

@caid80PctFplResourceLimitExceed.text = "Do you have countable resources that exceed the C{RateCaidMostGroupsResourceLimit} Medicaid resource limit for the 80% FPL covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caid80PctFplResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the Medicaid resource limit for the 80% FPL covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caid80PctFplResourceLimitExceed.default_answer = "No"
#If (caidGet = YES AND vA_CaidGetCoveredGroup =  80% FPL) OR (caidApply = YES AND vA_CaidApplyCoveredGroup = 80% FPL) AND liveWithSpouse <> YES)
@caid80PctFplResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
 vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
 caidApply = manager.get_answer_by_question_name('caidApply')
 vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 ((( caidGet == 'Yes' && vA_CaidGetCoveredGroup == '80% FPL') || ( caidApply == 'Yes' && vA_CaidApplyCoveredGroup == '80% FPL')) && liveWithSpouse != 'Yes')"
#@caid80PctFplResourceLimitExceed.validation_rules = ""
#@caid80PctFplResourceLimitExceed.validation_message= ""
@caid80PctFplResourceLimitExceed.save!
                                                                       
#caidCouple80PctFplResourceLimitExceed                                             
@caidCouple80PctFplResourceLimitExceed.text = "Do you and your spouse have countable resources that exceed the C{RateCoupleCaidMostGroupsResourceLimit} Medicaid resource limit for the 80% FPL covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caidCouple80PctFplResourceLimitExceed.all_inputs_text = "Do you and your spouse have countable resources that exceed the Medicaid resource limit for the 80% FPL covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caidCouple80PctFplResourceLimitExceed.default_answer = "No"
#If (caidGet = YES AND vA_CaidGetCoveredGroup =  80% FPL) OR (caidApply = YES AND vA_CaidApplyCoveredGroup = 80% FPL) AND liveWithSpouse = YES)
@caidCouple80PctFplResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
((( caidGet == 'Yes' && vA_CaidGetCoveredGroup == '80% FPL') || ( caidApply == 'Yes' && vA_CaidApplyCoveredGroup == '80% FPL')) && liveWithSpouse == 'Yes')"
#@caidCouple80PctFplResourceLimitExceed.validation_rules = ""
#@caidCouple80PctFplResourceLimitExceed.validation_message= ""
@caidCouple80PctFplResourceLimitExceed.save!
                                                                                                                         #VA_RateCaidLtcHomeEquityLimit
@vA_CaidLtcHomeEquityLimitProvisionallyExceed.text = "Do you have a home and property that has an equity value over the C{VA_RateCaidLtcHomeEquityLimit} LTC Home Equity Limit?"
@vA_CaidLtcHomeEquityLimitProvisionallyExceed.all_inputs_text = "Do you have a home and property that has an equity value over the LTC Home Equity Limit?"

@vA_CaidLtcHomeEquityLimitProvisionallyExceed.default_answer = "No"
#IF vA_CaidInstitutionServicesApply = YES OR vA_CaidWaiverServicesApply = YES OR vA_CaidSpouseInstitutionServicesApply= YES OR vA_CaidSpouseWaiverServicesApply = YES 
@vA_CaidLtcHomeEquityLimitProvisionallyExceed.display_rules = "
vA_CaidInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidInstitutionServicesApply')
vA_CaidWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidWaiverServicesApply')
vA_CaidSpouseInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseInstitutionServicesApply')
vA_CaidSpouseWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidSpouseWaiverServicesApply')
(vA_CaidInstitutionServicesApply == 'Yes' || vA_CaidWaiverServicesApply == 'Yes' || vA_CaidSpouseInstitutionServicesApply == 'Yes' || vA_CaidSpouseWaiverServicesApply == 'Yes')"
#@vA_CaidLtcHomeEquityLimitProvisionallyExceed.validation_rules = ""
#@vA_CaidLtcHomeEquityLimitProvisionallyExceed.validation_message= ""
@vA_CaidLtcHomeEquityLimitProvisionallyExceed.save!

@vA_CaidSpouseOrChildLivesInHome.text = "Do any of the following live in your home: you or your spouse, a dependent child, or your adult blind or disabled child?"
@vA_CaidSpouseOrChildLivesInHome.default_answer = "No"
#IF vA_CaidLtcHomeEquityLimitProvisionallyExceed = YES
@vA_CaidSpouseOrChildLivesInHome.display_rules = "
vA_CaidLtcHomeEquityLimitProvisionallyExceed = manager.get_answer_by_question_name('vA_CaidLtcHomeEquityLimitProvisionallyExceed')
vA_CaidLtcHomeEquityLimitProvisionallyExceed == 'Yes'"
#@vA_CaidSpouseOrChildLivesInHome.validation_rules = ""
#@vA_CaidSpouseOrChildLivesInHome.validation_message= ""
@vA_CaidSpouseOrChildLivesInHome.save!

@caidQdwiResourceLimitExceed.text = "Do you have countable resources that exceed the C{RateQwdiResouceLimit} QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidQdwiResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidQdwiResourceLimitExceed.default_answer = "No"
#If ((caidGet = Y AND vA_CaidGetCoveredGroup = QDWI)  OR (caidApply = Y AND vA_CaidApplyCoveredGroup =  QDWI)) AND liveWithSpouse <> YES N
@caidQdwiResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
 vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
 caidApply = manager.get_answer_by_question_name('caidApply')
 vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 ((( caidGet == 'Yes' && vA_CaidGetCoveredGroup == 'QDWI') || ( caidApply == 'Yes' && vA_CaidApplyCoveredGroup == 'QDWI')) && liveWithSpouse != 'Yes')"
#@caidQdwiResourceLimitExceed.validation_rules = ""
#@caidQdwiResourceLimitExceed.validation_message= ""
@caidQdwiResourceLimitExceed.save!

@caidCoupleQdwiResourceLimitExceed.text = "Do you and your spouse have countable resources that exceed the C{RateCoupleQwdiResouceLimit} QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidCoupleQdwiResourceLimitExceed.all_inputs_text = "Do you and your spouse have countable resources that exceed the QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidCoupleQdwiResourceLimitExceed.default_answer = "No"
#If ((caidGet = Y AND vA_CaidGetCoveredGroup = QDWI)  OR (caidApply = Y AND vA_CaidApplyCoveredGroup = QDWI)) AND liveWithSpouse =Y
@caidCoupleQdwiResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
((( caidGet == 'Yes' && vA_CaidGetCoveredGroup == 'QDWI') || ( caidApply == 'Yes' && vA_CaidApplyCoveredGroup == 'QDWI')) && liveWithSpouse == 'Yes')
"
#@caidCoupleQdwiResourceLimitExceed.validation_rules = ""
#@caidCoupleQdwiResourceLimitExceed.validation_message= ""
@caidCoupleQdwiResourceLimitExceed.save!                                                      

@caidQmbSlmbQiResourceLimitExceed.text = "Do you have countable resources that exceed the C{RateQmbSlmbQiResouceLimit} resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidQmbSlmbQiResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidQmbSlmbQiResourceLimitExceed.default_answer = "No"
#If ((caidGet = Y AND vA_CaidGetCoveredGroup = (QMB OR SLMB OR = QI)) OR (caidApply = Y AND vA_CaidApplyCoveredGroup = (QMB OR  SLMB OR QI))) AND liveWithSpouse <> YES
@caidQmbSlmbQiResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
 vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
 caidApply = manager.get_answer_by_question_name('caidApply')
 vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 ((( caidGet == 'Yes' && (vA_CaidGetCoveredGroup == 'QMB' || vA_CaidGetCoveredGroup == 'SLMB' || vA_CaidGetCoveredGroup == 'QI')) ||
  ( caidApply == 'Yes' && (vA_CaidApplyCoveredGroup == 'QMB' || vA_CaidApplyCoveredGroup == 'SLMB' || vA_CaidApplyCoveredGroup == 'QI'))) && liveWithSpouse != 'Yes')"
#@caidQmbSlmbQiResourceLimitExceed.validation_rules = ""
#@caidQmbSlmbQiResourceLimitExceed.validation_message= ""
@caidQmbSlmbQiResourceLimitExceed.save!

@caidCoupleQmbSlmbQiResourceLimitExceed.text = "Do you and your spouse have countable resources that exceed the C{RateCoupleQmbSlmbQiResouceLimit} resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidCoupleQmbSlmbQiResourceLimitExceed.all_inputs_text = "Do you and your spouse have countable resources that exceed the resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidCoupleQmbSlmbQiResourceLimitExceed.default_answer = "No"
#If ((caidGet = Y AND vA_CaidGetCoveredGroup = (QMB OR SLMB OR = QI))  OR (caidApply = Y AND vA_CaidApplyCoveredGroup = (QMB OR SLMB OR = QI))) AND liveWithSpouse =Y
@caidCoupleQmbSlmbQiResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidApply = manager.get_answer_by_question_name('caidApply')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
((( caidGet == 'Yes' && (vA_CaidGetCoveredGroup == 'QMB' || vA_CaidGetCoveredGroup == 'SLMB' || vA_CaidGetCoveredGroup == 'QI')) ||
 ( caidApply == 'Yes' && (vA_CaidApplyCoveredGroup == 'QMB' || vA_CaidApplyCoveredGroup == 'SLMB' || vA_CaidApplyCoveredGroup == 'QI'))) && liveWithSpouse == 'Yes')"
#@caidCoupleQmbSlmbQiResourceLimitExceed.validation_rules = ""
#@caidCoupleQmbSlmbQiResourceLimitExceed.validation_message= ""
@caidCoupleQmbSlmbQiResourceLimitExceed.save!

@caidApplyLtcCommunitySpousePraExceed.text = "Does your spouse have countable resources that exceed your spouse's Protected Resource Amount (PRA)?"
@caidApplyLtcCommunitySpousePraExceed.default_answer = "No"
#If (vA_CaidInstitutionServicesApply = YES OR vA_CaidWaiverServicesApply = YES ) AND spouseIsCaidCommunitySpouse = YES)
@caidApplyLtcCommunitySpousePraExceed.display_rules = "
vA_CaidInstitutionServicesApply = manager.get_answer_by_question_name('vA_CaidInstitutionServicesApply')
vA_CaidWaiverServicesApply = manager.get_answer_by_question_name('vA_CaidWaiverServicesApply')
spouseIsCaidCommunitySpouse = manager.get_answer_by_question_name('spouseIsCaidCommunitySpouse')
((vA_CaidInstitutionServicesApply == 'Yes' || vA_CaidWaiverServicesApply == 'Yes' ) && spouseIsCaidCommunitySpouse == 'Yes')"
#@caidApplyLtcCommunitySpousePraExceed.validation_rules = ""
#@caidApplyLtcCommunitySpousePraExceed.validation_message= ""
@caidApplyLtcCommunitySpousePraExceed.save!

@caidApplyLtcCommunitySpouseResourceLimitExceed.text = "Do your spouse's excess resources (the amount greater than PRA) plus your own resources exceed the C{RateCaidMostGroupsResourceLimit} resource limit?"
@caidApplyLtcCommunitySpouseResourceLimitExceed.all_inputs_text = "Do your spouse's excess resources (the amount greater than PRA) plus your own resources exceed the resource limit?"
@caidApplyLtcCommunitySpouseResourceLimitExceed.default_answer = "No"
#IF caidApplyLtcCommunitySpousePraExceed = YES
@caidApplyLtcCommunitySpouseResourceLimitExceed.display_rules = "
caidApplyLtcCommunitySpousePraExceed = manager.get_answer_by_question_name('caidApplyLtcCommunitySpousePraExceed')
caidApplyLtcCommunitySpousePraExceed == 'Yes'"
#@caidApplyLtcCommunitySpouseResourceLimitExceed.validation_rules = ""
#@caidApplyLtcCommunitySpouseResourceLimitExceed.validation_message= ""
@caidApplyLtcCommunitySpouseResourceLimitExceed.save!

@caidGetOrApply300PctSsiResourceLimitExceed.text = "Do you have countable resources that exceed the C{RateCaidMostGroupsResourceLimit} limit for the 300% SSI covered group?"
@caidGetOrApply300PctSsiResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the limit for the 300% SSI covered group?"
@caidGetOrApply300PctSsiResourceLimitExceed.default_answer = "No"
#If (married = NO AND  (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup) = 300% SSI) OR (married = YES AND vA_CaidGetCoveredGroup = 300% SSI)
@caidGetOrApply300PctSsiResourceLimitExceed.display_rules = "
married = manager.get_answer_by_question_name('married')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
(( married == 'No' && (vA_CaidGetCoveredGroup == '300% SSI' || vA_CaidApplyCoveredGroup == '300% SSI')) || (( married == 'Yes' && vA_CaidGetCoveredGroup == '300% SSI')))"
#@caidGetOrApply300PctSsiResourceLimitExceed.validation_message= ""
@caidGetOrApply300PctSsiResourceLimitExceed.save!

#quest added on 12/22/2011
#63	82.49	Have you established a Work Incentive (WIN) account that contains (or will contain) only your wages earned while you are in MEDICAID WORKS?	caidWinAcctEstablishedForWorks
@caidWinAcctEstablishedForWorks.text = "Have you established a Work Incentive (WIN) account that contains (or will contain) only your wages earned while you are in MEDICAID WORKS?"
@caidWinAcctEstablishedForWorks.default_answer = "No"
#IF ((vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSsiRecipientApplyWorks = Y) 
@caidWinAcctEstablishedForWorks.display_rules = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidSsiRecipientApplyWorks = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
vA_CaidGetCoveredGroup == 'MEDICAID WORKS' || vA_CaidApplyCoveredGroup == 'MEDICAID WORKS' || vA_CaidSsiRecipientApplyWorks == 'Yes'"
#@caidWinAcctEstablishedForWorks.validation_message= ""
@caidWinAcctEstablishedForWorks.save!

#Note this question name changed from caidGetWorksResourceLimitExceed on 12/22/2011
#40 41 45 50 63 65	82.5	                  Do you have countable resources in your WIN account that exceed the ~VA_RateCaidWorksResourceLimit~ resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)	caidGetWorksWinResourceLimitExceed
@caidGetWorksWinResourceLimitExceed.text = "Do you have countable resources in your WIN account that exceed the C{VA_RateCaidWorksResourceLimit} resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidGetWorksWinResourceLimitExceed.all_inputs_text = "Do you have countable resources in your WIN account that exceed the resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidGetWorksWinResourceLimitExceed.default_answer = "No"
#If ((caidGet = Y AND vA_CaidGetCoveredGroup = MEDICAID WORKS)
#revised on 12/22/2011
#If caidWinAcctEstablishedForWorks = YES AND vA_CaidGetCoveredGroup = MEDICAID WORKS
@caidGetWorksWinResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidWinAcctEstablishedForWorks = manager.get_answer_by_question_name('caidWinAcctEstablishedForWorks')
caidGet == 'Yes' && vA_CaidGetCoveredGroup == 'MEDICAID WORKS' && caidWinAcctEstablishedForWorks == 'Yes'
"
#@caidGetWorksWinResourceLimitExceed.validation_rules = ""
#@caidGetWorksWinResourceLimitExceed.validation_message= ""
@caidGetWorksWinResourceLimitExceed.save!

#added on 12/22/2011
#63 65	82.51	Do you have countable resources that are not in your WIN acount but that exceed the  ~RateCaidMostGroupsResourceLimit~ limit for MEDICAID WORKS?	CaidGetWorksNonWinResourceLimitExceed
@caidGetWorksNonWinResourceLimitExceed.text = "Do you have countable resources that are not in your WIN acount but that exceed the C{VA_RateCaidWorksResourceLimit} resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidGetWorksNonWinResourceLimitExceed.all_inputs_text = "Do you have countable resources that are not in your WIN acount but that exceed the resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidGetWorksNonWinResourceLimitExceed.default_answer = "No"
#IFvA_CaidGetCoveredGroup = YES AND vA_CaidGetCoveredGroup = MEDICAID WORKS
@caidGetWorksWinResourceLimitExceed.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
caidGet == 'Yes' && vA_CaidGetCoveredGroup == 'MEDICAID WORKS'
"
@caidGetWorksNonWinResourceLimitExceed.save!

@caidSpouseCoupleMostGroupsResourceLimitExceed.text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the C{RateCoupleCaidMostGroupsResourceLimit} Medicaid resource limit? (Include any deemed resources.)"
@caidSpouseCoupleMostGroupsResourceLimitExceed.all_inputs_text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the Medicaid resource limit? (Include any deemed resources.)"
@caidSpouseCoupleMostGroupsResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE 
#AND (((caidSpouseGet = YES AND vA_caidSpouseGetCoveredGroup = (SSI Recipient OR 1619b (SSI Medicaid while working) OR Auxiliary Grant 
#OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR Medically Needy (Spendown)))  
#OR (caidSpouseApply = YES AND vA_caidSpouseApplyCoveredGroup =  (SSI Recipient OR 1619b (SSI Medicaid while working) OR MEDICAID WORKS OR Auxiliary Grant 
#OR Protected Adult Disabled Child OR Protected SSI Disabled Child 
#OR 300% SSI OR Medically Needy (Spendown)))) AND liveWithSpouse = Y) OR (caidSpouseApply = YES AND vA_caidSpouseApplyCoveredGroup =  300% SSI AND liveWithSpouse = N)
#Nov 7 2011 Bobwant another look
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE AND (((caidSpouseGet = YES 
# AND vA_caidSpouseGetCoveredGroup = (SSI Recipient OR 1619b (SSI Medicaid while working) OR Auxiliary Grant OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR Medically Needy (Spendown))) 
 
#OR (caidSpouseApply = YES AND vA_caidSpouseApplyCoveredGroup =  (SSI Recipient OR 1619b (SSI Medicaid while working) OR MEDICAID WORKS OR Auxiliary Grant OR Protected Adult Disabled Child OR Protected SSI Disabled Child OR 300% SSI OR Medically Needy (Spendown)))) AND liveWithSpouse = Y) 
#OR (caidSpouseApply = YES AND vA_caidSpouseApplyCoveredGroup =  300% SSI AND liveWithSpouse = N)
@caidSpouseCoupleMostGroupsResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply   = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseSameCovGroup     = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
caidSpouseGet                       = manager.get_answer_by_question_name('caidSpouseGet')
 vA_caidSpouseGetCoveredGroup       = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
 vA_caidSpouseApplyCoveredGroup     = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
 liveWithSpouse                     = manager.get_answer_by_question_name('liveWithSpouse')
 caidSpouseApply                    = manager.get_answer_by_question_name('caidSpouseApply')
 ((r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false && ((caidSpouseGet == 'Yes'  && 
  (vA_caidSpouseGetCoveredGroup == 'SSI Recipient' || vA_caidSpouseGetCoveredGroup == '1619b (SSI Medicaid while working)' || 
  vA_caidSpouseGetCoveredGroup == 'Auxiliary Grant' || vA_caidSpouseGetCoveredGroup == 'Protected Adult Disabled Child' || vA_caidSpouseGetCoveredGroup == 'Protected SSI Disabled Child' ||
  vA_caidSpouseGetCoveredGroup == 'Medically Needy (Spendown)'))  || 
  (caidSpouseApply == 'Yes'  &&
  (vA_caidSpouseApplyCoveredGroup == 'SSI Recipient' || vA_caidSpouseApplyCoveredGroup == '1619b (SSI Medicaid while working)' || 
   vA_caidSpouseApplyCoveredGroup == 'MEDICAID WORKS' || vA_caidSpouseApplyCoveredGroup == 'Auxiliary Grant' || vA_caidSpouseApplyCoveredGroup == 'Protected Adult Disabled Child' || 
   vA_caidSpouseApplyCoveredGroup == 'Protected SSI Disabled Child' ||
   vA_caidSpouseApplyCoveredGroup == '300% SSI' || vA_caidSpouseApplyCoveredGroup == 'Medically Needy (Spendown)') && liveWithSpouse == 'Yes' ))  ||
   (caidSpouseApply == 'Yes' && vA_caidSpouseApplyCoveredGroup ==  '300% SSI' && liveWithSpouse == 'No')
    )"
#@caidSpouseCoupleMostGroupsResourceLimitExceed.validation_rules = ""
#@caidSpouseCoupleMostGroupsResourceLimitExceed.validation_message= ""
@caidSpouseCoupleMostGroupsResourceLimitExceed.save!

@caidSpouseCouple80PctFplResourceLimitExceed.text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the C{RateCoupleCaidMostGroupsResourceLimit} Medicaid resource limit for the 80% FLP covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caidSpouseCouple80PctFplResourceLimitExceed.all_inputs_text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the Medicaid resource limit for the 80% FLP covered group? (Do not include your share of any equity in real estate contiguous to your home.)"
@caidSpouseCouple80PctFplResourceLimitExceed.default_answer = "No"
#If  r_VA_CaidUserSpouseBothGetOrApply = YES ANDr_VA_CaidUserSpouseSameCovGroup = FALSE AND (caidSpouseGet = YES AND vA_caidSpouseGetCoveredGroup =  80% FPL) 
#OR (caidSpouseApply = YES AND vA_caidSpouseApplyCoveredGroup = 80% FPL) AND liveWithSpouse = YES)
@caidSpouseCouple80PctFplResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseSameCovGroup   = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
caidSpouseGet                     = manager.get_answer_by_question_name('caidSpouseGet')
 vA_caidSpouseGetCoveredGroup     = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
 vA_caidSpouseApplyCoveredGroup   = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
 liveWithSpouse                   = manager.get_answer_by_question_name('liveWithSpouse')
 caidSpouseApply                  = manager.get_answer_by_question_name('caidSpouseApply')
 ((r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false && ((caidSpouseGet == 'Yes'  &&  
 (vA_caidSpouseGetCoveredGroup == '80% FPL'))  || 
 (caidSpouseApply == 'Yes'  && (vA_caidSpouseApplyCoveredGroup == '80% FPL') && liveWithSpouse == 'Yes' )))"
#@caidSpouseCouple80PctFplResourceLimitExceed.validation_rules = ""
#@caidSpouseCouple80PctFplResourceLimitExceed.validation_message= ""
@caidSpouseCouple80PctFplResourceLimitExceed.save!

@caidSpouseGet300PctSsiResourceLimitExceed.text = "Spouse Resource Eligibility:  Does your spouse have countable resources that exceed the C{RateCaidMostGroupsResourceLimit} resource limit for the 300% SSI covered group?"
@caidSpouseGet300PctSsiResourceLimitExceed.all_inputs_text = "Spouse Resource Eligibility:  Does your spouse have countable resources that exceed the resource limit for the 300% SSI covered group?"
@caidSpouseGet300PctSsiResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND (caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup = 300% SSI)
@caidSpouseGet300PctSsiResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
caidSpouseGet                     = manager.get_answer_by_question_name('caidSpouseGet')
 vA_caidSpouseGetCoveredGroup     = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
 ((r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (caidSpouseGet == 'Yes'  &&  vA_caidSpouseGetCoveredGroup == '300% SSI'))"
#@caidSpouseGet300PctSsiResourceLimitExceed.validation_rules = ""
#@caidSpouseGet300PctSsiResourceLimitExceed.validation_message= ""
@caidSpouseGet300PctSsiResourceLimitExceed.save!

@caidSpouseCoupleQdwiResourceLimitExceed.text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the C{RateCoupleQwdiResouceLimit} QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidSpouseCoupleQdwiResourceLimitExceed.all_inputs_text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the QDWI Medicaid resource limit? (Include any deemed resources.)"
@caidSpouseCoupleQdwiResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE 
#AND ((caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup = QDWI)  OR (caidSpouseApply = Y AND vA_caidSpouseApplyCoveredGroup = QDWI))
@caidSpouseCoupleQdwiResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseSameCovGroup   = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
caidSpouseGet                     = manager.get_answer_by_question_name('caidSpouseGet')
 vA_caidSpouseGetCoveredGroup     = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
 vA_caidSpouseApplyCoveredGroup   = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
 caidSpouseApply                  = manager.get_answer_by_question_name('caidSpouseApply')
 ((r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false && ((caidSpouseGet == 'Yes'  &&  (vA_caidSpouseGetCoveredGroup == 'QDWI'))  || 
  (caidSpouseApply == 'Yes'  && (vA_caidSpouseGetCoveredGroup == 'QDWI'))))"
#@caidSpouseCoupleQdwiResourceLimitExceed.validation_rules = ""
#@caidSpouseCoupleQdwiResourceLimitExceed.validation_message= ""
@caidSpouseCoupleQdwiResourceLimitExceed.save!

@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the C{RateCoupleQmbSlmbQiResouceLimit} resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.all_inputs_text = "Spouse Resource Eligibility:  Do you and your spouse have countable resources that exceed the resource limit for QMB, SLMB or QI Medicaid? (Include any deemed resources.)"
@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE AND  ((caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup = (QMB OR SLMB OR = QI))  
#OR (caidSpouseApply = Y AND vA_caidSpouseApplyCoveredGroup = (QMB OR SLMB OR = QI))) AND liveWithSpouse =Y
#oct 28th review
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND r_VA_CaidUserSpouseSameCovGroup = FALSE AND  ((caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup = (QMB OR SLMB OR = QI))  
#OR (caidSpouseApply = Y AND vA_caidSpouseApplyCoveredGroup = (QMB OR SLMB OR = QI))) AND liveWithSpouse =Y
@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
r_VA_CaidUserSpouseSameCovGroup       = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
 caidSpouseGet                        = manager.get_answer_by_question_name('caidSpouseGet')
 vA_caidSpouseGetCoveredGroup         = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
 vA_caidSpouseApplyCoveredGroup       = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
 liveWithSpouse                       = manager.get_answer_by_question_name('liveWithSpouse')
 caidSpouseApply                      = manager.get_answer_by_question_name('caidSpouseApply')
 ((r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true && (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false && ((caidSpouseGet == 'Yes'  &&  (vA_caidSpouseGetCoveredGroup == 'QMB'  || vA_caidSpouseGetCoveredGroup == 'SLMB' || vA_caidSpouseGetCoveredGroup == 'QI'))  || 
  (caidSpouseApply == 'Yes'  && (vA_caidSpouseApplyCoveredGroup == 'QMB' || vA_caidSpouseApplyCoveredGroup == 'SLMB' || vA_caidSpouseApplyCoveredGroup == 'QI'))) && liveWithSpouse == 'Yes')"
#@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.validation_rules = ""
#@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.validation_message= ""
@caidSpouseCoupleQmbSlmbQiResourceLimitExceed.save!

@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.text = "Do you have countable resources that exceed the Protected Resource Amount (PRA), and if so do the excess resources plus your spouse's resources exceed the C{RateCaidMostGroupsResourceLimit} resource limit?"
@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.all_inputs_text = "Do you have countable resources that exceed the Protected Resource Amount (PRA), and if so do the excess resources plus your spouse's resources exceed the resource limit?"
@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseSameCovGroup = FALSE AND ((vA_caidSpouseApplyCoveredGroup = Medical Institution AND userIsCaidCommunitySpouse = YES) 
#OR (vA_caidSpouseApplyCoveredGroup = Waiver AND userIsCaidCommunitySpouse = YES))
@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseSameCovGroup = WebCalc.find_by_name('r_VA_CaidUserSpouseSameCovGroup')
vA_caidSpouseApplyCoveredGroup  = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
userIsCaidCommunitySpouse       = manager.get_answer_by_question_name('userIsCaidCommunitySpouse')
 ((vA_caidSpouseApplyCoveredGroup == 'Medical Institution' && userIsCaidCommunitySpouse == 'Yes') || (vA_caidSpouseApplyCoveredGroup == 'Waiver' && userIsCaidCommunitySpouse == 'Yes')) &&
 (r_VA_CaidUserSpouseSameCovGroup.calculate manager) == false "
#@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.validation_rules = ""
#@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.validation_message= ""
@caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed.save!

#63	82.74	Has your spouse established a Work Incentive (WIN) account that contains (or will contain) only wages earned while your spouse is in MEDICAID WORKS?	caidSpouseWinAcctEstablishedForWorks
@caidSpouseWinAcctEstablishedForWorks.text = "Has your spouse established a Work Incentive (WIN) account that contains (or will contain) only wages earned while your spouse is in MEDICAID WORKS?"
@caidSpouseWinAcctEstablishedForWorks.default_answer = "No"
#IF ((vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSpouseSsiRecipientApplyWorks = Y) 
@caidSpouseWinAcctEstablishedForWorks.display_rules = "
vA_caidSpouseGetCoveredGroup        = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup      = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseSsiRecipientApplyWorks = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' || vA_caidSpouseApplyCoveredGroup == 'MEDICAID WORKS' ||  vA_CaidSpouseSsiRecipientApplyWorks == 'Yes'
"
@caidSpouseWinAcctEstablishedForWorks.save!

#45 54 63 65	82.75	Does your spouse have countable resources in a WIN account that exceed the ~VA_RateCaidWorksResourceLimit~ resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)	
#caidSpouseGetWorksResourceLimitExceed
@caidSpouseGetWorksResourceLimitExceed.text = "Does your spouse have countable resources in a WIN account that exceed the C{VA_RateCaidWorksResourceLimit} resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidSpouseGetWorksResourceLimitExceed.all_inputs_text = "Does your spouse have countable resources in a WIN account that exceed the resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidSpouseGetWorksResourceLimitExceed.default_answer = "No"
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND caidSpouseGet = Y AND vA_caidSpouseGetCoveredGroup = MEDICAID WORKS
#12/22/2011 revision
#IF r_VA_CaidUserSpouseBothGetOrApply = YES AND caidSpouseGet = Y AND caidSpouseWinAcctEstablishedForWorks = YES AND vA_caidSpouseGetCoveredGroup = MEDICAID WORKS
@caidSpouseGetWorksResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
caidSpouseGet                         = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseWinAcctEstablishedForWorks  = manager.get_answer_by_question_name('caidSpouseWinAcctEstablishedForWorks')
vA_caidSpouseGetCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
caidSpouseGet == 'Yes' && caidSpouseWinAcctEstablishedForWorks == 'Yes' && vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' && (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true
"
#@caidSpouseGetWorksResourceLimitExceed.validation_rules = ""
#@caidSpouseGetWorksResourceLimitExceed.validation_message= ""
@caidSpouseGetWorksResourceLimitExceed.save!

#63 64 65	82.76	Does your spouse have countable resources that are not in a WIN acount but that exceed the  ~RateCaidMostGroupsResourceLimit~ limit for MEDICAID WORKS?	caidSpouseGetWorksNonWinResourceLimitExceed
@caidSpouseGetWorksNonWinResourceLimitExceed.text = "Does your spouse have countable resources that are not in a WIN acount but that exceed the C{VA_RateCaidWorksResourceLimit} resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidSpouseGetWorksNonWinResourceLimitExceed.all_inputs_text = "Does your spouse have countable resources that are not in a WIN acount but that exceed the resource limit for MEDICAID WORKS? (Do NOT include deemed resources.)"
@caidSpouseGetWorksNonWinResourceLimitExceed.default_answer = "No"
#If r_VA_CaidUserSpouseBothGetOrApply = YES AND caidSpouseGet = Y AND caidSpouseWinAcctEstablishedForWorks = YES AND vA_caidSpouseGetCoveredGroup = MEDICAID WORKS
@caidSpouseGetWorksNonWinResourceLimitExceed.display_rules = "
r_VA_CaidUserSpouseBothGetOrApply     = WebCalc.find_by_name('r_VA_CaidUserSpouseBothGetOrApply')
caidSpouseGet                         = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseWinAcctEstablishedForWorks  = manager.get_answer_by_question_name('caidSpouseWinAcctEstablishedForWorks')
vA_caidSpouseGetCoveredGroup          = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
caidSpouseGet == 'Yes' && caidSpouseWinAcctEstablishedForWorks == 'Yes' && vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' && (r_VA_CaidUserSpouseBothGetOrApply.calculate manager) == true
"
@caidSpouseGetWorksNonWinResourceLimitExceed.save!

#In-Kind Support: Do you receive In-Kind Support from others in your household?
@inKind.text = "In-Kind Support: Do you receive In-Kind Support from others in your household?"
@inKind.default_answer = "Yes"
#If (ssiGet = Y OR  OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE)  
#AND ssiResourceLimitExceed <> Y AND ssiCoupleResourceLimitExceed <> Y 
#AND (liveWithSpouseAndOthers = Y OR liveWithOthers = Y OR (liveWithParents =  Y AND rAge > 17)) 
#AND vA_liveWithSpouseAuxGrantFacility <> Y   AND liveWithSpouseInFacility <> Y AND vA_LiveInAuxGrantFacility <> Y AND LiveInFacility <> Y Review
#If (ssiGet = Y OR  OR r_VA_CaidCovGroupPsdcPadc1619b = TRUE)  AND ssiResourceLimitExceed <> Y AND ssiCoupleResourceLimitExceed <> Y AND (liveWithSpouseAndOthers = Y OR liveWithOthers = Y OR (liveWithParents =  Y AND rAge > 17)) 
#AND vA_liveWithSpouseAuxGrantFacility <> Y AND liveWithSpouseInFacility <> Y AND vA_LiveInAuxGrantFacility <> Y AND liveInFacility <> Y
#Nov 7 2011 review 
#If (ssiGet = Y OR  OR r_VA_CaidCovGroupPsdcPadc1619b = TRUE)  AND ssiResourceLimitExceed <> Y AND ssiCoupleResourceLimitExceed <> Y AND (liveWithSpouseAndOthers = Y OR liveWithOthers = Y 
#OR (liveWithParents =  Y AND rAge > 17)) AND vA_liveWithSpouseAuxGrantFacility <> Y AND liveWithSpouseInFacility <> Y AND vA_LiveInAuxGrantFacility <> Y AND liveInFacility <> Y
#=IF(AND(OR(L33="YES";$WebVACalc.E350=1);L107<>"YES";L108<>"YES";OR(L24="YES";L29="YES";AND(L28="YES";$WebCalcs.E11>17));L37<>"YES";L25<>"YES";L36<>"YES";L30<>"YES");"Appear";"no")
#33 ssiGet
#350 r_VA_CaidCovGroupPsdcPadc1619b
#107 ssiResourceLimitExceed
#108 ssiCoupleResourceLimitExceed
#24 liveWithSpouseAndOthers
#29 liveWithOthers
#28 liveWithParents
#11 rAge
#37 vA_liveWithSpouseAuxGrantFacility
#25 liveWithSpouseInFacility
#36 vA_LiveInAuxGrantFacility
#30 liveInFacility

@inKind.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
ssiResourceLimitExceed            = manager.get_answer_by_question_name('ssiResourceLimitExceed ')
ssiCoupleResourceLimitExceed      = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
liveWithSpouseAndOthers           = manager.get_answer_by_question_name('liveWithSpouseAndOthers')
liveWithOthers                    = manager.get_answer_by_question_name('liveWithOthers')
liveWithParents                   = manager.get_answer_by_question_name('liveWithParents')
rAge                              = WebCalc.find_by_name('rAge')
vA_liveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
liveWithSpouseInFacility          = manager.get_answer_by_question_name('liveWithSpouseInFacility')
vA_LiveInAuxGrantFacility         = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
liveInFacility                    = manager.get_answer_by_question_name('liveInFacility')
(ssiResourceLimitExceed != 'Yes') && (ssiCoupleResourceLimitExceed != 'Yes') && 
 ((liveWithSpouseAndOthers == 'Yes' || liveWithOthers == 'Yes') || (liveWithParents ==  'Yes' && Float(rAge.calculate manager) > 17)) && 
(vA_liveWithSpouseAuxGrantFacility != 'Yes') && (liveWithSpouseInFacility != 'Yes') && (vA_LiveInAuxGrantFacility != 'Yes') && (liveInFacility != 'Yes') && 
(ssiGet == 'Yes' || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true )
"
#@inKind.validation_rules = ""
#@inKind.validation_message= ""
@inKind.save!

@inKindThird.text = "1/3rd Reduction Rule: Is this In-Kind Support considered Full, that is, is it figured using the Value of the One-Third Reduction (VTR)?"
@inKindThird.default_answer = "Yes"
#If inKind = Y
@inKindThird.display_rules = "
inKind = manager.get_answer_by_question_name('inKind')
inKind == 'Yes'
"
#@inKindThird.validation_rules = ""
#@inKindThird.validation_message= ""
@inKindThird.save!

@inKindPMVAmt.text = "PMV Rule: How much In-Kind Support are you considered by SSA to receive?  (Default is the Presumed Maximum Value or PMV.)"
#EXPRESSION:  IF spouseSsiGet = Y, THEN ratePmvCoupleAmt, ELSE ratePmvAmt
@inKindPMVAmt.default_answer = "expression= 
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ratePmvCoupleAmt = WebCalc.find_by_name('ratePmvCoupleAmt')
ratePmvCoupleAmt = Float(ratePmvCoupleAmt.calculate manager)
ratePmvAmt = WebCalc.find_by_name('ratePmvAmt')
ratePmvAmt = Float(ratePmvAmt.calculate manager)
if spouseSsiGet == 'Yes' then
  ratePmvCoupleAmt
else
  ratePmvAmt
end"
#If inKindThird = N
@inKindPMVAmt.display_rules = "
inKindThird = manager.get_answer_by_question_name('inKindThird')
inKindThird == 'No'
"
#@inKindPMVAmt.validation_rules = ""
#@inKindPMVAmt.validation_message= ""
@inKindPMVAmt.save!

@ssdiAmtSelfFull.text = "What is your Primary Insurance Amount (the full amount of your monthly SSDI benefit based on your earnings record)?"
@ssdiAmtSelfFull.default_answer = "0.00"
#If ssdiEarnRec = Self
@ssdiAmtSelfFull.display_rules = "
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiEarnRec == 'Self'
"
@ssdiAmtSelfFull.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@ssdiAmtSelfFull.validation_message= "Enter positive numbers only.  Do not enter $."
@ssdiAmtSelfFull.save!

@ssdiAmtOtherFull.text = "What is the full monthly amount of your SSDI cash benefit (assuming no adjustment for Medicare Part B premium or previous under/over-payments)?"
@ssdiAmtOtherFull.default_answer = "0.00"
#If ssdiEarnRec = Other
@ssdiAmtOtherFull.display_rules = "
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiEarnRec == 'Other'"
@ssdiAmtOtherFull.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@ssdiAmtOtherFull.validation_message= "Enter positive numbers only.  Do not enter $."
@ssdiAmtOtherFull.save!

@unearnAmt.text = "How much other unearned income per month do you receive? (Do not count any SSI or SSDI.)"
@unearnAmt.default_answer = "0.00"
#If ssdiGet = Y OR (ssiGet = Y AND (ssiResourceLimitExceed <> Y OR ssiCoupleResourceLimitExceed <> Y) 
#OR ((caidGet = Y OR caidApply = Y) AND (caidMostGroupsResourceLimitExceed <>Y OR caidCoupleMostGroupsResourceLimitExceed <>Y))
@unearnAmt.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssiResourceLimitExceed = manager.get_answer_by_question_name('ssiResourceLimitExceed')
ssiCoupleResourceLimitExceed = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
(ssdiGet == 'Yes') || (ssiGet == 'Yes'  && (!(ssiResourceLimitExceed == 'Yes') && !(ssiResourceLimitExceed == 'Yes')) || ((caidGet == 'Yes' || caidApply == 'Yes') && 
(!(caidMostGroupsResourceLimitExceed == 'Yes') && !(caidCoupleMostGroupsResourceLimitExceed == 'Yes'))))
"
@unearnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@unearnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@unearnAmt.save!

@unearnInfrequentAmt.text = "How much of your C{q_unearnAmt} of unearned income is infrequent or irregular?"
@unearnInfrequentAmt.all_inputs_text = "How much of your unearned income is infrequent or irregular?"
@unearnInfrequentAmt.default_answer = "0.00"
#IF unearnAmt > 0 AND (ssiGet = Y OR caidGet = Y OR caidApply = Y)
@unearnInfrequentAmt.display_rules = "
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
unearnAmt.to_f > 0 && (ssiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes') 
"
@unearnInfrequentAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  unearnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@unearnInfrequentAmt.validation_message= "You can not enter an amount higher than your unearned income, not counting SSDI or SSI.  Enter positive numbers only. Do not enter $."
@unearnInfrequentAmt.save!

@unearnIncomeBasedOnNeedAmt.text = "How much of your C{q_unearnAmt} of unearned income would SSA define as Income Based On Need?"
@unearnIncomeBasedOnNeedAmt.all_inputs_text = "How much of your unearned income would SSA define as Income Based On Need?"
@unearnIncomeBasedOnNeedAmt.default_answer = "0.00"
#IF unearnAmt > 0 AND (ssiGet = Y OR caidGet = Y OR caidApply = Y)
@unearnIncomeBasedOnNeedAmt.display_rules = "
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
(unearnAmt.to_f > 0) && (ssiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes') 
"
@unearnIncomeBasedOnNeedAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  unearnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@unearnIncomeBasedOnNeedAmt.validation_message= "You can not enter an amount higher than your unearned income, not counting SSDI or SSI (C{q_unearnAmt}).  Enter positive numbers only.  Do not enter $."
# @unearnIncomeBasedOnNeedAmt.validation_message= "You can not enter an amount higher than your unearned income, not counting SSDI or SSI (C{q_unearnAmt}).  Enter positive numbers only.  Do not enter $.
@unearnIncomeBasedOnNeedAmt.save!

@unearnAssistanceBasedOnNeedAmt.text = "How much of your C{q_unearnAmt} of unearned income would SSA define as Assistance Based On Need?"
@unearnAssistanceBasedOnNeedAmt.all_inputs_text = "How much of your unearned income would SSA define as Assistance Based On Need?"
@unearnAssistanceBasedOnNeedAmt.default_answer = "0.00"
#IF unearnAmt > 0 AND (ssiGet = Y OR caidGet = Y OR caidApply = Y)
@unearnAssistanceBasedOnNeedAmt.display_rules = "
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
(unearnAmt.to_f > 0) && (ssiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes')"
@unearnAssistanceBasedOnNeedAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  unearnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@unearnAssistanceBasedOnNeedAmt.validation_message= "You can not enter an amount higher than your unearned income, not counting SSDI or SSI C{q_unearnAmt}. Enter positive numbers only.  Do not enter $."
@unearnAssistanceBasedOnNeedAmt.save!

@spouseDiAmtSelfFull.text = "What is your spouse's Primary Insurance Amount (the full amount of your spouse's monthly SSDI benefit based on your spouse's earnings record)?"
@spouseDiAmtSelfFull.default_answer = "0.00"
#IF spouseSsdiEarnRec = Self
@spouseDiAmtSelfFull.display_rules = "
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseSsdiEarnRec == 'Self'"
@spouseDiAmtSelfFull.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseDiAmtSelfFull.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseDiAmtSelfFull.save!
                                              
@spouseDiAmtOtherFull.text ="What is the full monthly amount of your spouse's SSDI cash benefit (assuming no adjustment for Medicare Part B premium or previous under/over-payments)?"
@spouseDiAmtOtherFull.default_answer = "0.00"
#IF spouseSsdiEarnRec = Other
@spouseDiAmtOtherFull.display_rules = "spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseSsdiEarnRec == 'Other'"
@spouseDiAmtOtherFull.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseDiAmtOtherFull.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseDiAmtOtherFull.save!

@spouseUnEarnAmt.text ="How much unearned income per month (other than SSDI or SSI) does your spouse receive? "
@spouseUnEarnAmt.default_answer = "0.00"
#IF (spouseSsiGet = Y AND ssiCoupleResourceLimitExceed <> Y) OR ((caidSpouseGet = Y OR caidSpouseApply = Y) AND caidCoupleMostGroupsResourceLimitExceed <> Y)
@spouseUnEarnAmt.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiCoupleResourceLimitExceed = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
caidCoupleResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleResourceLimitExceed')
(spouseSsiGet == 'Yes' && ssiCoupleResourceLimitExceed != 'Yes') || ((caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') && caidCoupleResourceLimitExceed != 'Yes')
"
@spouseUnEarnAmt.validation_rules = "answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseUnEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseUnEarnAmt.save!

@spouseUnearnInfrequentAmt.text ="How much of your spouse's C{q_spouseUnEarnAmt} of unearned income does your spouse receive infrequently or irregularly?"
@spouseUnearnInfrequentAmt.all_inputs_text ="How much of your spouse's unearned income does your spouse receive infrequently or irregularly?"
@spouseUnearnInfrequentAmt.default_answer = "0.00"
#IF spouseUnEarnAmt > 0
@spouseUnearnInfrequentAmt.display_rules = "
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
spouseUnEarnAmt.to_f > 0"
@spouseUnearnInfrequentAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  spouseUnEarnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@spouseUnearnInfrequentAmt.validation_message= "You can not enter an amount higher than your spouse's unearned income, (C{q_spouseUnEarnAmt}) not counting SSDI or SSI.  Do not enter $."
@spouseUnearnInfrequentAmt.save!

@spouseUnearnIncomeBasedOnNeedAmt.text ="How much of your spouse's C{q_spouseUnEarnAmt} of unearned income would SSA define as INCOME Based On Need?"
@spouseUnearnIncomeBasedOnNeedAmt.all_inputs_text ="How much of your spouse's unearned income would SSA define as INCOME Based On Need?"
@spouseUnearnIncomeBasedOnNeedAmt.default_answer = "0.00"
#IF spouseUnEarnAmt > 0
@spouseUnearnIncomeBasedOnNeedAmt.display_rules = "
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
spouseUnEarnAmt.to_f > 0"
@spouseUnearnIncomeBasedOnNeedAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  spouseUnEarnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@spouseUnearnIncomeBasedOnNeedAmt.validation_message= "You can not enter an amount higher than your spouse's unearned income, not counting SSDI or SSI.  Do not enter $."
@spouseUnearnIncomeBasedOnNeedAmt.save!

@spouseUnearnAssistanceBasedOnNeedAmt.text ="How much of your spouse's C{q_spouseUnEarnAmt} of unearned income would SSA define as ASSISTANCE Based On Need?"
@spouseUnearnAssistanceBasedOnNeedAmt.all_inputs_text ="How much of your spouse's unearned income would SSA define as ASSISTANCE Based On Need?"
@spouseUnearnAssistanceBasedOnNeedAmt.default_answer = "0.00"
@spouseUnearnAssistanceBasedOnNeedAmt.display_rules = "
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt').to_f
spouseUnEarnAmt > 0
"
@spouseUnearnAssistanceBasedOnNeedAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt').to_f
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  spouseUnEarnAmt then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end
"
@spouseUnearnAssistanceBasedOnNeedAmt.validation_message= "You can not enter an amount higher than your spouse's unearned income, (C{q_spouseUnEarnAmt}) not counting SSDI or SSI.  Do not enter $."
@spouseUnearnAssistanceBasedOnNeedAmt.save!

@ssdiEarnAmt.text ='How much do you EARN monthly in gross wages, salary or self-employment? [NOTE: Select "Help" for difference between Earn & Receive.]'
@ssdiEarnAmt.default_answer = "0.00"
#If  ssdiGet = Y
@ssdiEarnAmt.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiGet == 'Yes'"
@ssdiEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssdiEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssdiEarnAmt.save!

@ssiOrCaidEarnAmt.text ='How much do you RECEIVE monthly in gross wages, salary or self-employment? [NOTE: Select "Help" for difference between Earn & Receive.]'
@ssiOrCaidEarnAmt.default_answer = "expression= 
unless manager.get_answer_by_question_name('ssdiEarnAmt').blank? 
 ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
 if ssdiEarnAmt.to_f > 0  then
   ssdiEarnAmt.to_f
 else
   '0.00'
 end
else
   '0.00'
end"
#If (ssiGet = Y AND liveWithSpouse = N AND ssiResourceLimitExceed <> Y) OR (ssiGet = Y AND liveWithSpouse = Y AND ssiCoupleResourceLimitExceed <> Y) 
#OR ((caidGet = Y OR caidApply = Y) AND liveWithSpouse = N AND caidMostGroupsResourceLimitExceed <>Y) 
#OR ((caidGet = Y OR caidApply = Y) AND liveWithSpouse = Y AND caidCoupleMostGroupsResourceLimitExceed <>Y)
#edit on Nov 3 2011 THis change also made manually on VCU test server.  Change  liveWithSpouse = N to liveWithSpouse  != Yes in 2 places
#NOv 8 WB 58 review
#If (ssiGet = Y AND liveWithSpouse = N AND ssiResourceLimitExceed <> Y) OR (ssiGet = Y AND liveWithSpouse = Y AND ssiCoupleResourceLimitExceed <> Y) 
#OR ((caidGet = Y OR caidApply = Y) AND liveWithSpouse = N AND caidMostGroupsResourceLimitExceed <>Y) OR ((caidGet = Y OR caidApply = Y) AND  liveWithSpouse = Y AND caidCoupleMostGroupsResourceLimitExceed <>Y)
#=IF(OR(AND(L33="YES";L18<>"YES";L108<>"YES");AND(L33="YES";L18="YES";L109<>"YES");AND(OR(L40="YES";L44="YES");L18<>"YES";L110<>"YES");AND(OR(L40="YES";L44="YES");L18="YES";L111<>"YES"));"Appear";"no")
#33 ssiGet
#18 liveWithSpouse
#108 ssiResourceLimitExceed
#18 liveWithSpouse
#BOb think the descrition is wrong, keeping with L18 <> Y
@ssiOrCaidEarnAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
ssiResourceLimitExceed = manager.get_answer_by_question_name('ssiResourceLimitExceed')
ssiCoupleResourceLimitExceed = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
(ssiGet == 'Yes' && liveWithSpouse != 'Yes' && ssiResourceLimitExceed != 'Yes') || (ssiGet == 'Yes' && liveWithSpouse == 'Yes' && ssiCoupleResourceLimitExceed != 'Yes') || 
((caidGet == 'Yes' || caidApply == 'Yes') && liveWithSpouse != 'Yes' && caidMostGroupsResourceLimitExceed !='Yes') || 
((caidGet == 'Yes' || caidApply == 'Yes') && liveWithSpouse == 'Yes' && caidCoupleMostGroupsResourceLimitExceed != 'Yes')
"
@ssiOrCaidEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@ssiOrCaidEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiOrCaidEarnAmt.save!

#these 4 questions added on 12.21.2011 per wbk 64

@vA_CaidWorksCompetitiveEmployNow.text = "Are you competitively employed in an integrated setting, earning at least the minimum or prevailing wage?"
@vA_CaidWorksCompetitiveEmployNow.default_answer = "Yes"
#IF ((vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSsiRecipientApplyWorks = Y) AND ssiOrCaidEarnAmt > 0)
@vA_CaidWorksCompetitiveEmployNow.display_rules = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidSsiRecipientApplyWorks = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
((vA_CaidGetCoveredGroup == 'MEDICAID WORKS' || vA_CaidApplyCoveredGroup == 'MEDICAID WORKS' || vA_CaidSsiRecipientApplyWorks == 'Yes') && ssiOrCaidEarnAmt.to_f > 0)
ssiOrCaidEarnAmt.to_f > 0"
#Zero or Positive Number <= ssiOrCaidEarnAmt
#@xx.validation_rules = ""
#@xx.validation_message= ""
@vA_CaidWorksCompetitiveEmployNow.save!

@vA_CaidWorksSelfEmployNow.text ="Are you earning money through your own business?"
@vA_CaidWorksSelfEmployNow.default_answer = "Yes"
#IF  vA_CaidWorksCompetitiveEmployNow = NO
@vA_CaidWorksSelfEmployNow.display_rules = "
vA_CaidWorksCompetitiveEmployNow = manager.get_answer_by_question_name('vA_CaidWorksCompetitiveEmployNow')
vA_CaidWorksCompetitiveEmployNow == 'No'"
#@xx.validation_rules = ""
#@xx.validation_message= ""
@vA_CaidWorksSelfEmployNow.save!

@vA_CaidLostJobWithinSixMo.text ="Have you lost your competitive job within the last 6 months because of illness or disability or through no fault of your own?"
@vA_CaidLostJobWithinSixMo.default_answer = "No"
#IF (vA_CaidGetCoveredGroup = MEDICAID WORKS AND vA_CaidWorksCompetitiveEmployNow <> YES AND vA_CaidWorksSelfEmployNow <> YES
@vA_CaidLostJobWithinSixMo.display_rules = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidWorksCompetitiveEmployNow = manager.get_answer_by_question_name('vA_CaidWorksCompetitiveEmployNow')
vA_CaidWorksSelfEmployNow = manager.get_answer_by_question_name('vA_CaidWorksSelfEmployNow')
vA_CaidGetCoveredGroup == 'MEDICAID WORKS' && vA_CaidWorksCompetitiveEmployNow != 'Yes' && vA_CaidWorksSelfEmployNow != 'Yes'"
#@xx.validation_rules = ""
#@xx.validation_message= ""
@vA_CaidLostJobWithinSixMo.save!

@vA_CaidWorksEmployFuture.text ="Do you have a start date to be employed in an integrated setting, earning at least the minimum or prevailing wage?"
@vA_CaidWorksEmployFuture.default_answer = "Yes"
#IF ((vA_CaidApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSsiRecipientApplyWorks = YES) AND vA_CaidWorksCompetitiveEmployNow <> YES AND vA_CaidWorksSelfEmployNow<> YES)
@vA_CaidWorksEmployFuture.display_rules = "
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
vA_CaidSsiRecipientApplyWorks = manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks')
vA_CaidWorksCompetitiveEmployNow = manager.get_answer_by_question_name('vA_CaidWorksCompetitiveEmployNow')
vA_CaidWorksSelfEmployNow = manager.get_answer_by_question_name('vA_CaidWorksSelfEmployNow')
((vA_CaidApplyCoveredGroup == 'MEDICAID WORKS' || vA_CaidSsiRecipientApplyWorks == 'Yes') && vA_CaidWorksCompetitiveEmployNow != 'Yes' && vA_CaidWorksSelfEmployNow != 'Yes')"
#Zero or Positive Number <= ssiOrCaidEarnAmt
#@xx.validation_rules = ""
#@xx.validation_message= ""
@vA_CaidWorksEmployFuture.save!


@earnInfrequentAmt.text ="How much of the C{q_ssiOrCaidEarnAmt} you RECEIVE is infrequent or irregular?"
@earnInfrequentAmt.all_inputs_text ="How much of the earnings you RECEIVE is infrequent or irregular?"
@earnInfrequentAmt.default_answer = "0.00"
#If ssiOrCaidEarnAmt > 0
@earnInfrequentAmt.display_rules = "
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
ssiOrCaidEarnAmt.to_f > 0"
#Zero or Positive Number <= ssiOrCaidEarnAmt
@earnInfrequentAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  ssiOrCaidEarnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end"
@earnInfrequentAmt.validation_message= "You can not enter an amount higher than the earned income you RECEIVE (C{q_ssiOrCaidEarnAmt}).  Enter positive numbers only.  Do not enter $."
@earnInfrequentAmt.save!

@ssiIndividThreshold.text ="Individualized Threshold:Has an individualized earnings threshold been established for you (above which you lose 1619(b) Medicaid coverage)?"
@ssiIndividThreshold.default_answer = "No"
#If ssiGet = Y OR vA_CaidGetCoveredGroup = 1619b AND (ssiOrCaidEarnAmt > VA_RateSsiCaidMonthlyThresholdAmt)
@ssiIndividThreshold.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold  = WebCalc.find_by_name('rSsiIndividThreshold')
rSsiIndividThreshold = Float(rSsiIndividThreshold.calculate manager)
(((ssiGet == 'Yes') || (vA_CaidGetCoveredGroup == '1619b')) && (ssiOrCaidEarnAmt.to_f > (rSsiIndividThreshold)))
"
#@ssiIndividThreshold.validation_rules = ""
#@ssiIndividThreshold.validation_message= ""
@ssiIndividThreshold.save!

@ssiAnnualIndividThresholdAmt.text ="How much is your individualized earnings threshold (annual amount)?"
@ssiAnnualIndividThresholdAmt.default_answer = "0.00"
#If ssiIndividThreshold = Y
@ssiAnnualIndividThresholdAmt.display_rules = "
ssiIndividThreshold = manager.get_answer_by_question_name('ssiIndividThreshold')
ssiIndividThreshold == 'Yes'"
@ssiAnnualIndividThresholdAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
rSsiIndividThreshold  = WebCalc.find_by_name('rSsiIndividThreshold')
rSsiIndividThreshold = Float(rSsiIndividThreshold.calculate manager)
 if answer != nil then
     true if Float(answer) >=0  && ( Float(answer) > (ssiIndividThreshold * 12)) rescue false
   else 
     true
 end
"
@ssiAnnualIndividThresholdAmt.validation_message= "Your Individualized Threshold amount must be larger than the annual threshold amount for your state, C{rSsiIndividThresholdAnnual}."
@ssiAnnualIndividThresholdAmt.save!

@spouseSsdiEarnAmt.text ='How much monthly income from wages, salary or self-employment does your spouse EARN? [NOTE: Select "Help" for difference between Earn & Receive.]'
@spouseSsdiEarnAmt.default_answer = "0.00"
#IF spouseSsdiGet = Y
@spouseSsdiEarnAmt.display_rules = "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiGet == 'Yes'"
@spouseSsdiEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseSsdiEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseSsdiEarnAmt.save!

@spouseSsiOrCaidEarnAmt.text ='How much monthly income from wages, salary or self-employment does your spouse RECEIVE? [NOTE: Select "Help" for difference between Earn & Receive.]'
@spouseSsiOrCaidEarnAmt.default_answer = "0.00"
#IF (spouseSsiGet = Y AND ssiCoupleResourceLimitExceed <> Y) OR ((caidSpouseGet = Y OR caidSpouseApply = Y) AND caidCoupleMostGroupsResourceLimitExceed <> Y)
#replaced by rSpouseSsiOrCaidEarnAmtDisplayRule
@spouseSsiOrCaidEarnAmt.display_rules = "
rSpouseSsiOrCaidEarnAmtDisplayRule  = WebCalc.find_by_name('rSpouseSsiOrCaidEarnAmtDisplayRule')
rSpouseSsiOrCaidEarnAmtDisplayRule = (rSpouseSsiOrCaidEarnAmtDisplayRule.calculate manager)
rSpouseSsiOrCaidEarnAmtDisplayRule == true
"
@spouseSsiOrCaidEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseSsiOrCaidEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseSsiOrCaidEarnAmt.save!


#63 64	108.1	Is your spouse competitively employed in an integrated setting, earning at least the minimum or prevailing wage?	vA_CaidSpouseWorksCompetitiveEmployNow
@vA_CaidSpouseWorksCompetitiveEmployNow.text ='Is your spouse competitively employed in an integrated setting, earning at least the minimum or prevailing wage?'
@vA_CaidSpouseWorksCompetitiveEmployNow.default_answer = "Yes"
#IF (vA_caidSpouseGetCoveredGroup OR vA_caidSpouseApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSpouseSsiRecipientApplyWorks = Y) AND spouseSsiOrCaidEarnAmt > 0
@vA_CaidSpouseWorksCompetitiveEmployNow.display_rules = "
vA_caidSpouseGetCoveredGroup        = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseApplyCoveredGroup      = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseSsiRecipientApplyWorks = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
spouseSsiOrCaidEarnAmt              = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
(vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' ||  vA_caidSpouseApplyCoveredGroup == 'MEDICAID WORKS' || vA_CaidSpouseSsiRecipientApplyWorks == 'Yes') && spouseSsiOrCaidEarnAmt.to_f > 0
"
@vA_CaidSpouseWorksCompetitiveEmployNow.save!

#63 64	108.2	Is your spouse earning money through your spouse's own business?	vA_CaidSpouseWorksSelfEmployNow
@vA_CaidSpouseWorksSelfEmployNow.text ="Is your spouse earning money through your spouse's own business?"
@vA_CaidSpouseWorksSelfEmployNow.default_answer = "Yes"
#IF vA_CaidSpouseWorksCompetitiveEmployNow = NO
@vA_CaidSpouseWorksSelfEmployNow.display_rules = "
vA_CaidSpouseWorksCompetitiveEmployNow = manager.get_answer_by_question_name('vA_CaidSpouseWorksCompetitiveEmployNow')
vA_CaidSpouseWorksCompetitiveEmployNow == 'No'"
@vA_CaidSpouseWorksSelfEmployNow.save!

#64	108.25	 Has your spouse lost the competitive job within the last 6 months because of illness or disability or through no fault of your spouse's own?	vA_CaidSpouseLostJobWithinSixMo
@vA_CaidSpouseLostJobWithinSixMo.text ="Has your spouse lost the competitive job within the last 6 months because of illness or disability or through no fault of your spouse's own?"
@vA_CaidSpouseLostJobWithinSixMo.default_answer = "No"
#IF (vA_caidSpouseGetCoveredGroup = MEDICAID WORKS AND vA_CaidSpouseWorksCompetitiveEmployNow <> YES AND vA_CaidSpouseWorksSelfEmployNow <> YES
@vA_CaidSpouseLostJobWithinSixMo.display_rules = "
vA_caidSpouseGetCoveredGroup                = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_CaidSpouseWorksCompetitiveEmployNow      = manager.get_answer_by_question_name('vA_CaidSpouseWorksCompetitiveEmployNow')
vA_CaidSpouseWorksSelfEmployNow             = manager.get_answer_by_question_name('vA_CaidSpouseWorksSelfEmployNow')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseGet == 'Yes' && (vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS' || vA_CaidSpouseWorksCompetitiveEmployNow != 'Yes' || vA_CaidSpouseWorksSelfEmployNow != 'Yes') 
"
@vA_CaidSpouseLostJobWithinSixMo.save!

#63 64	108.3	Does your spouse have a start date to be employed in an integrated setting, earning at least the minimum or prevailing wage?	vA_CaidSpouseWorksEmployFuture
@vA_CaidSpouseWorksEmployFuture.text ='Does your spouse have a start date to be employed in an integrated setting, earning at least the minimum or prevailing wage?'
@vA_CaidSpouseWorksEmployFuture.default_answer = "No"
#IF ((vA_caidSpouseApplyCoveredGroup = MEDICAID WORKS OR vA_CaidSpouseSsiRecipientApplyWorks = Y) AND (vA_CaidSpouseWorksCompetitiveEmployNow <> YES AND vA_CaidSpouseWorksSelfEmployNow <> YES))
@vA_CaidSpouseWorksEmployFuture.display_rules = "
vA_caidSpouseApplyCoveredGroup                = manager.get_answer_by_question_name('vA_caidSpouseApplyCoveredGroup')
vA_CaidSpouseSsiRecipientApplyWorks           = manager.get_answer_by_question_name('vA_CaidSpouseSsiRecipientApplyWorks')
vA_CaidSpouseWorksCompetitiveEmployNow        = manager.get_answer_by_question_name('vA_CaidSpouseWorksCompetitiveEmployNow')
vA_CaidSpouseWorksSelfEmployNow               = manager.get_answer_by_question_name('vA_CaidSpouseWorksSelfEmployNow')
((vA_caidSpouseApplyCoveredGroup == 'MEDICAID WORKS' || vA_CaidSpouseSsiRecipientApplyWorks == 'Yes') && (vA_CaidSpouseWorksCompetitiveEmployNow != 'Yes' && vA_CaidSpouseWorksSelfEmployNow != 'Yes'))"
@vA_CaidSpouseWorksEmployFuture.save!

@spouseEarnInfrequentAmt.text ="How much of the C{q_spouseSsiOrCaidEarnAmt} that your spouse RECEIVES is infrequent or irregular?"
@spouseEarnInfrequentAmt.all_inputs_text ="How much of the earnings that your spouse RECEIVES is infrequent or irregular?"
@spouseEarnInfrequentAmt.default_answer = "0.00"
#If spouseSsiOrCaidEarnAmt > 0
@spouseEarnInfrequentAmt.display_rules = "
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt.to_f > 0"
#Zero or Positive Number <= spouseSsiOrCaidEarnAmt
@spouseEarnInfrequentAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
if answer != nil then
    if (true if (Float(answer) >= 0) rescue false) then
        if Float(answer) <=  spouseSsiOrCaidEarnAmt.to_f then
          true
        else 
          false
        end
    else
      false
    end  
else       
    true
end"
@spouseEarnInfrequentAmt.validation_message= "You can not enter an amount higher than the earned income your spouse RECEIVES (C{q_spouseSsiOrCaidEarnAmt}).  Enter positive numbers only.  Do not enter $."
@spouseEarnInfrequentAmt.save!

@spouseIndividThreshold.text ="Spouse Individualized Threshold:  Has an individualized earnings threshold been established for your spouse (above which your spouse loses 1619(b) Medicaid coverage)?"
@spouseIndividThreshold.default_answer = "No"
#If (spouseSsiGet = Y OR vA_caidSpouseGetCoveredGroup =  1619b) AND (spouseSsiOrCaidEarnAmt  > VA_RateSsiCaidMonthlyThresholdAmt)
@spouseIndividThreshold.display_rules = "
spouseSsiGet                  = manager.get_answer_by_question_name('spouseSsiGet')
vA_caidSpouseGetCoveredGroup  = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
spouseSsiOrCaidEarnAmt        = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
rSsiIndividThreshold          = WebCalc.find_by_name('rSsiIndividThreshold')
(((spouseSsiGet == 'Yes') || (vA_caidSpouseGetCoveredGroup == '1619b')) && (spouseSsiOrCaidEarnAmt.to_f > (Float(rSsiIndividThreshold.calculate manager))))
"
#@spouseIndividThreshold.validation_rules = ""
#@spouseIndividThreshold.validation_message= ""
@spouseIndividThreshold.save!

@spouseAnnualIndividThresholdAmt.text ="How much is your spouse's individualized earnings threshold (annual amount)?"
@spouseAnnualIndividThresholdAmt.default_answer = "0.00"
#If spouseIndividThreshold = Y
@spouseAnnualIndividThresholdAmt.display_rules = "
spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
spouseIndividThreshold == 'Yes'
"
@spouseAnnualIndividThresholdAmt.validation_rules = "
rSsiIndividThreshold  = WebCalc.find_by_name('rSsiIndividThreshold')
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) > (Float(rSsiIndividThreshold.calculate manager) * 12)) rescue false
  else 
    true
end
"
@spouseAnnualIndividThresholdAmt.validation_message= "Your spouse's Individualized Threshold amount must be larger than the annual threshold amount for your state, (C{rSsiIndividThresholdAnnual})."
@spouseAnnualIndividThresholdAmt.save!

@spouseWhoIsDeemedEarnAmt.text ="How much earned income does your spouse receive per month?"
@spouseWhoIsDeemedEarnAmt.default_answer = "0.00"
#If spouseSsiOrCaidEarnAmt Appear Calc <> Appear AND (ssiSpouseDeem = Y OR vA_CaidSpouseDeem = Y) AND (sitDate - spouseBirthDate) < 22 
@spouseWhoIsDeemedEarnAmt.display_rules = "
rSpouseSsiOrCaidEarnAmtDisplayRule  = WebCalc.find_by_name('rSpouseSsiOrCaidEarnAmtDisplayRule')
ssiSpouseDeem                       = manager.get_answer_by_question_name('ssiSpouseDeem')
vA_CaidSpouseDeem                   = manager.get_answer_by_question_name('vA_CaidSpouseDeem')
rSpouseAge                          = WebCalc.find_by_name('rSpouseAge')
(ssiSpouseDeem == 'Yes' || vA_CaidSpouseDeem == 'Yes') && Float(rSpouseAge.calculate manager) < 22 && (rSpouseSsiOrCaidEarnAmtDisplayRule.calculate manager) == true
"
@spouseWhoIsDeemedEarnAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseWhoIsDeemedEarnAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseWhoIsDeemedEarnAmt.save!

@disWorkExpAmt.text ="What is the monthly amount of your disability-related work expenses?"
@disWorkExpAmt.default_answer = "0.00"
#If ssdiEarnAmt > 0 OR ssiOrCaidEarnAmt > 0
@disWorkExpAmt.display_rules = "
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
(ssdiEarnAmt.to_f > 0 || ssiOrCaidEarnAmt.to_f > 0)"
@disWorkExpAmt.validation_rules = "answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@disWorkExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@disWorkExpAmt.save!

@spouseDisWorkExpAmt.text ="How much are your spouse's monthly disability-related work expenses?"
@spouseDisWorkExpAmt.default_answer = "0.00"
#If spouseSsdiEarnAmt > 0 OR spouseSsiOrCaidEarnAmt > 0
@spouseDisWorkExpAmt.display_rules = "
spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
(spouseSsdiEarnAmt.to_f > 0 ) || (spouseSsiOrCaidEarnAmt.to_f > 0 )
"
@spouseDisWorkExpAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@spouseDisWorkExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseDisWorkExpAmt.save!

@estEarnTaxAmt.text ="How much are the monthly estimated taxes on your earnings?"
@estEarnTaxAmt.default_answer = "0.00"
#If ssdiEarnAmt > 0 OR ssiOrCaidEarnAmt > 0
@estEarnTaxAmt.display_rules = "
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
ssdiEarnAmt.to_f > 0 || ssiOrCaidEarnAmt.to_f > 0"
@estEarnTaxAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@estEarnTaxAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@estEarnTaxAmt.save!

@spouseEstEarnTaxAmt.text ="How much are your spouse's monthly estimated taxes on earnings?"
@spouseEstEarnTaxAmt.default_answer = "0.00"
#If spouseSsdiEarnAmt > 0 OR  spouseSsiOrCaidEarnAmt > 0
@spouseEstEarnTaxAmt.display_rules = "
spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
(spouseSsdiEarnAmt.to_f > 0 ) || (spouseSsiOrCaidEarnAmt.to_f > 0)"
@spouseEstEarnTaxAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseEstEarnTaxAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseEstEarnTaxAmt.save!

#65	116.2	How much are you spending on MEDICAID WORKS premiums?	worksPremiumAmt
@worksPremiumAmt.text ="How much are you spending on MEDICAID WORKS premiums?"
@worksPremiumAmt.default_answer = "0.00"
#If vA_CaidGetCoveredGroup = MEDICAID WORKS
@worksPremiumAmt.display_rules = "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidGetCoveredGroup == 'MEDICAID WORKS'"
@worksPremiumAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@worksPremiumAmt.save!

#65	116.4	How much is your spouse spending on MEDICAID WORKS premiums?	spouseWorksPremiumAmt
@spouseWorksPremiumAmt.text ="How much is your spouse spending on MEDICAID WORKS premiums?"
@spouseWorksPremiumAmt.default_answer = "0.00"
#If vA_caidSpouseGetCoveredGroup = MEDICAID WORKS
@spouseWorksPremiumAmt.display_rules = "
vA_caidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_caidSpouseGetCoveredGroup')
vA_caidSpouseGetCoveredGroup == 'MEDICAID WORKS'"
@spouseWorksPremiumAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseWorksPremiumAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseWorksPremiumAmt.save!

@othWorkExpAmt.text ="What is the monthly amount of other work expenses that you have?"
@othWorkExpAmt.default_answer = "0.00"
#If ssdiEarnAmt > 0 OR ssiOrCaidEarnAmt > 0
@othWorkExpAmt.display_rules = "
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
ssdiEarnAmt.to_f > 0 || ssiOrCaidEarnAmt.to_f > 0"
@othWorkExpAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@othWorkExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@othWorkExpAmt.save!

@spouseOthWorkExpAmt.text ="What is the monthly amount of other work expenses that your spouse has?"
@spouseOthWorkExpAmt.default_answer = "0.00"
#If spouseSsdiEarnAmt > 0 OR  spouseSsiOrCaidEarnAmt > 0
@spouseOthWorkExpAmt.display_rules = "
spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
((spouseSsdiEarnAmt.to_f > 0 ) || (spouseSsiOrCaidEarnAmt.to_f > 0))"
@spouseOthWorkExpAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseOthWorkExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseOthWorkExpAmt.save!

@vA_AuxGrantFacilityRateAmt.text ="How much does the facility or home charge you monthly for room, board and services?"
#EXPRESSION: IF vA_CityCounty = Arlington OR Louden OR Prince William OR Fairfax OR Alexandria, THEN VA_RateMaxAuxGrantFaciltyRatePd8Amt, ELSE VA_RateMaxAuxGrantFaciltyRateElseAmt
#Dec 12 2011 revision
#EXPRESSION: IF vA_CityCounty = Arlington OR Louden OR Prince William OR Fairfax OR Alexandria, 
#THEN (ag_max_payment_pd8 + rateFbrAmt - ag_personal_allowance), ELSE (ag_max_payment_elsewhere + rateFbrAmt - ag_personal_allowance)
@vA_AuxGrantFacilityRateAmt.default_answer = "expression= 
  rateVaMaxAuxiliaryGrantPd8        = WebCalc.find_by_name('rateVaMaxAuxiliaryGrantPd8')
  rateVaMaxAuxiliaryGrantElsewhere  = WebCalc.find_by_name('rateVaMaxAuxiliaryGrantElsewhere')
  rateFbrAmt                        = WebCalc.find_by_name('rateFbrAmt')
  rateAgPersonalAllowance           = WebCalc.find_by_name('rateAgPersonalAllowance')
  vA_CityCounty                     = manager.get_answer_by_question_name('vA_CityCounty')
  if vA_CityCounty == 'Arlington County' || vA_CityCounty == 'Louden County' || vA_CityCounty == 'Prince William County' || vA_CityCounty == 'Fairfax County' || vA_CityCounty == 'Alexandria County' then
   answer = Float(rateVaMaxAuxiliaryGrantPd8.calculate manager) + Float(rateFbrAmt.calculate manager) - Float(rateAgPersonalAllowance.calculate manager)
  else
   answer = Float(rateVaMaxAuxiliaryGrantElsewhere.calculate manager) + Float(rateFbrAmt.calculate manager) - Float(rateAgPersonalAllowance.calculate manager)
  end
"
#If vA_LiveInAuxGrantFacility = Y AND caidMostGroupsResourceLimitExceed <> Y
@vA_AuxGrantFacilityRateAmt.display_rules = "
vA_LiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
caidMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
(vA_LiveInAuxGrantFacility == 'Yes') && (caidMostGroupsResourceLimitExceed != 'Yes' )"
@vA_AuxGrantFacilityRateAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@vA_AuxGrantFacilityRateAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_AuxGrantFacilityRateAmt.save!

@vA_CoupleAuxGrantFacilityRateAmt.text ="How much does the facility or home charge you and your spouse monthly for room, board and services?"
@vA_CoupleAuxGrantFacilityRateAmt.default_answer = "0.00"
#EXPRESSION: IF vA_CityCounty = Arlington OR Louden OR Prince William OR Fairfax OR Alexandria, 
#THEN (ag_couple_max_payment_pd8 + rateFbrCoupleAmt - ag_personal_allowance), 
#ELSE (ag_couple_max_payment_elsewhere + rateFbrCoupleAmt - ag_personal_allowance)
# edit based on DJR email
@vA_CoupleAuxGrantFacilityRateAmt.default_answer = "expression= 
  rateVaMaxAuxiliaryGrantCouplePd8        = WebCalc.find_by_name('rateVaMaxAuxiliaryGrantCouplePd8')
  rateVaMaxAuxiliaryGrantCoupleElsewhere  = WebCalc.find_by_name('rateVaMaxAuxiliaryGrantCoupleElsewhere')
  rateFbrCoupleAmt                        = WebCalc.find_by_name('rateFbrCoupleAmt')
  rateAgPersonalAllowance                 = WebCalc.find_by_name('rateAgPersonalAllowance')
  vA_CityCounty                           = manager.get_answer_by_question_name('vA_CityCounty')
  if vA_CityCounty == 'Arlington County' || vA_CityCounty == 'Louden County' || vA_CityCounty == 'Prince William County' || vA_CityCounty == 'Fairfax County' || vA_CityCounty == 'Alexandria County' then
   answer = Float(rateVaMaxAuxiliaryGrantCouplePd8.calculate manager) + Float(rateFbrCoupleAmt.calculate manager) - (Float(rateAgPersonalAllowance.calculate manager) * 2)
  else
    answer = Float(rateVaMaxAuxiliaryGrantCoupleElsewhere.calculate manager) + Float(rateFbrCoupleAmt.calculate manager) - (Float(rateAgPersonalAllowance.calculate manager) * 2)
  end
"
#If vA_liveWithSpouseAuxGrantFacility = Y AND caidCoupleMostGroupsResourceLimitExceed <> Y
@vA_CoupleAuxGrantFacilityRateAmt.display_rules = "
vA_liveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_liveWithSpouseAuxGrantFacility')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
(vA_liveWithSpouseAuxGrantFacility == 'Yes') && (caidCoupleMostGroupsResourceLimitExceed != 'Yes' )"
@vA_CoupleAuxGrantFacilityRateAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@vA_CoupleAuxGrantFacilityRateAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@vA_CoupleAuxGrantFacilityRateAmt.save!

@estMedExpWithCaidAmt.text ="Estimate your own monthly medical expenses with Medicaid coverage."
@estMedExpWithCaidAmt.default_answer = "0.00"
#IF (caidGet = Y OR caidApply = Y) AND caidMostGroupsResourceLimitExceed <> Y AND caidCoupleMostGroupsResourceLimitExceed <> Y
@estMedExpWithCaidAmt.display_rules = "
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
caidMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidMostGroupsResourceLimitExceed')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
( caidGet == 'Yes' || caidApply == 'Yes' ) && caidMostGroupsResourceLimitExceed != 'Yes' && caidCoupleMostGroupsResourceLimitExceed != 'Yes'
"
@estMedExpWithCaidAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@estMedExpWithCaidAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@estMedExpWithCaidAmt.save!

@estMedExpWithoutCaidAmt.text ="Estimate your own monthly medical expenses without Medicaid coverage."
@estMedExpWithoutCaidAmt.default_answer = "0.00"
#If ssiGet Y OR ssdiGet OR caidGet = Y OR caidApply = 
@estMedExpWithoutCaidAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
(ssiGet == 'Yes' || ssdiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes')"

@estMedExpWithoutCaidAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@estMedExpWithoutCaidAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@estMedExpWithoutCaidAmt.save!

@spouseEstMedExpWithCaidAmt.text ="Estimate your spouse's monthly medical expenses with Medicaid coverage."
@spouseEstMedExpWithCaidAmt.default_answer = "0.00"
#IF (caidSpouseGet = Y OR caidSpouseApply = Y) AND caidCoupleMostGroupsResourceLimitExceed <>Y
@spouseEstMedExpWithCaidAmt.display_rules = "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
caidCoupleMostGroupsResourceLimitExceed = manager.get_answer_by_question_name('caidCoupleMostGroupsResourceLimitExceed')
(caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') && caidCoupleMostGroupsResourceLimitExceed != 'Yes'"
@spouseEstMedExpWithCaidAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseEstMedExpWithCaidAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseEstMedExpWithCaidAmt.save!

@spouseEstMedExpWithoutCaidAmt.text ="Estimate your spouse's monthly medical expenses without Medicaid coverage."
@spouseEstMedExpWithoutCaidAmt.default_answer = "0.00"
#IF spouseSsiGet = Y OR caidSpouseGet = Y OR caidSpouseApply = Y
@spouseEstMedExpWithoutCaidAmt.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
(spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes')"
@spouseEstMedExpWithoutCaidAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseEstMedExpWithoutCaidAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseEstMedExpWithoutCaidAmt.save!

@otherExpAmt.text ="Estimate the monthly amount of any other expenses you want to include in WW-Web calculations"
@otherExpAmt.default_answer = "0.00"
#If SsiGet Y OR ssdiGet OR caidGet = Y OR caidApply = Y
@otherExpAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
(ssiGet == 'Yes' || ssdiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes')"
@otherExpAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@otherExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@otherExpAmt.save!

@spouseOtherExpAmt.text ="Estimate the monthly amount of any other of your spouse's expenses you want to include in WW-Web calculations."
@spouseOtherExpAmt.default_answer = "0.00"
#If spouseSsiGet = Y OR caidSpouseGet = Y OR caidSpouseApply = Y
@spouseOtherExpAmt.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
(spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes')"
@spouseOtherExpAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseOtherExpAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseOtherExpAmt.save!

@employInvestAmt.text ="How much are you spending and/or setting aside per month to improve your future financial self-sufficiency?"
@employInvestAmt.default_answer = "0.00"
#If (ssiGet = Y OR  OR r_VA_CaidCoveredGroupProtectedSsiChildDac1619b = TRUE) AND (inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseUnEarnAmt + ssiSpouseDeemEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt) > 0.00
#review 
#If (ssiGet = Y OR r_VA_CaidCovGroupPsdcPadc1619b = TRUE) AND (inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseUnEarnAmt + ssiSpouseDeemEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt) > 0.00
#=IF(AND(OR(L33="YES";$WebVACalc.E350=1);(L133+L97+L101+L135+L136+L137+L144+L104+L150+L156)>0);"Appear";"no")
#l33 ssiGet
#350 r_VA_CaidCovGroupPsdcPadc1619b
#133 inKindPMVAmt
#97 ssiParDeemAmt
#101 ssiSpouseDeemUnearnAmt
#135 ssdiAmtSelfFull
#136 ssdiAmtOtherFull
#137 unearnAmt
#144 spouseUnEarnAmt
#104 ssiSpouseDeemEarnAmt
#150 ssiOrCaidEarnAmt
#156 spouseSsiOrCaidEarnAmt

@employInvestAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b')
inKindPMVAmt                      = manager.get_answer_by_question_name('inKindPMVAmt').to_f
ssiParDeemAmt                     = manager.get_answer_by_question_name('ssiParDeemAmt').to_f
ssiSpouseDeemUnearnAmt            = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt').to_f
ssdiAmtSelfFull                   = manager.get_answer_by_question_name('ssdiAmtSelfFull').to_f
ssdiAmtOtherFull                  = manager.get_answer_by_question_name('ssdiAmtOtherFull').to_f
unearnAmt                         = manager.get_answer_by_question_name('unearnAmt').to_f
spouseUnEarnAmt                   = manager.get_answer_by_question_name('spouseUnEarnAmt').to_f
ssiSpouseDeemEarnAmt              = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt').to_f
ssiOrCaidEarnAmt                  = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
spouseSsiOrCaidEarnAmt            = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
((inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseUnEarnAmt + ssiSpouseDeemEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt) > 0) && (ssiGet == 'Yes' || (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true)
"
@employInvestAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@employInvestAmt.validation_message = "Enter positive numbers only.  Do not enter $."
@employInvestAmt.save!

@spouseEmployInvestAmt.text ="How much is your spouse spending and/or setting aside per month to improve future financial self-sufficiency?"
@spouseEmployInvestAmt.default_answer = "0.00"
#If spouseSsiGet = Y AND (inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseUnEarnAmt + ssiSpouseDeemEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - employInvestAmt) > 0.00
@spouseEmployInvestAmt.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
inKindPMVAmt = manager.get_answer_by_question_name('inKindPMVAmt').to_f
ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt').to_f
ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt').to_f
ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull').to_f
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull').to_f
unearnAmt = manager.get_answer_by_question_name('unearnAmt').to_f
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt').to_f
ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt').to_f
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
employInvestAmt = manager.get_answer_by_question_name('employInvestAmt').to_f
spouseSsiGet == 'Yes' && ((inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseUnEarnAmt + ssiSpouseDeemEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt - employInvestAmt) > 0)
"
@spouseEmployInvestAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseEmployInvestAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseEmployInvestAmt.save!

@student.text ="Are you a student?"
@student.default_answer = "Yes"
#IF (ssiGet = Y OR caidGet = Y OR caidApply = Y) AND rAge < 22 AND ssiOrCaidEarnAmt > 0
@student.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rAge = WebCalc.find_by_name('rAge')
rAge = Float(rAge.calculate manager)
((ssiGet == 'Yes' || caidGet == 'Yes' || caidApply == 'Yes') && (rAge < 22) && (ssiOrCaidEarnAmt.to_f > 0))
"
#@student.validation_rules = ""
#@student.validation_message= ""
@student.save!

@seieAmt.text ="How much of your monthly earnings C{q_ssiOrCaidEarnAmt} are excluded as a Student Earned Income Exclusion (SEIE)?"
#EXPRESSION: the smaller of ((rateSEIEMaxMonthly OR ssiOrCaidEarnAmt) 
@seieAmt.default_answer = "expression= 
rateSEIEMaxMonthly  = WebCalc.find_by_name('rateSEIEMaxMonthly')
ssiOrCaidEarnAmt    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
[ssiOrCaidEarnAmt.to_f, Float(rateSEIEMaxMonthly.calculate manager)].min
"
#If student = Y
@seieAmt.display_rules = "
student = manager.get_answer_by_question_name('student')
student == 'Yes' 
"
#Zero or Positive Number <= the smaller of ((rateSEIEMaxMonthly OR ssiOrCaidEarnAmt) 
@seieAmt.validation_rules = "
answer              = manager.get_answer_by_question_name(self.name)
ssiOrCaidEarnAmt    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rateSEIEMaxMonthly  = WebCalc.find_by_name('rateSEIEMaxMonthly')
ssiOrCaidEarnAmt    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
if answer != nil then
   true if Float(answer) >=0  && (Float(answer) <= [Float(rateSEIEMaxMonthly.calculate manager), ssiOrCaidEarnAmt.to_f].min) rescue false
else 
 true
end
"
@seieAmt.validation_message= "Your Student Earned Income Exclusion (SEIE) can not be greater than the smaller of the maximum monthly  exclusion C{rateSEIEMaxMonthly} or your monthly earned income C{q_ssiOrCaidEarnAmt}.  Enter positive numbers only.  Do not enter $."
@seieAmt.save!

@spouseStudent.text ="Is your spouse a student?"
@spouseStudent.default_answer = "No"
#If (sitDate minus spouseBirthDate < 22 AND (spouseSsiGet = Y OR caidSpouseGet = Y OR caidSpouseApply = Y OR spouseSsiOrCaidEarnAmt > 0 OR ssiSpouseDeem = Y OR vA_CaidSpouseDeem = Y)
@spouseStudent.display_rules = "
spouseSsiGet            = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet           = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply         = manager.get_answer_by_question_name('caidSpouseApply')
rSpouseAge              = WebCalc.find_by_name('rSpouseAge')
spouseSsiOrCaidEarnAmt  = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
ssiSpouseDeem           = manager.get_answer_by_question_name('ssiSpouseDeem')
vA_CaidSpouseDeem = manager.get_answer_by_question_name('vA_CaidSpouseDeem')
( (spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes' || spouseSsiOrCaidEarnAmt.to_f > 0 || ssiSpouseDeem == 'Yes' || vA_CaidSpouseDeem == 'Yes') && Float(rSpouseAge.calculate manager) < 22)
"
#@spouseStudent.validation_rules = ""
#@spouseStudent.validation_message= ""
@spouseStudent.save!

@spouseSeieAmt.text ="How much of your spouse's monthly earnings (C{q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt}) are excluded as a Student Earned Income Exclusion (SEIE)?"
@spouseSeieAmt.all_inputs_text ="How much of your spouse's monthly earnings are excluded as a Student Earned Income Exclusion (SEIE)?"
#EXPRESSION: the smaller of ((rateSEIEMaxMonthly - SeieAmt) OR (spouseSsiOrCaidEarnAmt IF > 0 OR spouseWhoIsDeemedEarnAmt IF > 0)
@spouseSeieAmt.default_answer = "expression= 
 rateSEIEMaxMonthly       = WebCalc.find_by_name('rateSEIEMaxMonthly')
 seieAmt                  = manager.get_answer_by_question_name('seieAmt')
 spouseSsiOrCaidEarnAmt   = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt')

 whatsLeft = Float(rateSEIEMaxMonthly.calculate manager) - seieAmt.to_f
 spouseEarnings = [spouseSsiOrCaidEarnAmt.to_f,spouseWhoIsDeemedEarnAmt.to_f].max
 answer = [ whatsLeft, spouseEarnings].min
"
#If spouseStudent = Y AND (spouseSsiOrCaidEarnAmt > 0 OR spouseWhoIsDeemedEarnAmt > 0)
@spouseSeieAmt.display_rules = "
spouseStudent = manager.get_answer_by_question_name('spouseStudent')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt')
(spouseStudent == 'Yes' && (spouseSsiOrCaidEarnAmt.to_f > 0 || spouseWhoIsDeemedEarnAmt.to_f > 0))"
#Zero or Positive Number <= the smaller of ((rateSEIEMaxMonthly - SeieAmt) OR (the greater of spouseSsiOrCaidEarnAmt OR spouseWhoIsDeemedEarnAmt)
@spouseSeieAmt.validation_rules = "
rateSEIEMaxMonthly        = WebCalc.find_by_name('rateSEIEMaxMonthly')
seieAmt                   = manager.get_answer_by_question_name('seieAmt').to_f
answer                    = manager.get_answer_by_question_name(self.name)
spouseSsiOrCaidEarnAmt    = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseWhoIsDeemedEarnAmt  = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt')
 spouseEarnings = [spouseSsiOrCaidEarnAmt.to_f,spouseWhoIsDeemedEarnAmt.to_f].max

if answer != nil then
   true if (Float(answer) >= 0 && Float(answer) <= [Float(rateSEIEMaxMonthly.calculate manager) - seieAmt, spouseEarnings].min) rescue false
else 
   true
end
"
@spouseSeieAmt.validation_message= "Your spouse's Student Earned Income Exclusion (SEIE) can not be greater than the smaller of: 1) The maximum monthly exclusion (C{rateSEIEMaxMonthly}) minus your SEIE (C{q_seieAmt}); or 2) Your spouse's monthly earned income (C{q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt}). Enter positive numbers only.  Do not enter $."
@spouseSeieAmt.save!

@seieLessThanEarnAnnualLmtReached.text ="Your SEIE exclusion (C{q_seieAmt}) is less than your earnings (C{q_ssiOrCaidEarnAmt}).  Have you used up your SEIE annual exclusion amount (C{rateSEIEMaxYear)?"
@seieLessThanEarnAnnualLmtReached.all_inputs_text ="Your SEIE exclusion is less than your earnings.  Have you used up your SEIE annual exclusion amount?"
@seieLessThanEarnAnnualLmtReached.default_answer = "Yes"
#If student = Y AND spouseStudent <> Y AND seieAmt > 0 AND ssiOrCaidEarnAmt <  rateSEIEMaxMonthly  AND seieAmt < ssiOrCaidEarnAmt
@seieLessThanEarnAnnualLmtReached.display_rules = "
student             = manager.get_answer_by_question_name('student')
spouseStudent       = manager.get_answer_by_question_name('spouseStudent')
seieAmt             = manager.get_answer_by_question_name('seieAmt').to_f
rateSEIEMaxMonthly  = WebCalc.find_by_name('rateSEIEMaxMonthly')
ssiOrCaidEarnAmt    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
(student == 'Yes') && (spouseStudent != 'Yes') && (seieAmt > 0) && (ssiOrCaidEarnAmt <  Float(rateSEIEMaxMonthly.calculate manager)) && (seieAmt < ssiOrCaidEarnAmt)
"
#@seieLessThanEarnAnnualLmtReached.validation_rules = ""
#@seieLessThanEarnAnnualLmtReached.validation_message= ""
@seieLessThanEarnAnnualLmtReached.save!

@seieLessThanSeieMaxAnnualLmtReached.text ="Your SEIE exclusion (C{q_seieAmt) is less than the SEIE Monthly Maximum Exclusion (C{rateSEIEMaxMonthly}).  Have you used up your SEIE annual exclusion amount (C{rateSEIEMaxYear)?"
@seieLessThanSeieMaxAnnualLmtReached.all_inputs_text ="Your SEIE exclusion is less than the SEIE Monthly Maximum Exclusion. Have you used up your SEIE annual exclusion amount?"
@seieLessThanSeieMaxAnnualLmtReached.default_answer = "Yes"
#If student = Y AND spouseStudent <> Y AND seieAmt > 0 AND ssiOrCaidEarnAmt >rateSEIEMaxMonthly  AND seieAmt < rateSEIEMaxMonthly
@seieLessThanSeieMaxAnnualLmtReached.display_rules = "
student             = manager.get_answer_by_question_name('student')
spouseStudent       = manager.get_answer_by_question_name('spouseStudent')
rateSEIEMaxMonthly  = WebCalc.find_by_name('rateSEIEMaxMonthly')
seieAmt             = manager.get_answer_by_question_name('seieAmt').to_f
ssiOrCaidEarnAmt    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
(student == 'Yes') && (spouseStudent != 'Yes') && (seieAmt > 0) && (ssiOrCaidEarnAmt >  Float(rateSEIEMaxMonthly.calculate manager)) && (seieAmt <  Float(rateSEIEMaxMonthly.calculate manager))
"
#@seieLessThanSeieMaxAnnualLmtReached.validation_rules = ""
#@seieLessThanSeieMaxAnnualLmtReached.validation_message= ""
@seieLessThanSeieMaxAnnualLmtReached.save!

@seieAnnualLmtPreviouslyReached.text ="You have no SEIE excluded income. Have you already excluded in this calendar year enough earnings to reach the maximum annual SEIE limit (C{rateSEIEMaxMonthly})?"
@seieAnnualLmtPreviouslyReached.all_inputs_text ="You have no SEIE excluded income. Have you already excluded in this calendar year enough earnings to reach the maximum annual SEIE limit?"
@seieAnnualLmtPreviouslyReached.default_answer = "Yes"
#If student = Y AND spouseStudent <> Y AND ssiOrCaidEarnAmt > 0 AND seieAmt = 0
@seieAnnualLmtPreviouslyReached.display_rules = "
student = manager.get_answer_by_question_name('student')
spouseStudent = manager.get_answer_by_question_name('spouseStudent')
seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
(student == 'Yes') && (spouseStudent != 'Yes') && (seieAmt == 0) && (ssiOrCaidEarnAmt > 0)
"
#@seieAnnualLmtPreviouslyReached.validation_rules = ""
#@seieAnnualLmtPreviouslyReached.validation_message= ""
@seieAnnualLmtPreviouslyReached.save!

@coupleSeieLessThanEarnMaxAnnualLmtReached.text ="The sum of your SEIE exclusion (C{q_seieAmt}) and your spouse's (C{q_spouseSeieAmt}) is less than the sum of your earnings (C{q_ssiOrCaidEarnAmt}) and your spouse's (C{q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt}).  Have you and your spouse used up your SEIE annual exclusion amount (C{rateSEIEMaxYear})?"
@coupleSeieLessThanEarnMaxAnnualLmtReached.all_inputs_text ="The sum of your SEIE exclusion and your spouse's is less than the sum of your earnings and your spouse's.  Have you and your spouse used up your SEIE annual exclusion amount?"
@coupleSeieLessThanEarnMaxAnnualLmtReached.default_answer = "Yes"
#If (student = Y AND spouseStudent = Y AND seieAmt + spouseSeieAmt > 0 AND (ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) < rateSEIEMaxMonthly AND (seieAmt + spouseSeieAmt) < (ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt)
@coupleSeieLessThanEarnMaxAnnualLmtReached.display_rules = "
 student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
 (student == 'Yes' && spouseStudent == 'Yes') && (seieAmt + spouseSeieAmt > 0) && ((ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) < Float(rateSEIEMaxMonthly.calculate manager)) && ((seieAmt + spouseSeieAmt) < (ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt))
"
#@coupleSeieLessThanEarnMaxAnnualLmtReached.validation_rules = ""
#@coupleSeieLessThanEarnMaxAnnualLmtReached.validation_message= ""
@coupleSeieLessThanEarnMaxAnnualLmtReached.save!

#27	141	The sum of your SEIE exclusion ($seieAmt) and your spouse's ($spouseSeieAmt) is less than the SEIE Monthly Maximum ($rateSEIEMaxMonthly).  Have you and your spouse used up your SEIE annual exclusion amount ($rateSEIEMaxYear)?	coupleSeieLessThanSeieMaxAnnualLmtReached
@coupleSeieLessThanSeieMaxAnnualLmtReached.text ="The sum of your SEIE exclusion (C{q_seieAmt}) and your spouse's (C{q_spouseSeieAmt}) is less than the SEIE Monthly Maximum (C{rateSEIEMaxMonthly}).  Have you and your spouse used up your SEIE annual exclusion amount (C{rateSEIEMaxYear})?"
@coupleSeieLessThanSeieMaxAnnualLmtReached.all_inputs_text ="The sum of your SEIE exclusion and your spouse's is less than the SEIE Monthly Maximum.  Have you and your spouse used up your SEIE annual exclusion amount?"
@coupleSeieLessThanSeieMaxAnnualLmtReached.default_answer = "Yes"
#If (student = Y AND spouseStudent = Y AND seieAmt + spouseSeieAmt > 0 AND (ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > Maximum Student Earned Income Exclusion (SEIE) per month AND (seieAmt + spouseSeieAmt) < (rateSEIEMaxMonthly)
#The existing code had extra but loks like it might be helpful so i left it in
@coupleSeieLessThanSeieMaxAnnualLmtReached.display_rules = "
student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
 spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
 (student == 'Yes' && spouseStudent == 'Yes' && liveWithSpouse == 'Yes' && spouseSsiGet == 'Yes' && (seieAmt + spouseSeieAmt > 0) && ((ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > Float(rateSEIEMaxMonthly.calculate manager)) && ((seieAmt + spouseSeieAmt) < Float(rateSEIEMaxMonthly.calculate manager)))
"
#@coupleSeieLessThanSeieMaxAnnualLmtReached.validation_rules = ""
#@coupleSeieLessThanSeieMaxAnnualLmtReached.validation_message= ""
@coupleSeieLessThanSeieMaxAnnualLmtReached.save!

#27	142	You and your spouse have no SEIE excluded income. Have you and/or your spouse already excluded in this calendar year enough earned income to reach the maximum annual SEIE limit ($rateSEIEMaxYear)?	coupleSeieAnnualAmtPreviouslyReached
@coupleSeieAnnualAmtPreviouslyReached.text ="You and your spouse have no SEIE excluded income. Have you and/or your spouse already excluded in this calendar year enough earned income to reach the maximum annual SEIE limit (C{rateSEIEMaxYear})?"
@coupleSeieAnnualAmtPreviouslyReached.all_inputs_text ="You and your spouse have no SEIE excluded income. Have you and/or your spouse already excluded in this calendar year enough earned income to reach the maximum annual SEIE limit?"
@coupleSeieAnnualAmtPreviouslyReached.default_answer = "Yes"
#IF student = Y AND spouseStudent = Y AND seieAmt + spouseSeieAmt = 0 AND ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt > 0
@coupleSeieAnnualAmtPreviouslyReached.display_rules = "
 student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
  spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
  ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
  spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
  spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
  (student == 'Yes' && spouseStudent == 'Yes') && ((seieAmt + spouseSeieAmt) == 0) && ((ssiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > 0)
"
#@coupleSeieAnnualAmtPreviouslyReached.validation_rules = ""
#@coupleSeieAnnualAmtPreviouslyReached.validation_message= ""
@coupleSeieAnnualAmtPreviouslyReached.save!

#27	143	Your spouse's SEIE exclusion ($spouseSeieAmt) is less than your spouse's earnings ($spouseSsiOrCaidEarnAmt + spouseWhoIsDeemedEarnAmt).  Has your spouse used up the SEIE annual exclusion amount ($rateSEIEMaxYear)?	spouseSeieLessThanEarnMaxAnnualLmtReached
@spouseSeieLessThanEarnMaxAnnualLmtReached.text ="Your spouse's SEIE exclusion (C{q_spouseSeieAmt}) is less than your spouse's earnings (C{q_spouseWhoIsDeemedEarnAmtPlusspouseSsiOrCaidEarnAmt}).  Has your spouse used up the SEIE annual exclusion amount (C{rateSEIEMaxYear})?"
@spouseSeieLessThanEarnMaxAnnualLmtReached.all_inputs_text ="Your spouse's SEIE exclusion is less than your spouse's earnings.  Has your spouse used up the SEIE annual exclusion amount?"
@spouseSeieLessThanEarnMaxAnnualLmtReached.default_answer = "Yes"
#If (student <> Y AND spouseStudent = Y AND spouseSeieAmt > 0 AND (spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) < Maximum Student Earned Income Exclusion (SEIE) per month AND (spouseSeieAmt) < (spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt)
@spouseSeieLessThanEarnMaxAnnualLmtReached.display_rules = "
 student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
 ((student != 'Yes' && spouseStudent == 'Yes') && (spouseSeieAmt > 0) && ((spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) < Float(rateSEIEMaxMonthly.calculate manager)) && ((spouseSeieAmt) < (spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt)))
"
#@spouseSeieLessThanEarnMaxAnnualLmtReached.validation_rules = ""
#@spouseSeieLessThanEarnMaxAnnualLmtReached.validation_message= ""
@spouseSeieLessThanEarnMaxAnnualLmtReached.save!

#27	144	Your spouse's SEIE exclusion ($spouseSeieAmt) is less than the SEIE Monthly Maximum Exclusion ($rateSEIEMaxMonthly).  Has your spouse used up the SEIE annual exclusion amount ($rateSEIEMaxYear)?	spouseSeieLessThanSeieMaxAnnualLmtReached
@spouseSeieLessThanSeieMaxAnnualLmtReached.text ="Your spouse's SEIE exclusion (C{q_spouseSeieAmt}) is less than the SEIE Monthly Maximum Exclusion (C{rateSEIEMaxMonthly}).  Has your spouse used up the SEIE annual exclusion amount (C{rateSEIEMaxYear})?"
@spouseSeieLessThanSeieMaxAnnualLmtReached.all_inputs_text ="Your spouse's SEIE exclusion is less than the SEIE Monthly Maximum Exclusion.  Has your spouse used up the SEIE annual exclusion amount?"
@spouseSeieLessThanSeieMaxAnnualLmtReached.default_answer = "Yes"
#If (student <> Y AND spouseStudent = Y AND spouseSeieAmt > 0 AND (spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > Maximum Student Earned Income Exclusion (SEIE) per month AND spouseSeieAmt < rateSEIEMaxMonthly)
@spouseSeieLessThanSeieMaxAnnualLmtReached.display_rules = "
 student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
 ((student != 'Yes' && spouseStudent == 'Yes') && (spouseSeieAmt > 0) && ((spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > Float(rateSEIEMaxMonthly.calculate manager)) && (spouseSeieAmt < Float(rateSEIEMaxMonthly.calculate manager)))
"
#@spouseSeieLessThanSeieMaxAnnualLmtReached.validation_rules = ""
#@spouseSeieLessThanSeieMaxAnnualLmtReached.validation_message= ""
@spouseSeieLessThanSeieMaxAnnualLmtReached.save!

#27	145	Your spouse has no SEIE excluded income. Has your spouse already excluded in this calendar year enough earnings to reach the maximum annual SEIE limit ($rateSEIEMaxYear)?	spouseSeieAnnualAmtPreviouslyReached
@spouseSeieAnnualAmtPreviouslyReached.text ="Your spouse has no SEIE excluded income. Has your spouse already excluded in this calendar year enough earnings to reach the maximum annual SEIE limit (C{rateSEIEMaxYear})?"
@spouseSeieAnnualAmtPreviouslyReached.all_inputs_text ="Your spouse has no SEIE excluded income. Has your spouse already excluded in this calendar year enough earnings to reach the maximum annual SEIE limit?"
@spouseSeieAnnualAmtPreviouslyReached.default_answer = "Yes"
#If (student <> Y AND spouseStudent = Y AND spouseSeieAmt = 0 AND (spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > 0
@spouseSeieAnnualAmtPreviouslyReached.display_rules = "
 student = manager.get_answer_by_question_name('student')
 spouseStudent = manager.get_answer_by_question_name('spouseStudent')
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 spouseWhoIsDeemedEarnAmt = manager.get_answer_by_question_name('spouseWhoIsDeemedEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 ((student != 'Yes' && spouseStudent == 'Yes') && ((spouseSeieAmt) == 0 ) && ((spouseWhoIsDeemedEarnAmt + spouseSsiOrCaidEarnAmt) > 0))
"
#@spouseSeieAnnualAmtPreviouslyReached.validation_rules = ""
#@spouseSeieAnnualAmtPreviouslyReached.validation_message= ""
@spouseSeieAnnualAmtPreviouslyReached.save!

#25 54	147	How much of your $disWorkExpAmt of disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?	ssiCaidIrweAmt
@ssiCaidIrweAmt.text ="How much of your C{q_disWorkExpAmt} of disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?"
@ssiCaidIrweAmt.all_inputs_text ="How much of your disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?"
@ssiCaidIrweAmt.default_answer = "expression= 
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
answer = disWorkExpAmt
"
#IF disWorkExpAmt > 0 AND (ssiOrCaidEarnAmt - seieAmt) > 0 AND blind = N  Note Bob removed ssiget+ Y from heroku rule
#IF disWorkExpAmt > 0 AND (ssiOrCaidEarnAmt - seieAmt) > 0 AND blind = N

@ssiCaidIrweAmt.display_rules = "
 blind = manager.get_answer_by_question_name('blind')
 disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
(disWorkExpAmt > 0)  && ((ssiOrCaidEarnAmt - seieAmt) > 0) && blind == 'No'
"
#Zero or Positive Number  <=  disWorkExpAmt
@ssiCaidIrweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= disWorkExpAmt ) rescue false
  else 
    true
end
"
@ssiCaidIrweAmt.validation_message= "You can not enter an IRWE greater than the amount of your disability-related work expenses (C{q_disWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@ssiCaidIrweAmt.save!

#25	148	How much of your spouse's $spouseDisWorkExpAmt of disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?	spouseSsiCaidIrweAmt
@spouseSsiCaidIrweAmt.text ="How much of your spouse's C{q_spouseDisWorkExpAmt} of disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?"
@spouseSsiCaidIrweAmt.all_inputs_text ="How much of your spouse's disability-related work expenses are counted as IRWE to determine SSI benefit amount and/or Medicaid eligibility?"
#EXPRESSION: spouseDisWorkExpAmt
@spouseSsiCaidIrweAmt.default_answer = "expression= 
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
answer = spouseDisWorkExpAmt
"
#If spouseSsiGet = Y AND spouseDisWorkExpAmt > 0 AND (spouseSsiOrCaidEarnAmt - spouseSeieAmt) > 0 AND spouseBlind = NO
@spouseSsiCaidIrweAmt.display_rules = "
 spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
 spouseBlind = manager.get_answer_by_question_name('spouseBlind')
 spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 spouseSsiGet == 'Yes' && (spouseDisWorkExpAmt > 0)  && ((spouseSsiOrCaidEarnAmt - spouseSeieAmt) > 0) && spouseBlind == 'No'
"
#Zero or Positive Number  <= spouseDisWorkExpAmt
@spouseSsiCaidIrweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= spouseDisWorkExpAmt ) rescue false
  else 
    true
end"
@spouseSsiCaidIrweAmt.validation_message= "You can not enter an IRWE greater than the amount of your spouse's disability-related work expenses (C{q_spouseDisWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@spouseSsiCaidIrweAmt.save!

#25	149	How much of your $disWorkExpAmt of disability-related work expenses are counted as IRWE to determine if your earnings exceed SGA?	sgaIrweAmt
@sgaIrweAmt.text ="How much of your C{q_disWorkExpAmt} of disability-related work expenses are counted as IRWE to determine if your earnings exceed SGA?"
@sgaIrweAmt.all_inputs_text ="How much of your disability-related work expenses are counted as IRWE to determine if your earnings exceed SGA?"
#EXPRESSION: disWorkExpAmt
@sgaIrweAmt.default_answer = "expression= 
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
answer = disWorkExpAmt"
#IF(disWorkExpAmt > 0) AND ((blind = N AND ssdiEarnAmt > rateSgaDisabledAmt) OR (blind = N AND ssiGetFinalDetermination = N AND ssiOrCaidEarnAmt > rateSgaDisabledAmt) OR (blind = Y AND ssdiEarnAmt > rateSgaBlindAmt))
@sgaIrweAmt.display_rules = "
 blind = manager.get_answer_by_question_name('blind')
 disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
 ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt').to_f
 ssiGetFinalDetermination = manager.get_answer_by_question_name('ssiGetFinalDetermination')
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 rateSgaDisabledAmt = WebCalc.find_by_name('rateSgaDisabledAmt')
 rateSgaBlindAmt = WebCalc.find_by_name('rateSgaBlindAmt')
 (disWorkExpAmt > 0) && (((blind == 'No' && (ssdiEarnAmt > Float(rateSgaDisabledAmt.calculate manager)))) || (blind == 'No' && ssiGetFinalDetermination == 'No' && (ssiOrCaidEarnAmt > Float(rateSgaDisabledAmt.calculate manager))) || (blind == 'Yes' && (ssdiEarnAmt > Float(rateSgaBlindAmt.calculate manager))))
"
#Zero or Positive Number  <= disWorkExpAmt
@sgaIrweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= disWorkExpAmt ) rescue false
  else 
    true
end"
@sgaIrweAmt.validation_message= "You can not enter an IRWE greater than the amount of your disability-related work expenses (C{q_disWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@sgaIrweAmt.save!

#25	150	How much of your spouse's $spouseDisWorkExpAmt of disability-related work expenses are counted as IRWE to determine if earnings exceed SGA?	spouseSgaIrweAmt
@spouseSgaIrweAmt.text ="How much of your spouse's C{q_spouseDisWorkExpAmt} of disability-related work expenses are counted as IRWE to determine if earnings exceed SGA?"
@spouseSgaIrweAmt.all_inputs_text ="How much of your spouse's disability-related work expenses are counted as IRWE to determine if earnings exceed SGA?"
#EXPRESSION: spouseDisWorkExpAmt
@spouseSgaIrweAmt.default_answer = "expression= 
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
answer = spouseDisWorkExpAmt"
#IF(spouseDisWorkExpAmt > 0) AND ((spouseBlind = N AND spouseSsdiEarnAmt > rateSgaDisabledAmt) OR (spouseBlind = Y AND spouseSsdiEarnAmt > rateSgaBlindAmt))
@spouseSgaIrweAmt.display_rules = "
 spouseBlind          = manager.get_answer_by_question_name('spouseBlind')
 spouseDisWorkExpAmt  = manager.get_answer_by_question_name('spouseDisWorkExpAmt').to_f
 spouseSsdiEarnAmt    = manager.get_answer_by_question_name('spouseSsdiEarnAmt').to_f
 rateSgaDisabledAmt   = WebCalc.find_by_name('rateSgaDisabledAmt')
 rateSgaBlindAmt      = WebCalc.find_by_name('rateSgaBlindAmt')
 (spouseDisWorkExpAmt > 0) && (((spouseBlind == 'No' && (spouseSsdiEarnAmt > Float(rateSgaDisabledAmt.calculate manager))))  || (spouseBlind == 'Yes' && (spouseSsdiEarnAmt > Float(rateSgaBlindAmt.calculate manager))))
"
#Zero or Positive Number  <= spouseDisWorkExpAmt
@spouseSgaIrweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= spouseDisWorkExpAmt ) rescue false
  else 
    true
end"
@spouseSgaIrweAmt.validation_message= "You can not enter an IRWE greater than the amount of your spouse's disability-related work expenses (C{q_spouseDisWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@spouseSgaIrweAmt.save!

#26 54	152	How much of your $disWorkExpAmt of disability-related work expenses and $othWorkExpAmt of other work expenses are counted as BWE?	bweAmt
@bweAmt.text ="How much of your C{q_disWorkExpAmt} of disability-related work expenses your C{(q_estEarnTaxAmt} of work-related taxes, and your C{q_othWorkExpAmt} of other work expenses are counted as BWE?"
@bweAmt.all_inputs_text ="How much of your disability-related work expenses, work-related taxes, and other work expenses are counted as BWE?"
#55 review     How much of your  $disWorkExpAmt   of disability-related work expenses, your $estEarnTaxAmt of work-related taxes, and your $othWorkExpAmt of other work expenses are counted as BWE?

#EXPRESSION: disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt
@bweAmt.default_answer = "expression= 
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
answer = disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f
"
#If blind = Y AND (disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt) > 0 AND (ssiOrCaidEarnAmt - seieAmt) > 0)
@bweAmt.display_rules = "
 blind = manager.get_answer_by_question_name('blind')
 ssiGet = manager.get_answer_by_question_name('ssiGet')
 caidGet = manager.get_answer_by_question_name('caidGet')
 disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
 estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt').to_f
 othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt').to_f
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
 blind == 'Yes' && (ssiGet == 'Yes' || caidGet == 'Yes') && ((disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt) > 0) && ((ssiOrCaidEarnAmt - seieAmt) > 0) 
"
#Zero or Positive Number  <=  disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt
@bweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt').to_f
othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= (disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt)) rescue false
  else 
    true
end
"
#q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt
@bweAmt.validation_message= "You can not enter a BWE greater than the sum of your work expenses (C{q_DisWorkExpAmtPlusEstEarnTaxAmtPlusOthWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@bweAmt.save!

#26	153	How much of your spouse's $spouseDisWorkExpAmt of disability-related work expenses and $spouseOthWorkExpAmt of other work expenses are counted as BWE?	spouseBweAmt
@spouseBweAmt.text ="How much of your spouse's C{q_spouseDisWorkExpAmt} of disability-related work expenses, C{q_spouseEstEarnTaxAmt} of work-related taxes, and C{q_spouseOthWorkExpAmt} of other work expenses are counted as BWE?"
@spouseBweAmt.all_inputs_text ="How much of your spouse's disability-related work expenses, work-related taxes, and other work expenses are counted as BWE?"
#wb 55 review        How much of your spouse's $ spouseDisWorkExpAmt    of disability-related work expenses, spouseEstEarnTaxAmt of work-related taxes, and $spouseOthWorkExpAmt of other work expenses are counted as BWE?
#EXPRESSION: spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt
@spouseBweAmt.default_answer = "expression= 
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
answer = spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f
"
#(spouseBlind = Y AND (spouseSsiGet = Y OR caidSpouseGet) AND ( spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt) > 0 AND (spouseSsiOrCaidEarnAmt - spouseSeieAmt) > 0)
@spouseBweAmt.display_rules = "
 spouseBlind = manager.get_answer_by_question_name('spouseBlind')
 spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
 caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
 spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
  spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
  spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
  spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
  spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
  spouseBlind == 'Yes' && (spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes') && ((spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f) > 0) && ((spouseSsiOrCaidEarnAmt.to_f - spouseSeieAmt.to_f) > 0)
"
#Zero or Positive Number  <=  spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt
@spouseBweAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= (spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f)) rescue false
  else 
    true
end
"
#q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt
@spouseBweAmt.validation_message= "You can not enter a BWE greater than the sum of your spouse's work expenses (C{q_spouseDisWorkExpAmt_plus_spouseEstEarnTaxAmt_plus_SpouseOthWorkExpAmt}).  Enter positive numbers only.  Do not enter $."
@spouseBweAmt.save!

#26 31 54	155	What monthly amount are you or would you be including in a PASS?  (You are making employability investments of $EmployInvestAmt. You may also be able to include work expenses not already counted as IRWE or BWE.)	passAmt
@passAmt.text ="What monthly amount are you or would you be including in a PASS?  (You are making employability investments of C{q_employInvestAmt}. You may also be able to include work expenses not already counted as IRWE or BWE.)"
@passAmt.all_inputs_text ="What monthly amount are you or would you be including in a PASS?  (You may be able to include employability investments and work expenses not already counted as IRWE or BWE.)"
#EXPRESSION:  Smaller of (employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt) 
#OR ((ssdiAmtSelfFull + ssdiAmtOtherFull +unearnAmt +spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + SsiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt+ inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) 
# - (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt))

@passAmt.default_answer = "expression= 
employInvestAmt = manager.get_answer_by_question_name('employInvestAmt')
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt')
estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt')
othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt')
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt = manager.get_answer_by_question_name('bweAmt')
ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull')
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull')
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull')
spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull')
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
inKindPMVAmt = manager.get_answer_by_question_name('inKindPMVAmt')
ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt')
ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
seieAmt = manager.get_answer_by_question_name('seieAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt = manager.get_answer_by_question_name('bweAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')

answer = [(employInvestAmt.to_f + disWorkExpAmt.to_f + estEarnTaxAmt.to_f + othWorkExpAmt.to_f - ssiCaidIrweAmt.to_f - bweAmt.to_f), ((ssdiAmtSelfFull.to_f + ssdiAmtOtherFull.to_f + unearnAmt.to_f + spouseDiAmtSelfFull.to_f + spouseDiAmtOtherFull.to_f + spouseUnEarnAmt.to_f + ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f + inKindPMVAmt.to_f + ssiParDeemAmt.to_f + ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f) - (seieAmt.to_f + spouseSeieAmt.to_f + ssiCaidIrweAmt.to_f + bweAmt.to_f + spouseSsiCaidIrweAmt.to_f + spouseBweAmt.to_f))].min
"
#IF ((employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt) > 0) 
#AND ((ssdiAmtSelfFull + ssdiAmtOtherFull +unearnAmt +spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt+ inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) 
#- (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt) > 0))
@passAmt.display_rules = "
 ssiGet = manager.get_answer_by_question_name('ssiGet')
 employInvestAmt = manager.get_answer_by_question_name('employInvestAmt').to_f
 disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
 estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt').to_f
 othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt').to_f
 ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt').to_f
 bweAmt = manager.get_answer_by_question_name('bweAmt').to_f
 ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull').to_f
 ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull').to_f
 unearnAmt = manager.get_answer_by_question_name('unearnAmt').to_f
 spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull').to_f
 spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull').to_f
 spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt').to_f
 ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt').to_f
 spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').to_f
 inKindPMVAmt = manager.get_answer_by_question_name('inKindPMVAmt').to_f
 ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt').to_f
 ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt').to_f
 ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt').to_f
 seieAmt = manager.get_answer_by_question_name('seieAmt').to_f
 spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt').to_f
 spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt').to_f
 spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt').to_f
 ssiGet == 'Yes' && ((employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt) > 0) && ((ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt + inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt)    - (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt) > 0)
"
#IF ((employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt) > 0)                    AND ((ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt + inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) -    (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt) > 0))

#Zero or Positive Number <= employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt
@passAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
employInvestAmt = manager.get_answer_by_question_name('employInvestAmt').to_f
disWorkExpAmt = manager.get_answer_by_question_name('disWorkExpAmt').to_f
estEarnTaxAmt = manager.get_answer_by_question_name('estEarnTaxAmt').to_f
othWorkExpAmt = manager.get_answer_by_question_name('othWorkExpAmt').to_f
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt').to_f
bweAmt = manager.get_answer_by_question_name('bweAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= (employInvestAmt + disWorkExpAmt + estEarnTaxAmt + othWorkExpAmt - ssiCaidIrweAmt - bweAmt)) rescue false
  else 
    true
end
"
#q_EmployInvestAmt_plus_DisWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt
@passAmt.validation_message= "You can not enter a monthly PASS amount greater than the total amount of work expenses and employability investments you have after subtracting any money you have already included in an IRWE or BWE (C{q_EmployInvestAmt_plus_DisWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt}.).  Enter numbers only.  Do not enter $ or a decimal point."
@passAmt.save!

#29 31 33 47	156	How much of the ~spouseEmployInvestAmt~ your spouse is spending or setting aside monthly to improve future financial self sufficiency is your spouse including in a PASS? (It may also be possible to include work expenses not already counted as IRWE or BWE.)	spousePassAmt
@spousePassAmt.text ="How much of the C{q_spouseEmployInvestAmt} your spouse is spending or setting aside monthly to improve future financial self sufficiency is your spouse including in a PASS? (It may also be possible to include work expenses not already counted as IRWE or BWE.)"
@spousePassAmt.all_inputs_text ="How much of the amount your spouse is spending or setting aside monthly to improve future financial self sufficiency is your spouse including in a PASS? (It may also be possible to include work expenses not already counted as IRWE or BWE.)"

#EXPRESSION: Smaller of (spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt) 
#                                                                                                                                               OR (ssdiAmtSelfFull + ssdiAmtOtherFull + ssdiUnderPayIncreaseAmt - ssdiOverPayDecreaseAmt + unearnAmt + spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt+ ssiOrCaidEarnAmt 
# =>                                                                                                                                                                                                                                                                                                                                    + spouseSsiOrCaidEarnAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt + inKindPMVAmt) - (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt + PassAmt)
@spousePassAmt.default_answer = "expression= 
spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull')
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull')
unearnAmt = manager.get_answer_by_question_name('unearnAmt')
spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull')
spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull')
spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt')
ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
inKindPMVAmt = manager.get_answer_by_question_name('inKindPMVAmt')
seieAmt = manager.get_answer_by_question_name('seieAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt = manager.get_answer_by_question_name('bweAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
passAmt = manager.get_answer_by_question_name('passAmt')

answer = [(spouseEmployInvestAmt.to_f + spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f), ((ssdiAmtSelfFull.to_f + ssdiAmtOtherFull.to_f + unearnAmt.to_f + spouseDiAmtSelfFull.to_f + spouseDiAmtOtherFull.to_f + spouseUnEarnAmt.to_f + ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f + ssiParDeemAmt.to_f + ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f + inKindPMVAmt.to_f) - (seieAmt.to_f + spouseSeieAmt.to_f + ssiCaidIrweAmt.to_f + bweAmt.to_f + spouseSsiCaidIrweAmt.to_f + spouseBweAmt.to_f + passAmt.to_f))].min
"

##EXPRESSION: Smaller of (spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt) 
##  OR (ssdiAmtSelfFull + ssdiAmtOtherFull + ssdiUnderPayIncreaseAmt - ssdiOverPayDecreaseAmt + unearnAmt + spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt+ ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt + inKindPMVAmt) 
##- (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt + passAmt
#@spousePassAmt.default_answer = "expression= 
#spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
#spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
#spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
#spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
#spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
#spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
#ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull')
#ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull')
#ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt')
#ssdiOverPayDecreaseAmt = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt')
#unearnAmt = manager.get_answer_by_question_name('unearnAmt')
#spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull')
#spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull')
#spouseUnEarnAmt = manager.get_answer_by_question_name('spouseUnEarnAmt')
#ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
#spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
#ssiParDeemAmt = manager.get_answer_by_question_name('ssiParDeemAmt') 
#ssiSpouseDeemUnearnAmt = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
#ssiSpouseDeemEarnAmt = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
#inKindPMVAmt = manager.get_answer_by_question_name('inKindPMVAmt')
#seieAmt = manager.get_answer_by_question_name('seieAmt')
#spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
#ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
#bweAmt = manager.get_answer_by_question_name('bweAmt')
#spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
#spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
#PassAmt = manager.get_answer_by_question_name('PassAmt')
#
#answer = [(spouseEmployInvestAmt.to_f + spouseDisWorkExpAmt.to_f + spouseEstEarnTaxAmt.to_f + spouseOthWorkExpAmt.to_f - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f), (ssdiAmtSelfFull.to_f + ssdiAmtOtherFull.to_f + ssdiUnderPayIncreaseAmt.to_f - ssdiOverPayDecreaseAmt.to_f + unearnAmt.to_f + spouseDiAmtSelfFull.to_f + spouseDiAmtOtherFull.to_f + spouseUnEarnAmt.to_f + ssiOrCaidEarnAmt.to_f + spouseSsiOrCaidEarnAmt.to_f + ssiParDeemAmt.to_f + ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f + inKindPMVAmt.to_f) -
#   (seieAmt.to_f + spouseSeieAmt.to_f + ssiCaidIrweAmt.to_f + bweAmt.to_f + spouseSsiCaidIrweAmt.to_f + spouseBweAmt.to_f + passAmt.to_f)].min
#"
##IF spouseSsiGet = Y AND ((spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt) > 0) 
##AND ((ssdiAmtSelfFull + ssdiAmtOtherFull +unearnAmt +spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt+ inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) - 
##(seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt + passAmt) > 0))
@spousePassAmt.display_rules = "
spouseSsiGet              = manager.get_answer_by_question_name('spouseSsiGet')
spouseEmployInvestAmt     = (manager.get_answer_by_question_name('spouseEmployInvestAmt')).to_f
spouseDisWorkExpAmt       = (manager.get_answer_by_question_name('spouseDisWorkExpAmt')).to_f
spouseEstEarnTaxAmt       = (manager.get_answer_by_question_name('spouseEstEarnTaxAmt')).to_f
spouseOthWorkExpAmt       = (manager.get_answer_by_question_name('spouseOthWorkExpAmt')).to_f
spouseSsiCaidIrweAmt      = (manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')).to_f
spouseBweAmt              = (manager.get_answer_by_question_name('spouseBweAmt')).to_f
ssdiAmtSelfFull           = (manager.get_answer_by_question_name('ssdiAmtSelfFull')).to_f
ssdiAmtOtherFull          = (manager.get_answer_by_question_name('ssdiAmtOtherFull')).to_f
unearnAmt                 = (manager.get_answer_by_question_name('unearnAmt')).to_f
spouseDiAmtSelfFull       = (manager.get_answer_by_question_name('spouseDiAmtSelfFull')).to_f
spouseDiAmtOtherFull      = (manager.get_answer_by_question_name('spouseDiAmtOtherFull')).to_f
spouseUnEarnAmt           = (manager.get_answer_by_question_name('spouseUnEarnAmt')).to_f
ssiOrCaidEarnAmt          = (manager.get_answer_by_question_name('ssiOrCaidEarnAmt')).to_f
spouseSsiOrCaidEarnAmt    = (manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')).to_f
inKindPMVAmt              = (manager.get_answer_by_question_name('inKindPMVAmt')).to_f
ssiParDeemAmt             = (manager.get_answer_by_question_name('ssiParDeemAmt')).to_f
ssiSpouseDeemUnearnAmt    = (manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')).to_f
ssiSpouseDeemEarnAmt      = (manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')).to_f
seieAmt                   = (manager.get_answer_by_question_name('seieAmt')).to_f
spouseSeieAmt             = (manager.get_answer_by_question_name('spouseSeieAmt')).to_f
ssiCaidIrweAmt            = (manager.get_answer_by_question_name('ssiCaidIrweAmt')).to_f
bweAmt                    = (manager.get_answer_by_question_name('bweAmt')).to_f
spouseSsiCaidIrweAmt      = (manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')).to_f
spouseBweAmt              = (manager.get_answer_by_question_name('spouseBweAmt')).to_f
passAmt                   = (manager.get_answer_by_question_name('passAmt')).to_f
spouseSsiGet == 'Yes'  && ((spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt) > 0) && 
((ssdiAmtSelfFull + ssdiAmtOtherFull + unearnAmt + spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt + inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) - 
(seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt + passAmt) > 0)
"
#IF spouseSsiGet = Y AND   ((spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseEstEarnTaxAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt) > 0) 
#AND ((ssdiAmtSelfFull + ssdiAmtOtherFull +unearnAmt +spouseDiAmtSelfFull + spouseDiAmtOtherFull + spouseUnEarnAmt + ssiOrCaidEarnAmt + spouseSsiOrCaidEarnAmt+ inKindPMVAmt + ssiParDeemAmt + ssiSpouseDeemUnearnAmt + ssiSpouseDeemEarnAmt) -
# (seieAmt + spouseSeieAmt + ssiCaidIrweAmt + bweAmt + spouseSsiCaidIrweAmt + spouseBweAmt + passAmt) > 0))

#q_EmployInvestAmt_plus_DisWorkExpAmt_plus_EstEarnTaxAmt_plus_OthWorkExpAmt_minus_SsiCaidIrweAmt_minus_BweAmt
#Zero or Positive Number <= spouseEmployInvestAmt + spouseDisWorkExpAmt + spouseOthWorkExpAmt - spouseSsiCaidIrweAmt - spouseBweAmt
@spousePassAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
r_SpousePassPossible = WebCalc.find_by_name('r_SpousePassPossible')
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= Float(r_SpousePassPossible.calculate manager) ) rescue false
  else 
    true
end
"
@spousePassAmt.validation_message= "You can not enter a monthly PASS amount greater than the total amount of work expenses and employability investments your spouse has after subtracting any money already included in an IRWE or BWE (C{r_SpousePassPossible}).  Enter numbers only.  Do not enter $ or a decimal point."
@spousePassAmt.save!

#25	158	Have you completed your Trial Work Period and Grace Period?	twpComplete
@twpComplete.text ="Have you completed your Trial Work Period and Grace Period?"
@twpComplete.default_answer = "Yes"
#IF (blind = N AND ssdiEarnAmt > rateSgaDisabledAmt) OR (blind = Y AND ssdiEarnAmt > rateSgaBlindAmt)
@twpComplete.display_rules = "
 blind              = manager.get_answer_by_question_name('blind')
 ssdiEarnAmt        = manager.get_answer_by_question_name('ssdiEarnAmt').to_f
 rateSgaDisabledAmt = WebCalc.find_by_name('rateSgaDisabledAmt')
 rateSgaBlindAmt    = WebCalc.find_by_name('rateSgaBlindAmt')
 (blind == 'No' && ssdiEarnAmt > Float(rateSgaDisabledAmt.calculate manager)) || (blind == 'Yes' && ssdiEarnAmt > Float(rateSgaBlindAmt.calculate manager))
"
#@twpComplete.validation_rules = ""
#@twpComplete.validation_message= ""
@twpComplete.save!

#25	159	Has your spouse completed the Trial Work Period and Grace Period?	spouseTwpComplete
@spouseTwpComplete.text ="Has your spouse completed the Trial Work Period and Grace Period?"
@spouseTwpComplete.default_answer = "Yes"
#IF (spouseBlind = N AND spouseSsdiEarnAmt > rateSgaDisabledAmt) OR (spouseBlind = Y AND spouseSsdiEarnAmt > rateSgaBlindAmt)
@spouseTwpComplete.display_rules = "
 spouseBlind = manager.get_answer_by_question_name('spouseBlind')
 spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt').to_f
 rateSgaDisabledAmt = WebCalc.find_by_name('rateSgaDisabledAmt')
 rateSgaDisabledAmt = Float(rateSgaDisabledAmt.calculate manager)
 rateSgaBlindAmt = WebCalc.find_by_name('rateSgaBlindAmt')
 rateSgaBlindAmt = Float(rateSgaBlindAmt.calculate manager)
 (spouseBlind == 'No' && spouseSsdiEarnAmt > rateSgaDisabledAmt) || (spouseBlind == 'Yes' && spouseSsdiEarnAmt > rateSgaBlindAmt)
"
#@spouseTwpComplete.validation_rules = ""
#@spouseTwpComplete.validation_message= ""
@spouseTwpComplete.save!

#25	161	What is the dollar value (per month) of any subsidy you get for additonal supervision or special conditions provided to you because of your disability?	subsidyEmpSupAmt
@subsidyEmpSupAmt.text ="What is the dollar value (per month) of any subsidy you get for additional supervision or special conditions provided to you because of your disability?"
@subsidyEmpSupAmt.default_answer = "0.00"
#IF twpComplete = Y
@subsidyEmpSupAmt.display_rules = "
twpComplete = manager.get_answer_by_question_name('twpComplete')
twpComplete == 'Yes'
"
#Zero or Positive Number <= ssdiEarnAmt
@subsidyEmpSupAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && (Float(answer) <= ssdiEarnAmt))  rescue false
  else 
    true
end
"
@subsidyEmpSupAmt.validation_message= "You can not enter an amount greater than the amount you earn (C{q_ssdiEarnAmt}).  Enter positive numbers only.  Do not enter $."
@subsidyEmpSupAmt.save!

#25	162	What is the dollar value (per month) of any subsidy you get in for reduced work duties because of your disabiliy?	subsidyWkDutiesReducAmt
@subsidyWkDutiesReducAmt.text ="What is the dollar value (per month) of any subsidy you get in for reduced work duties because of your disabiliy?"
@subsidyWkDutiesReducAmt.default_answer = "0.00"
#IF twpComplete = Y
@subsidyWkDutiesReducAmt.display_rules = "
twpComplete = manager.get_answer_by_question_name('twpComplete')
twpComplete == 'Yes'"
@subsidyWkDutiesReducAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
ssdiEarnAmt = manager.get_answer_by_question_name('ssdiEarnAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && (Float(answer) <= ssdiEarnAmt))  rescue false
  else 
    true
end
"
@subsidyWkDutiesReducAmt.validation_message= "You can not enter an amount greater than the amount you earn (C{q_ssdiEarnAmt}).  Enter positive numbers only.  Do not enter $."
@subsidyWkDutiesReducAmt.save!

#25	163	What is the dollar value (per month) of any subsidy your spouse gets for additonal supervision or special conditions provided because of your spouse's disability?	spouseSubsidyEmpSupAmt
@spouseSubsidyEmpSupAmt.text ="What is the dollar value (per month) of any subsidy your spouse gets for additonal supervision or special conditions provided because of your spouse's disability?"
@spouseSubsidyEmpSupAmt.default_answer = "0.00"
#IF spouseTwpComplete = Y
@spouseSubsidyEmpSupAmt.display_rules = "
spouseTwpComplete = manager.get_answer_by_question_name('spouseTwpComplete')
spouseTwpComplete == 'Yes'"
#Zero or Positive Number <= spouseSsdiEarnAmt
@spouseSubsidyEmpSupAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && (Float(answer) <= spouseSsdiEarnAmt))  rescue false
  else 
    true
end
"
@spouseSubsidyEmpSupAmt.validation_message= "You can not enter an amount greater than the amount your spouse earns (C{q_spouseSsdiEarnAmt}).  Enter positive numbers only.  Do not enter $."
@spouseSubsidyEmpSupAmt.save!

#25	164	What is the dollar value (per month) of any subsidy your spouse gets in for reduced work duties because of your spouse's disabiliy?	spouseSubsidyWkDutiesReducAmt
@spouseSubsidyWkDutiesReducAmt.text ="What is the dollar value (per month) of any subsidy your spouse gets in for reduced work duties because of your spouse's disabiliy?"
@spouseSubsidyWkDutiesReducAmt.default_answer = "0.00"
@spouseSubsidyWkDutiesReducAmt.display_rules = "
spouseTwpComplete = manager.get_answer_by_question_name('spouseTwpComplete')
spouseTwpComplete == 'Yes'"
@spouseSubsidyWkDutiesReducAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseSsdiEarnAmt = manager.get_answer_by_question_name('spouseSsdiEarnAmt').to_f
if answer != nil then
    true if ((Float(answer) >= 0) && (Float(answer) <= spouseSsdiEarnAmt))  rescue false
  else 
    true
end"
@spouseSubsidyWkDutiesReducAmt.validation_message= "You can not enter an amount greater than the amount your spouse earns (C{q_spouseSsdiEarnAmt}).  Enter positive numbers only.  Do not enter $."
@spouseSubsidyWkDutiesReducAmt.save!

#29 31	168	How much is being subtracted monthly from your SSDI award amount because of Workers Compensation or a Public Disability Benefit?	ssdiWcOrPdbDecreaseAmt
@ssdiWcOrPdbDecreaseAmt.text ="How much is being subtracted monthly from your SSDI award amount because of Workers Compensation or a Public Disability Benefit?"
@ssdiWcOrPdbDecreaseAmt.default_answer = "0.00"
#If (r_ActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND ssdiGet = Y) 
#Note Need current Fix
@ssdiWcOrPdbDecreaseAmt.display_rules = "
r_ActualSsdiPayNotEqualCareBAdjust = WebCalc.find_by_name('r_ActualSsdiPayNotEqualCareBAdjust')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
(ssdiGet == 'Yes' && manager.situation.what_if?) || ((r_ActualSsdiPayNotEqualCareBAdjust.calculate manager) == true && ssdiGet == 'Yes')
"
#Zero or Positive Number  <= (IF ssdiEarnRec = Self, THEN ssdiAmtSelfFull, ELSE IF ssdiEarnRec = Other, THEN ssdiAmtOtherFull, ELSE 0
@ssdiWcOrPdbDecreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull').to_f
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull').to_f
if ssdiEarnRec == 'Self' then 
  diFigure = ssdiAmtSelfFull
elsif ssdiEarnRec == 'Other' 
  then 
  diFigure = ssdiAmtOtherFull
else
  Difigure = 0
end 
if answer != nil then
    true if (Float(answer) >= 0 && Float(answer) <= diFigure) rescue false
  else 
    true
end
"
@ssdiWcOrPdbDecreaseAmt.validation_message= 'The amount being subtracted each month cannot be larger than the amount you entered as your full SSDI award (on the "Unearned Income" page).  Enter positive numbers only.  Do not enter $.'
@ssdiWcOrPdbDecreaseAmt.save!

#29	169	How much is being added monthly to your SSDI check because of a previous underpayment?	ssdiUnderPayIncreaseAmt
@ssdiUnderPayIncreaseAmt.text ="How much is being added monthly to your SSDI check because of a previous underpayment?"
@ssdiUnderPayIncreaseAmt.default_answer = "0.00"
#If (r_ActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND ssdiGet = Y) 
#current adjustment needed
@ssdiUnderPayIncreaseAmt.display_rules = "
r_ActualSsdiPayNotEqualCareBAdjust = WebCalc.find_by_name('r_ActualSsdiPayNotEqualCareBAdjust')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
(ssdiGet == 'Yes' && manager.situation.what_if?) || ((r_ActualSsdiPayNotEqualCareBAdjust.calculate manager) == true && ssdiGet == 'Yes' )"
#Zero or Positive Number
@ssdiUnderPayIncreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssdiUnderPayIncreaseAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssdiUnderPayIncreaseAmt.save!

#29	170	During the time you were underpaid SSDI, did you receive an increased SSI check because of the underpayment?	ssiWhileSsdiUnderPay
@ssiWhileSsdiUnderPay.text ="During the time you were underpaid SSDI, did you receive an increased SSI check because of the underpayment?"
@ssiWhileSsdiUnderPay.default_answer = "No"
#IF ssdiUnderPayIncreaseAmt > 0.00 AND ssiGet = Y
@ssiWhileSsdiUnderPay.display_rules = "
 ssdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('ssdiUnderPayIncreaseAmt').to_f
 ssiGet = manager.get_answer_by_question_name('ssiGet')
 (ssdiUnderPayIncreaseAmt > 0.00) && ssiGet == 'Yes'
"
#@ssiWhileSsdiUnderPay.validation_rules = ""
#@ssiWhileSsdiUnderPay.validation_message= ""
@ssiWhileSsdiUnderPay.save!

#29	171	How much is being deducted monthly from your SSDI check because of a previous overpayment?	ssdiOverPayDecreaseAmt
@ssdiOverPayDecreaseAmt.text ="How much is being deducted monthly from your SSDI check because of a previous overpayment?"
#55 review                     How much is being deducted monthly from your SSDI check because of a previous overpayment?

@ssdiOverPayDecreaseAmt.default_answer = "0.00"
#If (r_ActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND ssdiGet = Y) 
#If (r_ActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND ssdiGet = Y) 

@ssdiOverPayDecreaseAmt.display_rules = "
r_ActualSsdiPayNotEqualCareBAdjust = WebCalc.find_by_name('r_ActualSsdiPayNotEqualCareBAdjust')
r_ActualSsdiPayNotEqualCareBAdjust = (r_ActualSsdiPayNotEqualCareBAdjust.calculate manager)
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
(r_ActualSsdiPayNotEqualCareBAdjust == true && ssdiGet == 'Yes') || (ssdiGet == 'Yes' && manager.situation.what_if?)"

@ssdiOverPayDecreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
ssdiAmtSelfFull = manager.get_answer_by_question_name('ssdiAmtSelfFull')
ssdiAmtOtherFull = manager.get_answer_by_question_name('ssdiAmtOtherFull')
if ssdiEarnRec == 'Self' then 
  diFigure = ssdiAmtSelfFull.to_f
elsif ssdiEarnRec == 'Other' 
  then 
  diFigure = ssdiAmtOtherFull.to_f
else
  Difigure = 0
end 
if answer != nil then
    true if (Float(answer) >= 0 && Float(answer) <= diFigure) rescue false
  else 
    true
end
"
@ssdiOverPayDecreaseAmt.validation_message= "The amount being subtracted each month cannot be larger than the amount you entered as your full SSDI award (on the 'Unearned Income' page).  Enter positive numbers only.  Do not enter $."
@ssdiOverPayDecreaseAmt.save!

#29	172	During the time you were overpaid SSDI, did you receive a reduced SSI check because of the overpayment?	ssiWhileSsdiOverPay
@ssiWhileSsdiOverPay.text ="During the time you were overpaid SSDI, did you receive a reduced SSI check because of the overpayment?"
@ssiWhileSsdiOverPay.default_answer = "No"
#If ssdiOverPayDecreaseAmt > 0 AND ssiGet = Y
@ssiWhileSsdiOverPay.display_rules = "
 ssdiOverPayDecreaseAmt = manager.get_answer_by_question_name('ssdiOverPayDecreaseAmt').to_f
 ssiGet = manager.get_answer_by_question_name('ssiGet')
 (ssdiOverPayDecreaseAmt > 0.00) && ssiGet == 'Yes'
"
#@ssiWhileSsdiOverPay.validation_rules = ""
#@ssiWhileSsdiOverPay.validation_message= ""
@ssiWhileSsdiOverPay.save!

#29 31	175	How much is being subtracted monthly from your spouse's SSDI award amount because of Workers Compensation or a Public Disability Benefit?	spouseSsdiWcOrPdbDecreaseAmt
#           How much is being subtracted monthly from your spouse's SSDI award amount because of Workers Compensation or a Public Disability Benefit?
@spouseSsdiWcOrPdbDecreaseAmt.text ="How much is being subtracted monthly from your spouse's SSDI award amount because of Workers Compensation or a Public Disability Benefit?"
@spouseSsdiWcOrPdbDecreaseAmt.default_answer = "0.00"
#If (r_SpouseActualSsdiPay NotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND spouseSsdiGet = Y) 
@spouseSsdiWcOrPdbDecreaseAmt.display_rules = "
r_SpouseActualSsdiPayNotEqualCareBAdjust  = WebCalc.find_by_name('r_SpouseActualSsdiPayNotEqualCareBAdjust')
spouseSsdiGet                             = manager.get_answer_by_question_name('spouseSsdiGet')
(spouseSsdiGet == 'Yes' && manager.situation.what_if?) || ((r_SpouseActualSsdiPayNotEqualCareBAdjust.calculate manager) == true && spouseSsdiGet == 'Yes')"
#Zero or Positive Number  <= (IF spouseSsdiEarnRec = Self, THEN spouseDiAmtSelfFull, ELSE IF spouseSsdiEarnRec = Other, THEN spouseDiAmtOtherFull, ELSE 0
@spouseSsdiWcOrPdbDecreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull')
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull')
if spouseSsdiEarnRec == 'Self' then 
  diFigure = spouseDiAmtSelfFull.to_f
elsif spouseSsdiEarnRec == 'Other' 
  then 
  diFigure = spouseDiAmtOtherFull.to_f
else
  Difigure = 0
end 
if answer != nil then
    true if (Float(answer) >= 0 && Float(answer) <= diFigure) rescue false
  else 
    true
end
"
@spouseSsdiWcOrPdbDecreaseAmt.validation_message= "The amount being subtracted each month cannot be larger than the amount you entered as your spouse's full SSDI award (on the 'Spouse Unearned Income' page).  Enter positive numbers only.  Do not enter $."
@spouseSsdiWcOrPdbDecreaseAmt.save!

#27 29 31	176	How much is being added monthly to your spouse's SSDI check because of a previous underpayment?	spouseSsdiUnderPayIncreaseAmt
@spouseSsdiUnderPayIncreaseAmt.text ="How much is being added monthly to your spouse's SSDI check because of a previous underpayment?"
@spouseSsdiUnderPayIncreaseAmt.default_answer = "0.00"
#If (r_SpouseActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND spouseSsdiGet = Y) 
@spouseSsdiUnderPayIncreaseAmt.display_rules = "
r_SpouseActualSsdiPayNotEqualCareBAdjust  = WebCalc.find_by_name('r_SpouseActualSsdiPayNotEqualCareBAdjust')
spouseSsdiGet                             = manager.get_answer_by_question_name('spouseSsdiGet')
(spouseSsdiGet == 'Yes' && manager.situation.what_if?) || ((r_SpouseActualSsdiPayNotEqualCareBAdjust.calculate manager) == true && spouseSsdiGet == 'Yes')"
#Zero or Positive Number
@spouseSsdiUnderPayIncreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end"
@spouseSsdiUnderPayIncreaseAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@spouseSsdiUnderPayIncreaseAmt.save!

#29	177	During the time your spouse was underpaid SSDI, did your spouse receive an increased SSI check because of the underpayment?	spouseSsiWhileSsdiUnderPay
@spouseSsiWhileSsdiUnderPay.text ="During the time your spouse was underpaid SSDI, did your spouse receive an increased SSI check because of the underpayment?"
@spouseSsiWhileSsdiUnderPay.default_answer = "No"
#IF spouseSsdiUnderPayIncreaseAmt > 0.00 AND spouseSsiGet = Y
@spouseSsiWhileSsdiUnderPay.display_rules = "
 spouseSsdiUnderPayIncreaseAmt = manager.get_answer_by_question_name('spouseSsdiUnderPayIncreaseAmt').to_f
 spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
 (spouseSsdiUnderPayIncreaseAmt > 0) && spouseSsiGet == 'Yes'
"
#@spouseSsiWhileSsdiUnderPay.validation_rules = ""
#@spouseSsiWhileSsdiUnderPay.validation_message= ""
@spouseSsiWhileSsdiUnderPay.save!

#29 31	178	How much is being deducted monthly from your spouse's SSDI check because of a previous overpayment?	spouseSsdiOverPayDecreaseAmt
@spouseSsdiOverPayDecreaseAmt.text ="How much is being deducted monthly from your spouse's SSDI check because of a previous overpayment?"
@spouseSsdiOverPayDecreaseAmt.default_answer = "0.00"
#If (r_SpouseActualSsdiPayNotEqualCareBAdjust = TRUE) OR (Current/What-If Button = What-If AND spouseSsdiGet = Y) 
@spouseSsdiOverPayDecreaseAmt.display_rules = "
r_SpouseActualSsdiPayNotEqualCareBAdjust = WebCalc.find_by_name('r_SpouseActualSsdiPayNotEqualCareBAdjust')
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
(spouseSsdiGet == 'Yes' && manager.situation.what_if?) || ((r_SpouseActualSsdiPayNotEqualCareBAdjust.calculate manager) == true && spouseSsdiGet == 'Yes')"
#Zero or Positive Number  <= (IF spouseSsdiEarnRec = Self, THEN spouseDiAmtSelfFull, ELSE IF spouseSsdiEarnRec = Other, THEN spouseDiAmtOtherFull, ELSE 0
@spouseSsdiOverPayDecreaseAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
spouseDiAmtSelfFull = manager.get_answer_by_question_name('spouseDiAmtSelfFull')
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
spouseDiAmtOtherFull = manager.get_answer_by_question_name('spouseDiAmtOtherFull')
if spouseSsdiEarnRec == 'Self' then 
  diFigure = spouseDiAmtSelfFull.to_f
elsif spouseSsdiEarnRec == 'Other' 
  then 
  diFigure = spouseDiAmtOtherFull.to_f
else
  Difigure = 0
end 
if answer != nil then
    true if (Float(answer) >= 0 && Float(answer) <= diFigure) rescue false
  else 
    true
end
"
@spouseSsdiOverPayDecreaseAmt.validation_message= "The amount being subtracted each month cannot be larger than the amount you entered as your spouse's full SSDI award (on the 'Spouse Unearned Income' page).  Enter positive numbers only.  Do not enter $."
@spouseSsdiOverPayDecreaseAmt.save!

#29	179	During the time your spouse was overpaid SSDI, did your spouse receive a reduced SSI check because of the overpayment?	spouseSsiWhileSsdiOverPay
@spouseSsiWhileSsdiOverPay.text ="During the time your spouse was overpaid SSDI, did your spouse receive a reduced SSI check because of the overpayment?"
@spouseSsiWhileSsdiOverPay.default_answer = "No"
#If spouseSsdiOverPayDecreaseAmt > 0 AND spouseSsiGet = Y
@spouseSsiWhileSsdiOverPay.display_rules = "
 spouseSsdiOverPayDecreaseAmt = manager.get_answer_by_question_name('spouseSsdiOverPayDecreaseAmt').to_f
 spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
 (spouseSsdiOverPayDecreaseAmt > 0.00) && spouseSsiGet == 'Yes'
"
#@spouseSsiWhileSsdiOverPay.validation_rules = ""
#@spouseSsiWhileSsdiOverPay.validation_message= ""
@spouseSsiWhileSsdiOverPay.save!

#25 31	183	How much is being added monthly to your SSI benefit because of a previous underpayment?	ssiUserUnderPayAddAmt
@ssiUserUnderPayAddAmt.text ="How much is being added monthly to your SSI benefit because of a previous underpayment?"
@ssiUserUnderPayAddAmt.default_answer = "0.00"

#If spouseSsiGet <> Y AND ((Current/What-If Button = What-If AND ssiGet = Y) OR r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust = TRUE)
@ssiUserUnderPayAddAmt.display_rules = "
r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust  = WebCalc.find_by_name('r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust')
ssiGet                                          = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                                    = manager.get_answer_by_question_name('spouseSsiGet')
 spouseSsiGet != 'Yes' && ((ssiGet == 'Yes' && manager.situation.what_if? ) || (ssiGet == 'Yes' && (r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust.calculate manager) == true ))
"
#(r_SpouseActualSsdiPayNotEqualCareBAdjust == true && spouseSsdiGet == 'Yes' && !manager.situation.what_if?) || (spouseSsdiGet == 'Yes' && manager.situation.what_if?)
#!manager.situation.what_if?                                                                                                               manager.situation.what_if?
@ssiUserUnderPayAddAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiUserUnderPayAddAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiUserUnderPayAddAmt.save!

#25 31	184	How much is being deducted monthly from your SSI benefit because of a previous overpayment?	ssiUserOverPayDeductAmt
@ssiUserOverPayDeductAmt.text ="How much is being deducted monthly from your SSI benefit because of a previous overpayment?"
@ssiUserOverPayDeductAmt.default_answer = "0.00"
#If spouseSsiGet <> Y AND ((Current/What-If Button = What-If AND ssiGet = Y) OR r_ActualSsiLessThanCalcSsiNoOverUnderAdjust = TRUE)
@ssiUserOverPayDeductAmt.display_rules = "
ssiGet                                      = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                                = manager.get_answer_by_question_name('spouseSsiGet')
r_ActualSsiLessThanCalcSsiNoOverUnderAdjust = WebCalc.find_by_name('r_ActualSsiLessThanCalcSsiNoOverUnderAdjust')
spouseSsiGet != 'Yes' && ((ssiGet == 'Yes' && manager.situation.what_if? ) || (ssiGet == 'Yes' && (r_ActualSsiLessThanCalcSsiNoOverUnderAdjust.calculate manager) == true ))"

#Zero or Positive Number <= rateFbrAmt
@ssiUserOverPayDeductAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
rateFbrAmt = WebCalc.find_by_name('rateFbrAmt')
rateFbrAmt = Float(rateFbrAmt.calculate manager)
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= rateFbrAmt ) rescue false
  else 
    true
end
"
@ssiUserOverPayDeductAmt.validation_message= "The amount being subtracted cannot be more than the SSI Federal Benefit Rate (FBR). Enter positive numbers only.  Do not enter $."
@ssiUserOverPayDeductAmt.save!

#25 31	185	How much is being added monthly to your spouse's and your SSI benefit because of a previous underpayment?	ssiCoupleUnderPayAddAmt
@ssiCoupleUnderPayAddAmt.text ="How much is being added monthly to your spouse's and your SSI benefit because of a previous underpayment?"
@ssiCoupleUnderPayAddAmt.default_answer = "0.00"
#If spouseSsiGet = Y AND ((Current/What-If Button = What-If AND ssiGet = Y) OR r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust = TRUE)
@ssiCoupleUnderPayAddAmt.display_rules = "
 ssiGet                                         = manager.get_answer_by_question_name('ssiGet')
 spouseSsiGet                                   = manager.get_answer_by_question_name('spouseSsiGet')
 r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust = WebCalc.find_by_name('r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust')
spouseSsiGet == 'Yes' && ((ssiGet == 'Yes' && manager.situation.what_if? ) || ( (r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust.calculate manager) == true ))"

#Zero or Positive Number
@ssiCoupleUnderPayAddAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
if answer != nil then
    true if (Float(answer) >= 0) rescue false
  else 
    true
end
"
@ssiCoupleUnderPayAddAmt.validation_message= "Enter positive numbers only.  Do not enter $."
@ssiCoupleUnderPayAddAmt.save!

#25 31	186	How much is being deducted monthly from your spouse's and your SSI benefit because of a previous overpayment?	ssiCoupleOverPayDeductAmt
@ssiCoupleOverPayDeductAmt.text ="How much is being deducted monthly from your spouse's and your SSI benefit because of a previous overpayment?"
@ssiCoupleOverPayDeductAmt.default_answer = "0.00"
#If spouseSsiGet = Y AND ((Current/What-If Button = What-If AND ssiGet = Y) OR r_ActualSsiLessThanCalcSsiNoOverUnderAdjust = TRUE)
@ssiCoupleOverPayDeductAmt.display_rules = "
  ssiGet                                      = manager.get_answer_by_question_name('ssiGet')
  spouseSsiGet                                = manager.get_answer_by_question_name('spouseSsiGet')
  r_ActualSsiLessThanCalcSsiNoOverUnderAdjust = WebCalc.find_by_name('r_ActualSsiLessThanCalcSsiNoOverUnderAdjust')
 spouseSsiGet == 'Yes' && ((ssiGet == 'Yes' && manager.situation.what_if? ) || ( (r_ActualSsiLessThanCalcSsiNoOverUnderAdjust.calculate manager) == true ))
"
#Zero or Positive Number <= rateFbrCoupleAmt
@ssiCoupleOverPayDeductAmt.validation_rules = "
answer = manager.get_answer_by_question_name(self.name)
rateFbrCoupleAmt = WebCalc.find_by_name('rateFbrCoupleAmt')
rateFbrCoupleAmt = Float(rateFbrCoupleAmt.calculate manager)
if answer != nil then
    true if ((Float(answer) >= 0) && Float(answer) <= rateFbrCoupleAmt ) rescue false
  else 
    true
end
"
@ssiCoupleOverPayDeductAmt.validation_message= "The amount being subtracted cannot be more than the SSI Federal Benefit Rate (FBR) for a couple. (C{rateFbrCoupleAmt}) Enter positive numbers only.  Do not enter $."
@ssiCoupleOverPayDeductAmt.save!
##create webcalcs for Numeric results totals

#Note this needs fixing for SSI and DI double counting

@r_income_total  = WebCalc.find_or_create_by_name('r_income_total')
@r_income_total.operation = "
r_SsdiPayAllAdjustButCareBAmt       = WebCalc.find_by_name('r_SsdiPayAllAdjustButCareBAmt')    
r_SpouseSsdiPayAllAdjustButCareBAmt = WebCalc.find_by_name('r_SpouseSsdiPayAllAdjustButCareBAmt')
r_SsiUserOverUnderAdjustCalcAmt     = WebCalc.find_by_name('r_SsiUserOverUnderAdjustCalcAmt')    
r_SsiCoupleOverUnderAdjustCalcAmt   = WebCalc.find_by_name('r_SsiCoupleOverUnderAdjustCalcAmt')  
q_unearnAmt                         = WebCalc.find_by_name('q_unearnAmt')                        
q_spouseUnEarnAmt                   = WebCalc.find_by_name('q_spouseUnEarnAmt')                  
q_ssdiEarnAmt                       = WebCalc.find_by_name('q_ssdiEarnAmt')                      
q_spouseSsdiEarnAmt                 = WebCalc.find_by_name('q_spouseSsdiEarnAmt')                

q_ssiOrCaidEarnAmt                  = WebCalc.find_by_name('q_ssiOrCaidEarnAmt')                 
q_ssiOrCaidEarnAmt                  = Float(q_ssiOrCaidEarnAmt.calculate manager)
q_spouseSsiOrCaidEarnAmt            = WebCalc.find_by_name('q_spouseSsiOrCaidEarnAmt')           
q_spouseSsiOrCaidEarnAmt            =Float(q_spouseSsiOrCaidEarnAmt.calculate manager)
if  Float(q_ssdiEarnAmt.calculate manager) > 0 then
 q_ssiOrCaidEarnAmt = 0
end
if Float(q_spouseSsdiEarnAmt.calculate manager) > 0 then
 q_spouseSsiOrCaidEarnAmt = 0
end   
(Float(r_SsdiPayAllAdjustButCareBAmt.calculate manager) + Float(r_SpouseSsdiPayAllAdjustButCareBAmt.calculate manager) + Float(r_SsiUserOverUnderAdjustCalcAmt.calculate manager) + Float(r_SsiCoupleOverUnderAdjustCalcAmt.calculate manager) + 
 Float(q_unearnAmt.calculate manager) + Float(q_spouseUnEarnAmt.calculate manager) + Float(q_ssdiEarnAmt.calculate manager) + Float(q_spouseSsdiEarnAmt.calculate manager)  + q_ssiOrCaidEarnAmt + q_spouseSsiOrCaidEarnAmt)
 "
@r_income_total.save!

# A work in progess but set up structure till workbook is ready with real results
#q_disWorkExpAmt
#q_spouseDisWorkExpAmt
#q_othWorkExpAmt
#q_spouseOthWorkExpAmt
#q_employInvestAmt
#q_spouseEmployInvestAmt
#q_vA_AuxGrantFacilityRateAmt
#q_vA_CoupleAuxGrantFacilityRateAmt
#q_careBPremiumAmt
#q_spouseCareBPremiumAmt
#q_To_beCalcMedExp
#q_To_Be_Calc_SpouseMedExp
#q_estEarnTaxAmt
#q_spouseEstEarnTaxAmt
#q_otherExpAmt
#q_spouseOtherExpAmt

@r_TotalGrossExpenses  = WebCalc.find_or_create_by_name('r_TotalGrossExpenses')
@r_TotalGrossExpenses.operation = "
q_disWorkExpAmt                     = WebCalc.find_by_name('q_disWorkExpAmt')    
q_spouseDisWorkExpAmt               = WebCalc.find_by_name('q_spouseDisWorkExpAmt')
q_othWorkExpAmt                     = WebCalc.find_by_name('q_othWorkExpAmt')    
q_spouseOthWorkExpAmt               = WebCalc.find_by_name('q_spouseOthWorkExpAmt')  
q_employInvestAmt                   = WebCalc.find_by_name('q_employInvestAmt')                        
q_spouseEmployInvestAmt             = WebCalc.find_by_name('q_spouseEmployInvestAmt')                  
q_vA_AuxGrantFacilityRateAmt        = WebCalc.find_by_name('q_vA_AuxGrantFacilityRateAmt')                      
q_vA_CoupleAuxGrantFacilityRateAmt  = WebCalc.find_by_name('q_vA_CoupleAuxGrantFacilityRateAmt')                
q_careBPremiumAmt                   = WebCalc.find_by_name('q_careBPremiumAmt')                 
q_spouseCareBPremiumAmt             = WebCalc.find_by_name('q_spouseCareBPremiumAmt')           
r_VA_CaidMedicalExpNumR             = WebCalc.find_by_name('r_VA_CaidMedicalExpNumR')
r_VA_CaidSpouseMedicalExpNumR       = WebCalc.find_by_name('r_VA_CaidSpouseMedicalExpNumR')

q_estEarnTaxAmt                    = WebCalc.find_by_name('q_estEarnTaxAmt')           
q_spouseEstEarnTaxAmt              = WebCalc.find_by_name('q_spouseEstEarnTaxAmt')           
q_otherExpAmt                      = WebCalc.find_by_name('q_otherExpAmt')           
q_spouseOtherExpAmt                = WebCalc.find_by_name('q_spouseOtherExpAmt')           

(Float(q_disWorkExpAmt.calculate manager) + Float(q_spouseDisWorkExpAmt.calculate manager) + Float(q_othWorkExpAmt.calculate manager) + 
 Float(q_spouseOthWorkExpAmt.calculate manager) + Float(q_employInvestAmt.calculate manager) + Float(q_spouseEmployInvestAmt.calculate manager) + 
 Float(q_vA_AuxGrantFacilityRateAmt.calculate manager) +  Float(q_vA_CoupleAuxGrantFacilityRateAmt.calculate manager) +  Float(q_careBPremiumAmt.calculate manager) + Float(q_spouseCareBPremiumAmt.calculate manager) +  
 Float(r_VA_CaidMedicalExpNumR.calculate manager)  + Float(r_VA_CaidSpouseMedicalExpNumR.calculate manager) + Float(q_estEarnTaxAmt.calculate manager) + Float(q_spouseEstEarnTaxAmt.calculate manager) + 
 Float(q_otherExpAmt.calculate manager) + Float(q_spouseOtherExpAmt.calculate manager))
"
@r_TotalGrossExpenses.save!

@R_NetIncome  = WebCalc.find_or_create_by_name('R_NetIncome')
@R_NetIncome.operation = "
r_income_total                     = WebCalc.find_by_name('r_income_total')    
r_TotalGrossExpenses               = WebCalc.find_by_name('r_TotalGrossExpenses')
(Float(r_income_total.calculate manager)  - Float(r_TotalGrossExpenses.calculate manager))
"
@R_NetIncome.save!

#added on 1/5/2012 but will need work Sent email to DJR late on 1/5/2012 to ask about Medicaid deeming numbers not included
#ssiParDeemAmt
#ssiSpouseDeemUnearnAmt
#ssiSpouseDeemEarnAmt

@r_TotalDeemedIncome  = WebCalc.find_or_create_by_name('r_TotalDeemedIncome')
@r_TotalDeemedIncome.operation = "
ssiParDeemAmt           = manager.get_answer_by_question_name('ssiParDeemAmt')
ssiSpouseDeemUnearnAmt  = manager.get_answer_by_question_name('ssiSpouseDeemUnearnAmt')
ssiSpouseDeemEarnAmt    = manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt')
ssiParDeemAmt.to_f + ssiSpouseDeemUnearnAmt.to_f + ssiSpouseDeemEarnAmt.to_f
"
@r_TotalDeemedIncome.save!

@DummyZero  = WebCalc.find_or_create_by_name('DummyZero')
@DummyZero.operation = "
0"
@DummyZero.save!  
  
##############################                    Numerical results
# Creat web numerical result group  Bob is happy with a delete all here, it keeps it clean and should not impact retrieved cases
WebNumericalResultsGroup.delete_all
#somehow we lost the Text atribiute or maybe my memory fails.  Anyway it will need to be added later for now i'll omit  Obstacle 
#@INCOME = WebNumericalResultsGroup.create!(:name => 'INCOME',                               :text => 'INCOME',                :order => 1)
#@EXPENSES = WebNumericalResultsGroup.create!(:name => 'EXPENSES',                           :text => 'EXPENSES',              :order => 2)
#@INCOME_minus_EXPENSES = WebNumericalResultsGroup.create!(:name => 'INCOME_minus_EXPENSES', :text => 'INCOME minus EXPENSES', :order => 3)
#@NET_INCOME = WebNumericalResultsGroup.create!(:name => 'NET_INCOME',                       :text => 'NET INCOME',            :order => 4)

@nRG_INCOME                   = WebNumericalResultsGroup.create!(:name => 'INCOME',                       :order => 1)
@nRG_EXPENSES                 = WebNumericalResultsGroup.create!(:name => 'EXPENSES',                     :order => 2)
@nRG_INCOME_minus_EXPENSES    = WebNumericalResultsGroup.create!(:name => 'INCOME minus EXPENSES',        :order => 3)
# I don't think Net income is a group now, just a bolded total @NET_INCOME = WebNumericalResultsGroup.create!(:name => 'NET_INCOME',                        :order => 4)

@nRG_Deemed_Income                   = WebNumericalResultsGroup.create!(:name => 'Deemed Income',                       :order => 5)
@nRG_Medicaid                        = WebNumericalResultsGroup.create!(:name => 'Medicaid',                            :order => 6)
@nRG_Spouse_Medicaid                 = WebNumericalResultsGroup.create!(:name => 'Spouse Medicaid',                     :order => 7)
@nRG_SSI_SSDI_Work_Incentives        = WebNumericalResultsGroup.create!(:name => 'SSI & SSDI Work Incentives',          :order => 8)
@nRG_Spouse_SSI_SSDI_Work_Incentives = WebNumericalResultsGroup.create!(:name => 'Spouse SSI & SSDI Work Incentives',   :order => 9)



WebNumericalResult.delete_all
@nr_SsdiPayAllAdjustButCareBAmt         = WebNumericalResult.create!(:name => 'nr_SsdiPayAllAdjustButCareBAmt',           :text => 'SSDI Cash Benefit (Self)',                           :display_rules => 'always', :order => 1,  :web_calc_id => @r_SsdiPayAllAdjustButCareBAmt.id,        :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_SpouseSsdiPayAllAdjustButCareBAmt   = WebNumericalResult.create!(:name => 'nr_SpouseSsdiPayAllAdjustButCareBAmt',     :text => 'SSDI Cash Benefit (Spouse)',                         :display_rules => 'always', :order => 2,  :web_calc_id => @r_SpouseSsdiPayAllAdjustButCareBAmt.id,  :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_SsiUserOverUnderAdjustCalcAmt       = WebNumericalResult.create!(:name => 'nr_SsiUserOverUnderAdjustCalcAmt',         :text => 'SSI Cash Benefit (Self)',                            :display_rules => 'always', :order => 3,  :web_calc_id => @r_SsiUserOverUnderAdjustCalcAmt.id,      :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_SsiCoupleOverUnderAdjustCalcAmt     = WebNumericalResult.create!(:name => 'nr_SsiCoupleOverUnderAdjustCalcAmt',       :text => 'SSI Cash Benefit (SSI Couple)',                      :display_rules => 'always', :order => 4,  :web_calc_id => @r_SsiCoupleOverUnderAdjustCalcAmt.id,    :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_VA_CaidRAuxGrantPaymentAmt          = WebNumericalResult.create!(:name => 'nr_VA_CaidRAuxGrantPaymentAmt',            :text => 'Virginia Auxiliary Grant',                           :display_rules => 'always', :order => 5, :web_calc_id =>  @r_VA_AuxGrantPaymentAmt.id,              :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_UnearnAmt                           = WebNumericalResult.create!(:name => 'nr_UnearnAmt',                             :text => 'Other Unearned Income (Self)',                       :display_rules => 'always', :order => 6,  :web_calc_id => @q_unearnAmt.id,                          :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_spouseUnEarnAmt                     = WebNumericalResult.create!(:name => 'nr_spouseUnEarnAmt',                       :text => 'Other Unearned Income (Spouse)',                     :display_rules => 'always', :order => 7,  :web_calc_id => @q_spouseUnEarnAmt.id,                    :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_ssdiEarnAmt                         = WebNumericalResult.create!(:name => 'nr_ssdiEarnAmt',                           :text => 'Earned Income (Self)',                               :display_rules => 'always', :order => 8,  :web_calc_id => @q_ssdiEarnAmt.id,                        :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_spouseSsdiEarnAmt                   = WebNumericalResult.create!(:name => 'nr_spouseSsdiEarnAmt',                     :text => 'Earned Income (Spouse)',                             :display_rules => 'always', :order => 9,  :web_calc_id => @q_spouseSsdiEarnAmt.id,                  :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_ssiOrCaidEarnAmt                    = WebNumericalResult.create!(:name => 'nr_ssiOrCaidEarnAmt',                      :text => 'Earned Income Received (Self)',                      :display_rules => 'always', :order => 10, :web_calc_id => @q_ssiOrCaidEarnAmt.id,                   :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_spouseSsiOrCaidEarnAmt              = WebNumericalResult.create!(:name => 'nr_spouseSsiOrCaidEarnAmt',                :text => 'Earned Income Received (Spouse)',                    :display_rules => 'always', :order => 11, :web_calc_id => @q_spouseSsiOrCaidEarnAmt.id,             :result_type => 'currency_detail',   :group_id => @nRG_INCOME.id)
@nr_TotalGrossIncome                    = WebNumericalResult.create!(:name => 'nr_TotalGrossIncome',                      :text => 'Total Gross Income',                                 :display_rules => 'always', :order => 12, :web_calc_id => @r_income_total.id,                       :result_type => 'currency_total',    :group_id => @nRG_INCOME.id)
                                                                                                                                              
@nr_disWorkExpAmt                       = WebNumericalResult.create!(:name => 'nr_disWorkExpAmt',                         :text => 'Disability Related Work Expenses',                   :display_rules => 'always', :order => 1,  :web_calc_id => @q_disWorkExpAmt.id,                      :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseDisWorkExpAmt                 = WebNumericalResult.create!(:name => 'nr_spouseDisWorkExpAmt',                   :text => 'Spouse Disability Related Work Expenses',            :display_rules => 'always', :order => 2,  :web_calc_id => @q_spouseDisWorkExpAmt.id,                :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_othWorkExpAmt                       = WebNumericalResult.create!(:name => 'nr_othWorkExpAmt',                         :text => 'Other Work Expenses',                                :display_rules => 'always', :order => 3,  :web_calc_id => @q_othWorkExpAmt.id,                      :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseOthWorkExpAmt                 = WebNumericalResult.create!(:name => 'nr_spouseOthWorkExpAmt',                   :text => 'Spouse Other Work Expenses',                         :display_rules => 'always', :order => 4,  :web_calc_id => @q_spouseOthWorkExpAmt.id,                :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_employInvestAmt                     = WebNumericalResult.create!(:name => 'nr_employInvestAmt',                       :text => 'Employability Investments',                          :display_rules => 'always', :order => 5,  :web_calc_id => @q_employInvestAmt.id,                    :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseEmployInvestAmt               = WebNumericalResult.create!(:name => 'nr_spouseEmployInvestAmt',                 :text => 'Spouse Employability Investments',                   :display_rules => 'always', :order => 6,  :web_calc_id => @q_spouseEmployInvestAmt.id,              :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_vA_AuxGrantFacilityRateAmt          = WebNumericalResult.create!(:name => 'nr_vA_AuxGrantFacilityRateAmt',            :text => 'Assisted Living/Adult Foster Care Payment (Self)',   :display_rules => 'always', :order => 7,  :web_calc_id => @q_vA_AuxGrantFacilityRateAmt.id,         :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_vA_CoupleAuxGrantFacilityRateAmt    = WebNumericalResult.create!(:name => 'nr_vA_CoupleAuxGrantFacilityRateAmt',      :text => 'Assisted Living/Adult Foster Care Payment (Couple)', :display_rules => 'always', :order => 8,  :web_calc_id => @q_vA_CoupleAuxGrantFacilityRateAmt.id,   :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_CareBPremiumAmt                     = WebNumericalResult.create!(:name => 'nr_CareBPremiumAmt',                       :text => 'Medicare Part B Premium',                            :display_rules => 'always', :order => 9,  :web_calc_id => @q_careBPremiumAmt.id,                    :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseCareBPremiumAmt               = WebNumericalResult.create!(:name => 'nr_spouseCareBPremiumAmt',                 :text => 'Spouse Medicare Part B Premium',                     :display_rules => 'always', :order => 10, :web_calc_id => @q_spouseCareBPremiumAmt.id,              :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_Estimated_Medical_Expenses          = WebNumericalResult.create!(:name => 'nr_Estimated_Medical_Expenses',            :text => 'Estimated Medical Expenses',                         :display_rules => 'always', :order => 11, :web_calc_id => @r_VA_CaidMedicalExpNumR.id,              :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_Spouse_Estimated_Medical_Expenses   = WebNumericalResult.create!(:name => 'nr_Spouse_Estimated_Medical_Expenses',     :text => 'Spouse Estimated Medical Expenses',                  :display_rules => 'always', :order => 12, :web_calc_id => @r_VA_CaidSpouseMedicalExpNumR.id,        :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_estEarnTaxAmt                       = WebNumericalResult.create!(:name => 'nr_estEarnTaxAmt',                         :text => 'Estimated Taxes',                                    :display_rules => 'always', :order => 13, :web_calc_id => @q_estEarnTaxAmt.id,                      :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseEstEarnTaxAmt                 = WebNumericalResult.create!(:name => 'nr_spouseEstEarnTaxAmt',                   :text => 'Spouse Estimated Taxes',                             :display_rules => 'always', :order => 14, :web_calc_id => @q_spouseEstEarnTaxAmt.id,                :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_otherExpAmt                         = WebNumericalResult.create!(:name => 'nr_otherExpAmt',                           :text => 'Other Estimated Expenses',                           :display_rules => 'always', :order => 15, :web_calc_id => @q_otherExpAmt.id,                        :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_spouseOtherExpAmt                   = WebNumericalResult.create!(:name => 'nr_spouseOtherExpAmt',                     :text => 'Spouse Other Estimated Expenses',                    :display_rules => 'always', :order => 16, :web_calc_id => @q_spouseOtherExpAmt.id,                  :result_type => 'currency_detail',   :group_id => @nRG_EXPENSES.id)
@nr_TotalGrossExpenses                  = WebNumericalResult.create!(:name => 'nr_TotalGrossExpenses',                    :text => 'Total Expenses & Employability Investments ',        :display_rules => 'always', :order => 17, :web_calc_id => @r_TotalGrossExpenses.id,                 :result_type => 'currency_total',    :group_id => @nRG_EXPENSES.id)
                                                                                                                                                                                                                    
@nr_TotalGrossIncome2                   = WebNumericalResult.create!(:name => 'nr_TotalGrossIncome2',                     :text => 'Total Gross Income',                                 :display_rules => 'always', :order => 1,  :web_calc_id => @r_income_total.id,                       :result_type => 'currency_detail',   :group_id => @nRG_INCOME_minus_EXPENSES.id)
@nr_TotalGrossExpenses2                 = WebNumericalResult.create!(:name => 'nr_TotalGrossExpenses2',                   :text => 'Total Expenses & Employability Investments ',        :display_rules => 'always', :order => 2,  :web_calc_id => @r_TotalGrossExpenses.id,                 :result_type => 'currency_detail',   :group_id => @nRG_INCOME_minus_EXPENSES.id)
@nr_NetIncome                           = WebNumericalResult.create!(:name => 'nr_NetIncome',                             :text => 'Net Income',                                         :display_rules => 'always', :order => 3,  :web_calc_id => @R_NetIncome.id,                          :result_type => 'currency_total',    :group_id => @nRG_INCOME_minus_EXPENSES.id)

#IF ssdiGet = Y  xx
@nr_SsdiPayAllAdjustButCareBAmt.display_rules = "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiGet == 'Yes'"
@nr_SsdiPayAllAdjustButCareBAmt.save!

#IF spouseSsdiGet = Y  Not working add in ssdiget display rule IF spouseSsiGet = Y OR CaidSpouseGet = Y OR CaidSpouseApply = Y

@nr_SpouseSsdiPayAllAdjustButCareBAmt.display_rules = "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
(spouseSsiGet == 'Yes' || caidSpouseGet == 'Yes' || caidSpouseApply == 'Yes') && spouseSsdiGet == 'Yes'"
@nr_SpouseSsdiPayAllAdjustButCareBAmt.save!

#IF ssiGet = Y AND spouseSsiGet <> Y
@nr_SsiUserOverUnderAdjustCalcAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiGet == 'Yes' && spouseSsiGet != 'Yes'"
@nr_SsiUserOverUnderAdjustCalcAmt.save!

#IF ssiGet = Y AND spouseSsiGet = Y
@nr_SsiCoupleOverUnderAdjustCalcAmt.display_rules = "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiGet == 'Yes' && spouseSsiGet == 'Yes'"
@nr_SsiCoupleOverUnderAdjustCalcAmt.save!

#If VA_LiveWithSpouseAuxGrantFacility = Y OR VA_LiveInAuxGrantFacility = Y
@nr_VA_CaidRAuxGrantPaymentAmt.display_rules = "
vA_LiveWithSpouseAuxGrantFacility = manager.get_answer_by_question_name('vA_LiveWithSpouseAuxGrantFacility')
vA_LiveInAuxGrantFacility = manager.get_answer_by_question_name('vA_LiveInAuxGrantFacility')
vA_LiveWithSpouseAuxGrantFacility == 'Yes' || vA_LiveInAuxGrantFacility == 'Yes'"
@nr_VA_CaidRAuxGrantPaymentAmt.save!

#IF unearnAmt Appear = Appear ##
@nr_UnearnAmt.display_rules = "
!(manager.get_answer_by_question_name('unearnAmt').blank?)"
@nr_UnearnAmt.save!

#IF spouseUnEarnAmt Appear =Appear
@nr_spouseUnEarnAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseUnEarnAmt').blank?)"
@nr_spouseUnEarnAmt.save!

#IF ssdiEarnAmt Appear = Appear AND ssiOrCaidEarnAmt Appear = no
@nr_ssdiEarnAmt.display_rules = "
!(manager.get_answer_by_question_name('ssdiEarnAmt').blank?) && manager.get_answer_by_question_name('ssiOrCaidEarnAmt').blank? "
@nr_ssdiEarnAmt.save!

#nr_spouseSsdiEarnAmt IF spouseSsdiEarnAmt Appear = Appear AND spouseSsiOrCaidEarnAmt Appear = no
@nr_spouseSsdiEarnAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseSsdiEarnAmt').blank?) && manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').blank? "
@nr_spouseSsdiEarnAmt.save!

#IF ssiOrCaidEarnAmt Appear =Appear
@nr_ssiOrCaidEarnAmt.display_rules = "
!(manager.get_answer_by_question_name('ssiOrCaidEarnAmt').blank?)"
@nr_ssiOrCaidEarnAmt.save!

#IF spouseSsiOrCaidEarnAmt Appear = Appear
@nr_spouseSsiOrCaidEarnAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt').blank?)"
@nr_spouseSsiOrCaidEarnAmt.save!

#nr_TotalGrossIncome always shows

#nr_disWorkExpAmt IF disWorkExpAmt Appear =Appear
@nr_disWorkExpAmt.display_rules = "
!(manager.get_answer_by_question_name('disWorkExpAmt').blank?)"
@nr_disWorkExpAmt.save!

#IF spouseDisWorkExpAmt Appear = true
@nr_spouseDisWorkExpAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseDisWorkExpAmt').blank?)"
@nr_spouseDisWorkExpAmt.save!

#IF othWorkExpAmt Appear = Appear
@nr_othWorkExpAmt.display_rules = "
!(manager.get_answer_by_question_name('othWorkExpAmt').blank?)"
@nr_othWorkExpAmt.save!

#IF spouseOthWorkExpAmt Appear = Appear
@nr_spouseOthWorkExpAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseOthWorkExpAmt').blank?)"
@nr_spouseOthWorkExpAmt.save!

#IF employInvestAmt Appear =Appear
@nr_employInvestAmt.display_rules = "
!(manager.get_answer_by_question_name('employInvestAmt').blank?)"
@nr_employInvestAmt.save!

#IF spouseEmployInvestAmt Appear = Appear
@nr_spouseEmployInvestAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseEmployInvestAmt').blank?)"
@nr_spouseEmployInvestAmt.save!

#IF vA_AuxGrantFacilityRateAmt Appear =Appear
@nr_vA_AuxGrantFacilityRateAmt.display_rules = "
!(manager.get_answer_by_question_name('vA_AuxGrantFacilityRateAmt').blank?)"
@nr_vA_AuxGrantFacilityRateAmt.save!

#IF vA_CoupleAuxGrantFacilityRateAmt Appear = Appear
@nr_vA_CoupleAuxGrantFacilityRateAmt.display_rules = "
!(manager.get_answer_by_question_name('vA_CoupleAuxGrantFacilityRateAmt').blank?)"
@nr_vA_CoupleAuxGrantFacilityRateAmt.save!

#IF careBGet = Y
@nr_CareBPremiumAmt.display_rules = "
!(manager.get_answer_by_question_name('careBGet').blank?)"
@nr_CareBPremiumAmt.save!

#IF spouseCareBGet = Y
@nr_spouseCareBPremiumAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseCareBGet').blank?)"
@nr_spouseCareBPremiumAmt.save!

#IF estMedExpWithoutCaidAmt = Appear
@nr_Estimated_Medical_Expenses.display_rules = "
!(manager.get_answer_by_question_name('estMedExpWithoutCaidAmt').blank?)"
@nr_Estimated_Medical_Expenses.save!

#IF spouseEstMedExpWithoutCaidAmt = Appear
@nr_Spouse_Estimated_Medical_Expenses.display_rules = "
!(manager.get_answer_by_question_name('spouseEstMedExpWithoutCaidAmt').blank?)"
@nr_Spouse_Estimated_Medical_Expenses.save!

#IF estEarnTaxAmt Appear = Appear
@nr_estEarnTaxAmt.display_rules = "
!(manager.get_answer_by_question_name('estEarnTaxAmt').blank?)"
@nr_estEarnTaxAmt.save!

#IF spouseEstEarnTaxAmt Appear =Appear
@nr_spouseEstEarnTaxAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseEstEarnTaxAmt').blank?)"
@nr_spouseEstEarnTaxAmt.save!

#IF otherExpAmt Appear = Appear
@nr_otherExpAmt.display_rules = "
!(manager.get_answer_by_question_name('otherExpAmt').blank?)"
@nr_otherExpAmt.save!

#IF spouseOtherExpAmt Appear = Appear
@nr_spouseOtherExpAmt.display_rules = "
!(manager.get_answer_by_question_name('spouseOtherExpAmt').blank?)"
@nr_spouseOtherExpAmt.save!

#nr_TotalGrossExpenses always shows
#nr_TotalGrossIncome2   always shows
#nr_TotalGrossExpenses2 always shows
#nr_NetIncome           always shows


@nr_TotalGrossIncome2.display_rules = "
!(manager.get_answer_by_question_name('spouseOtherExpAmt').blank?)"
@nr_TotalGrossIncome2.save!


#Deemed income 
@nr_ssiParDeemAmt                               = WebNumericalResult.create!(:name => 'nr_ssiParDeemAmt',                         :text => 'SSI Deemed Parental Income',                           :display_rules => 'always', :order => 1,  :web_calc_id => @q_ssiParDeemAmt.id,                     :result_type => 'currency_detail',   :group_id => @nRG_Deemed_Income.id)
@nr_ssiSpouseDeemUnearnAmt                      = WebNumericalResult.create!(:name => 'nr_ssiSpouseDeemUnearnAmt',                :text => 'SSI Deemed Unearned Spousal Income',                   :display_rules => 'always', :order => 4,  :web_calc_id => @q_ssiSpouseDeemUnearnAmt.id,            :result_type => 'currency_detail',   :group_id => @nRG_Deemed_Income.id)
@nr_ssiSpouseDeemEarnAmt                        = WebNumericalResult.create!(:name => 'nr_ssiSpouseDeemEarnAmt',                  :text => 'SSI Deemed Earned Spousal Income',                     :display_rules => 'always', :order => 6,  :web_calc_id => @q_ssiSpouseDeemEarnAmt.id,              :result_type => 'currency_detail',   :group_id => @nRG_Deemed_Income.id)
@nr_TotalDeemedIncome                           = WebNumericalResult.create!(:name => 'nr_TotalDeemedIncome',                     :text => 'Total Deemed Income',                                  :display_rules => 'always', :order => 8,  :web_calc_id => @r_TotalDeemedIncome.id,                 :result_type => 'currency_total',    :group_id => @nRG_Deemed_Income.id)

#IF ssiParDeemAmt > 0
@nr_ssiParDeemAmt.display_rules = "
manager.get_answer_by_question_name('ssiParDeemAmt').to_f > 0"
@nr_ssiParDeemAmt.save!

#If ssiSpouseDeem = YES
@nr_ssiSpouseDeemUnearnAmt.display_rules = "
manager.get_answer_by_question_name('ssiSpouseDeem') == 'Yes'"
@nr_ssiSpouseDeemUnearnAmt.save!

#If ssiSpouseDeem = YES
@nr_ssiSpouseDeemEarnAmt.display_rules = "
manager.get_answer_by_question_name('ssiSpouseDeem') == 'Yes'"
@nr_ssiSpouseDeemEarnAmt.save!

#IF ssiParDeemAmt > 0 OR ssiSpouseDeem = YES
@nr_TotalDeemedIncome.display_rules = "
manager.get_answer_by_question_name('ssiSpouseDeem') == 'Yes' || manager.get_answer_by_question_name('ssiSpouseDeem') == 'Yes' "
@nr_TotalDeemedIncome.save!

#Medicaid
@nr_MedicaidCoveredGroup                        = WebNumericalResult.create!(:name => 'nr_MedicaidCoveredGroup',                   :text => 'Medicaid Covered Group',                                               :display_rules => 'always', :order => 1,  :web_calc_id => @r_VA_CaidCovGrpNumR.id,                     :result_type => 'string_detail',   :group_id => @nRG_Medicaid.id)
@nr_Non_Financial_Eligibility                   = WebNumericalResult.create!(:name => 'nr_Non_Financial_Eligibility',              :text => 'Non-Financial Eligibility',                                            :display_rules => 'always', :order => 2,  :web_calc_id => @r_VA_CaidWorksInitialNonFinEligNumR.id,     :result_type => 'string_detail',   :group_id => @nRG_Medicaid.id)
@nr_Resource_Eligibility                        = WebNumericalResult.create!(:name => 'nr_Resource_Eligibility',                   :text => 'Resource Eligibility',                                                 :display_rules => 'always', :order => 3,  :web_calc_id => @r_VA_CaidResourceEligNumR.id,               :result_type => 'string_detail',   :group_id => @nRG_Medicaid.id)
@nr_Income_Eligibility                          = WebNumericalResult.create!(:name => 'nr_Income_Eligibility',                     :text => 'Income Eligibility',                                                   :display_rules => 'always', :order => 4,  :web_calc_id => @r_VA_CaidIncomeEligNumR.id,                 :result_type => 'string_detail',   :group_id => @nRG_Medicaid.id)
@nr_Initial_Eligibility_for_MEDICAID_WORKS      = WebNumericalResult.create!(:name => 'nr_Initial_Eligibility_for_MEDICAID_WORKS', :text => 'Initial Eligibility for MEDICAID WORKS as an SSI or 1619b Recipient',  :display_rules => 'always', :order => 5,  :web_calc_id => @r_VA_CaidSsi1619bWorksInitialEligNumR.id,   :result_type => 'string_detail',   :group_id => @nRG_Medicaid.id)

#If caidGet OR caidApply = YES
@nr_MedicaidCoveredGroup.display_rules = "
manager.get_answer_by_question_name('caidGet') == 'Yes' || manager.get_answer_by_question_name('caidApply') == 'Yes'"
@nr_MedicaidCoveredGroup.save!

#If vA_CaidApplyCoveredGroup = MEDICAID WORKS
@nr_Non_Financial_Eligibility.display_rules = "
manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup') == 'MEDICAID WORKS'"
@nr_Non_Financial_Eligibility.save!

#If CaidGet OR CaidApply = YES
@nr_Resource_Eligibility.display_rules = "
manager.get_answer_by_question_name('caidGet') == 'Yes' || manager.get_answer_by_question_name('caidApply') == 'Yes'"
@nr_Resource_Eligibility.save!

#If CaidGet OR CaidApply = YES
@nr_Income_Eligibility.display_rules = "
manager.get_answer_by_question_name('caidGet') == 'Yes' || manager.get_answer_by_question_name('caidApply') == 'Yes'"
@nr_Income_Eligibility.save!

#If vA_CaidSsiRecipientApplyWorks = YES
@nr_Initial_Eligibility_for_MEDICAID_WORKS.display_rules = "
manager.get_answer_by_question_name('vA_CaidSsiRecipientApplyWorks') == 'Yes'"
@nr_Initial_Eligibility_for_MEDICAID_WORKS.save!

#Spouse Medicaid
@nr_SpouseMedicaidCoveredGroup                         =  WebNumericalResult.create!(:name => 'nr_SpouseMedicaidCoveredGroup',                   :text => 'Spouse Medicaid Covered Group',                                               :display_rules => 'always', :order => 1,  :web_calc_id => @r_VA_CaidSpouseCovGrpNumR.id,                     :result_type => 'string_detail',   :group_id => @nRG_Spouse_Medicaid.id)
@nr_SpouseNon_Financial_Eligibility                    =  WebNumericalResult.create!(:name => 'nr_SpouseNon_Financial_Eligibility',              :text => 'Spouse Non-Financial Eligibility',                                            :display_rules => 'always', :order => 2,  :web_calc_id => @r_VA_CaidSpouseWorksInitialNonFinEligNumR.id,     :result_type => 'string_detail',   :group_id => @nRG_Spouse_Medicaid.id)
@nr_SpouseResource_Eligibility                         =  WebNumericalResult.create!(:name => 'nr_SpouseResource_Eligibility',                   :text => 'Spouse Resource Eligibility',                                                 :display_rules => 'always', :order => 3,  :web_calc_id => @r_VA_CaidSpouseResourceEligNumR.id,               :result_type => 'string_detail',   :group_id => @nRG_Spouse_Medicaid.id)
@nr_SpouseIncome_Eligibility                           =  WebNumericalResult.create!(:name => 'nr_SpouseIncome_Eligibility',                     :text => 'Spouse Income Eligibility',                                                   :display_rules => 'always', :order => 4,  :web_calc_id => @r_VA_CaidSpouseIncomeEligNumR.id,                 :result_type => 'string_detail',   :group_id => @nRG_Spouse_Medicaid.id)
@nr_SpouseInitial_Eligibility_for_MEDICAID_WORKS       =  WebNumericalResult.create!(:name => 'nr_SpouseInitial_Eligibility_for_MEDICAID_WORKS', :text => 'Spouse Initial Eligibility for MEDICAID WORKS as an SSI or 1619b Recipient',  :display_rules => 'always', :order => 5,  :web_calc_id => @r_VA_CaidSpouseSsi1619bWorksInitialEligNumR.id,   :result_type => 'string_detail',   :group_id => @nRG_Spouse_Medicaid.id)

#If caidSpouseGet OR caidSpouseApply = YES
@nr_SpouseMedicaidCoveredGroup.display_rules = "
manager.get_answer_by_question_name('caidSpouseGet') == 'Yes' || manager.get_answer_by_question_name('caidSpouseApply') == 'Yes'"
@nr_SpouseMedicaidCoveredGroup.save!

#If vA_CaidSpouseApplyCoveredGroup = MEDICAID WORKS
@nr_SpouseNon_Financial_Eligibility.display_rules = "
manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup') == 'MEDICAID WORKS'"
@nr_SpouseNon_Financial_Eligibility.save!

#If CaidSpouseGet OR CaidSpouseApply = YES
@nr_SpouseResource_Eligibility.display_rules = "
manager.get_answer_by_question_name('caidSpouseGet') == 'Yes' || manager.get_answer_by_question_name('caidSpouseApply') == 'Yes'"
@nr_SpouseResource_Eligibility.save!

#If CaidSpouseGet OR CaidSpouseApply = YES
@nr_SpouseIncome_Eligibility.display_rules = "
manager.get_answer_by_question_name('caidSpouseGet') == 'Yes' || manager.get_answer_by_question_name('caidSpouseApply') == 'Yes'"
@nr_SpouseIncome_Eligibility.save!

#If VA_CaidSpouseSsiRecipientApplyWorks = YES
@nr_SpouseInitial_Eligibility_for_MEDICAID_WORKS.display_rules = "
manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup') == 'MEDICAID WORKS'"
@nr_SpouseInitial_Eligibility_for_MEDICAID_WORKS.save!

@nr_StudentEarnedIncomeExclusion                         =  WebNumericalResult.create!(:name => 'nr_StudentEarnedIncomeExclusion',                 :text => 'Student Earned Income Exclusion (SEIE)',                                      :display_rules => 'always', :order => 1,  :web_calc_id => @q_seieAmt.id,                                     :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_IRWE_affecting_SSI                                   =  WebNumericalResult.create!(:name => 'nr_IRWE_affecting_SSI',                           :text => 'IRWE (affecting SSI Benefit Level)',                                          :display_rules => 'always', :order => 2,  :web_calc_id => @q_ssiCaidIrweAmt.id,                              :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_IRWE_affecting_SGA                                   =  WebNumericalResult.create!(:name => 'nr_IRWE_affecting_SGA',                           :text => 'IRWE (affecting SGA Determination)',                                          :display_rules => 'always', :order => 3,  :web_calc_id => @q_sgaIrweAmt.id,                                  :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_BWE_affecting_SSI                                    =  WebNumericalResult.create!(:name => 'nr_BWE_affecting_SSI',                            :text => 'BWE (affecting SSI Benefit Level)',                                           :display_rules => 'always', :order => 4,  :web_calc_id => @q_bweAmt.id,                                      :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Pass                                                 =  WebNumericalResult.create!(:name => 'nr_Pass',                                         :text => 'PASS (income)',                                                               :display_rules => 'always', :order => 5,  :web_calc_id => @q_passAmt.id,                                     :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Subsidy_for_Special_Conditions                       =  WebNumericalResult.create!(:name => 'nr_Subsidy_for_Special_Conditions',               :text => 'Subsidy for Special Conditions',                                              :display_rules => 'always', :order => 6,  :web_calc_id => @q_subsidyEmpSupAmt.id,                            :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Subsidy_for_Reduced_Work_Duties                      =  WebNumericalResult.create!(:name => 'nr_Subsidy_for_Reduced_Work_Duties',              :text => 'Subsidy for Reduced Work Duties',                                             :display_rules => 'always', :order => 7,  :web_calc_id => @q_subsidyWkDutiesReducAmt.id,                     :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Trial_Work_Grace_Periods_Complete                    =  WebNumericalResult.create!(:name => 'nr_Trial_Work_Grace_Periods_Complete',            :text => 'Trial Work & Grace Periods Complete',                                         :display_rules => 'always', :order => 8,  :web_calc_id => @q_twpComplete.id,                                 :result_type => 'string_detail',     :group_id => @nRG_SSI_SSDI_Work_Incentives.id)

#IF student = YES
@nr_StudentEarnedIncomeExclusion.display_rules = "
manager.get_answer_by_question_name('student') == 'Yes'"
@nr_StudentEarnedIncomeExclusion.save!

#IF ssiGet & disability  = YES
@nr_IRWE_affecting_SSI.display_rules = "
manager.get_answer_by_question_name('ssiGet') == 'Yes' && manager.get_answer_by_question_name('disability') == 'Yes'"
@nr_IRWE_affecting_SSI.save!

#IF ssiGet OR ssdiGet = YES
@nr_IRWE_affecting_SGA.display_rules = "
manager.get_answer_by_question_name('ssiGet') == 'Yes' && manager.get_answer_by_question_name('disability') == 'Yes'"
@nr_IRWE_affecting_SGA.save!

#IF ssiGet = YES AND blind = YES
@nr_BWE_affecting_SSI.display_rules = "
manager.get_answer_by_question_name('ssiGet') == 'Yes' && manager.get_answer_by_question_name('blind') == 'Yes'"
@nr_BWE_affecting_SSI.save!

#IF ssiGet = YES
@nr_Pass.display_rules = "
manager.get_answer_by_question_name('ssiGet') == 'Yes'"
@nr_Pass.save!

#IF ssdiGet = YES
@nr_Subsidy_for_Special_Conditions.display_rules = "
manager.get_answer_by_question_name('ssdiGet') == 'Yes'"
@nr_Subsidy_for_Special_Conditions.save!

#IF ssdiGet = YES
@nr_Subsidy_for_Reduced_Work_Duties.display_rules = "
manager.get_answer_by_question_name('ssdiGet') == 'Yes'"
@nr_Subsidy_for_Reduced_Work_Duties.save!

#IF twpComplete Appears
@nr_Trial_Work_Grace_Periods_Complete.display_rules = "
!(manager.get_answer_by_question_name('twpComplete').blank?)"
@nr_Trial_Work_Grace_Periods_Complete.save!
                                                                                   
@nr_Spouse_StudentEarnedIncomeExclusion                   = WebNumericalResult.create!(:name => 'nr_Spouse_StudentEarnedIncomeExclusion',          :text => 'Spouse Student Earned Income Exclusion (SEIE)',                               :display_rules => 'always', :order => 1,  :web_calc_id => @q_spouseSeieAmt.id,                               :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_IRWE_affecting_SSI                             = WebNumericalResult.create!(:name => 'nr_Spouse_IRWE_affecting_SSI',                    :text => 'Spouse IRWE (affecting SSI Benefit Level)',                                   :display_rules => 'always', :order => 2,  :web_calc_id => @q_spouseSsiCaidIrweAmt.id,                        :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_IRWE_affecting_SGA                             = WebNumericalResult.create!(:name => 'nr_Spouse_IRWE_affecting_SGA',                    :text => 'Spouse IRWE (affecting SGA Determination)',                                   :display_rules => 'always', :order => 3,  :web_calc_id => @q_spouseSgaIrweAmt.id,                            :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_BWE_affecting_SSI                              = WebNumericalResult.create!(:name => 'nr_Spouse_BWE_affecting_SSI',                     :text => 'Spouse BWE (affecting SSI Benefit Level)',                                    :display_rules => 'always', :order => 4,  :web_calc_id => @q_spouseBweAmt.id,                                :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_Pass                                           = WebNumericalResult.create!(:name => 'nr_Spouse_Pass',                                  :text => 'Spouse PASS (income)',                                                        :display_rules => 'always', :order => 5,  :web_calc_id => @q_spousePassAmt.id,                               :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_Subsidy_for_Special_Conditions                 = WebNumericalResult.create!(:name => 'nr_Spouse_Subsidy_for_Special_Conditions',        :text => 'Spouse Subsidy for Special Conditions',                                       :display_rules => 'always', :order => 6,  :web_calc_id => @q_spouseSubsidyEmpSupAmt.id,                      :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_Subsidy_for_Reduced_Work_Duties                = WebNumericalResult.create!(:name => 'nr_Spouse_Subsidy_for_Reduced_Work_Duties',       :text => 'Spouse Subsidy for Reduced Work Duties',                                      :display_rules => 'always', :order => 7,  :web_calc_id => @q_spouseSubsidyWkDutiesReducAmt.id,               :result_type => 'currency_detail',   :group_id => @nRG_SSI_SSDI_Work_Incentives.id)
@nr_Spouse_Trial_Work_Grace_Periods_Complete              = WebNumericalResult.create!(:name => 'nr_Spouse_Trial_Work_Grace_Periods_Complete',     :text => 'Spouse Trial Work & Grace Periods Complete',                                  :display_rules => 'always', :order => 8,  :web_calc_id => @q_spouseTwpComplete.id,                           :result_type => 'string_detail',     :group_id => @nRG_SSI_SSDI_Work_Incentives.id)

#IF spouseStudent = YES
@nr_Spouse_StudentEarnedIncomeExclusion.display_rules = "
!(manager.get_answer_by_question_name('spouseStudent').blank?)"
@nr_Spouse_StudentEarnedIncomeExclusion.save!

#IF spouseSsiGet AND spouseDisability= YES
@nr_Spouse_IRWE_affecting_SSI.display_rules = "
manager.get_answer_by_question_name('spouseSsiGet') == 'Yes' && manager.get_answer_by_question_name('spouseDisability') == 'Yes'"
@nr_Spouse_IRWE_affecting_SSI.save!

#IF spouseSsiGet OR spouseSsdiGet = YES
@nr_Spouse_IRWE_affecting_SGA.display_rules = "
manager.get_answer_by_question_name('spouseSsiGet') == 'Yes' && manager.get_answer_by_question_name('spouseSsdiGet') == 'Yes'"
@nr_Spouse_IRWE_affecting_SGA.save!

#IF spouseSsiGet = YES AND spouseBlind = YES
@nr_Spouse_BWE_affecting_SSI.display_rules = "
manager.get_answer_by_question_name('spouseSsiGet') == 'Yes' && manager.get_answer_by_question_name('spouseBlind') == 'Yes'"
@nr_Spouse_BWE_affecting_SSI.save!

#IF spouseSsiGet = YES
@nr_Spouse_Pass.display_rules = "
manager.get_answer_by_question_name('spouseSsiGet') == 'Yes'"
@nr_Spouse_Pass.save!

#IF spouseSsdiGet = YES
@nr_Spouse_Subsidy_for_Special_Conditions.display_rules = "
manager.get_answer_by_question_name('spouseSsdiGet') == 'Yes'"
@nr_Spouse_Subsidy_for_Special_Conditions.save!

#IF spouseSsdiGet = YES
@nr_Spouse_Subsidy_for_Reduced_Work_Duties.display_rules = "
manager.get_answer_by_question_name('spouseSsdiGet') == 'Yes'"
@nr_Spouse_Subsidy_for_Reduced_Work_Duties.save!

#IF spouseTwpComplete Appears
@nr_Spouse_Trial_Work_Grace_Periods_Complete.display_rules = "
!(manager.get_answer_by_question_name('spouseTwpComplete').blank?)"
@nr_Spouse_Trial_Work_Grace_Periods_Complete.save!


#Create WebNumeric Results for admin viewing
@WebCalc_Age = WebNumericalResultsGroup.create!(:name => 'WebCalc_Age',                        :order => 50)
WebNumericalResult.create!(:name => 'rAge',                 :text => 'rAge',                      :display_rules => 'manager.current_user.admin?', :order => 1, :web_calc_id => @rAge.id,              :result_type => 'string_detail',   :group_id => @WebCalc_Age.id)
WebNumericalResult.create!(:name => 'rSpouseAge',           :text => 'rSpouseAge',                :display_rules => 'manager.current_user.admin?', :order => 2, :web_calc_id => @rSpouseAge.id,        :result_type => 'string_detail',   :group_id => @WebCalc_Age.id)
##Determine the User's SSDI Cash Benefit Amount
@User_SSDI_Cash_Benefit_Amount = WebNumericalResultsGroup.create!(:name => 'User_SSDI_Cash_Benefit_Amount',                        :order => 52)
WebNumericalResult.create!(:name => 'r_SgaAmt',                 :text => 'r_SgaAmt',                      :display_rules => 'manager.current_user.admin?', :order => 1, :web_calc_id => @r_SgaAmt.id,              :result_type => 'currency_detail',   :group_id => @User_SSDI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsdiSgaExceeded',        :text => 'r_SsdiSgaExceeded',             :display_rules => 'manager.current_user.admin?', :order => 2, :web_calc_id => @r_SsdiSgaExceeded.id,     :result_type => 'string_detail',     :group_id => @User_SSDI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsdiBenefitStops',       :text => 'r_SsdiBenefitStops',            :display_rules => 'manager.current_user.admin?', :order => 3, :web_calc_id => @r_SsdiBenefitStops.id,    :result_type => 'string_detail',     :group_id => @User_SSDI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsdiEseCeases',          :text => 'r_SsdiEseCeases',               :display_rules => 'manager.current_user.admin?', :order => 4, :web_calc_id => @r_SsdiEseCeases.id,       :result_type => 'string_detail',     :group_id => @User_SSDI_Cash_Benefit_Amount.id)
#Determine User's SSDI Payment Amount Before and After Adjustments  Note not using "find_or_create_by_name"
@User_SSDI_Payment_Amount_Before_and_After_Adjustments = WebNumericalResultsGroup.create!(:name => 'User_SSDI_Payment_Amount_Before_and_After_Adjustments',                        :order => 54)
WebNumericalResult.create!(:name => 'r_SsdiPayNoAdjustAmt',                      :text => 'r_SsdiPayNoAdjustAmt',           :display_rules => 'manager.current_user.admin?', :order => 1, :web_calc_id => @r_SsdiPayNoAdjustAmt.id,           :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
WebNumericalResult.create!(:name => 'r_SsdiPayCareBAdjustAmt',                   :text => 'r_SsdiPayCareBAdjustAmt',        :display_rules => 'manager.current_user.admin?', :order => 2, :web_calc_id => @r_SsdiPayCareBAdjustAmt.id,        :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
WebNumericalResult.create!(:name => 'r_SsdiPayWcOrPdbAdjustAmt',                 :text => 'r_SsdiPayWcOrPdbAdjustAmt',      :display_rules => 'manager.current_user.admin?', :order => 3, :web_calc_id => @r_SsdiPayWcOrPdbAdjustAmt.id,      :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
WebNumericalResult.create!(:name => 'r_SsdiPayOverUnderAdjustAmt',               :text => 'r_SsdiPayOverUnderAdjustAmt',    :display_rules => 'manager.current_user.admin?', :order => 4, :web_calc_id => @r_SsdiPayOverUnderAdjustAmt.id,    :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
WebNumericalResult.create!(:name => 'r_SsdiPayAllAdjustAmt',                     :text => 'r_SsdiPayAllAdjustAmt',          :display_rules => 'manager.current_user.admin?', :order => 5, :web_calc_id => @r_SsdiPayAllAdjustAmt.id,          :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
WebNumericalResult.create!(:name => 'r_SsdiPayAllAdjustButCareBAmt',             :text => 'r_SsdiPayAllAdjustButCareBAmt',  :display_rules => 'manager.current_user.admin?', :order => 6, :web_calc_id => @r_SsdiPayAllAdjustButCareBAmt.id,  :result_type => 'currency_detail',   :group_id => @User_SSDI_Payment_Amount_Before_and_After_Adjustments.id)
#xx  
#Determine Whether User's Actual SSDI Amount = Calculated Amounts
@User_Actual_SSDI_Amount_eq_Calculated = WebNumericalResultsGroup.create!(:name => 'User_Actual_SSDI_Amount_eq_Calculated',                        :order => 56)
WebNumericalResult.create!(:name => 'r_ActualSsdiPayNotEqualNoAdjust',           :text => 'r_ActualSsdiPayNotEqualNoAdjust',            :display_rules => 'manager.current_user.admin?', :order => 1, :web_calc_id => @r_ActualSsdiPayNotEqualNoAdjust.id,           :result_type => 'string_detail',   :group_id => @User_Actual_SSDI_Amount_eq_Calculated.id)
WebNumericalResult.create!(:name => 'r_ActualSsdiPayNotEqualCareBAdjust',        :text => 'r_ActualSsdiPayNotEqualCareBAdjust',         :display_rules => 'manager.current_user.admin?', :order => 2, :web_calc_id => @r_ActualSsdiPayNotEqualCareBAdjust.id,        :result_type => 'string_detail',   :group_id => @User_Actual_SSDI_Amount_eq_Calculated.id)
WebNumericalResult.create!(:name => 'r_ActualSsdiPayNotEqualWcOrPbdAdjust',      :text => 'r_ActualSsdiPayNotEqualWcOrPbdAdjust',       :display_rules => 'manager.current_user.admin?', :order => 3, :web_calc_id => @r_ActualSsdiPayNotEqualWcOrPbdAdjust.id,      :result_type => 'string_detail',   :group_id => @User_Actual_SSDI_Amount_eq_Calculated.id)
WebNumericalResult.create!(:name => 'r_ActualSsdiPayNotEqualAllAdjust',          :text => 'r_ActualSsdiPayNotEqualAllAdjust',           :display_rules => 'manager.current_user.admin?', :order => 4, :web_calc_id => @r_ActualSsdiPayNotEqualAllAdjust.id,          :result_type => 'string_detail',   :group_id => @User_Actual_SSDI_Amount_eq_Calculated.id)

#Determine the Spouse's SSDI Cash Benefit Amount
#Determine Spouse's SGA Amount
@Spouse_SSDI = WebNumericalResultsGroup.create!(:name => 'Spouse_SSDI',                        :order => 58)
WebNumericalResult.create!(:name => 'r_SpouseSgaAmt',                              :text => 'r_SpouseSgaAmt',                               :display_rules => 'manager.current_user.admin?', :order =>  1, :web_calc_id => @r_SpouseSgaAmt.id,                              :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiSgaExceeded',                     :text => 'r_SpouseSsdiSgaExceeded',                      :display_rules => 'manager.current_user.admin?', :order =>  2, :web_calc_id => @r_SpouseSsdiSgaExceeded.id,                     :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiBenefitStops',                    :text => 'r_SpouseSsdiBenefitStops',                     :display_rules => 'manager.current_user.admin?', :order =>  3, :web_calc_id => @r_SpouseSsdiBenefitStops.id,                    :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiEseCeases',                       :text => 'r_SpouseSsdiEseCeases',                        :display_rules => 'manager.current_user.admin?', :order =>  4, :web_calc_id => @r_SpouseSsdiEseCeases.id,                       :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayNoAdjustAmt',                  :text => 'r_SpouseSsdiPayNoAdjustAmt',                   :display_rules => 'manager.current_user.admin?', :order =>  5, :web_calc_id => @r_SpouseSsdiPayNoAdjustAmt.id,                  :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayCareBAdjustAmt',               :text => 'r_SpouseSsdiPayCareBAdjustAmt',                :display_rules => 'manager.current_user.admin?', :order =>  6, :web_calc_id => @r_SpouseSsdiPayCareBAdjustAmt.id,               :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayWcOrPdbAdjustAmt',             :text => 'r_SpouseSsdiPayWcOrPdbAdjustAmt',              :display_rules => 'manager.current_user.admin?', :order =>  7, :web_calc_id => @r_SpouseSsdiPayWcOrPdbAdjustAmt.id,             :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayOverUnderAdjustAmt',           :text => 'r_SpouseSsdiPayOverUnderAdjustAmt',            :display_rules => 'manager.current_user.admin?', :order =>  8, :web_calc_id => @r_SpouseSsdiPayOverUnderAdjustAmt.id,           :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayAllAdjustAmt',                 :text => 'r_SpouseSsdiPayAllAdjustAmt',                  :display_rules => 'manager.current_user.admin?', :order =>  9, :web_calc_id => @r_SpouseSsdiPayAllAdjustAmt.id,                 :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiPayAllAdjustButCareBAmt',         :text => 'r_SpouseSsdiPayAllAdjustButCareBAmt',          :display_rules => 'manager.current_user.admin?', :order => 10, :web_calc_id => @r_SpouseSsdiPayAllAdjustButCareBAmt.id,         :result_type => 'currency_detail',  :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseActualSsdiPayNotEqualNoAdjust',       :text => 'r_SpouseActualSsdiPayNotEqualNoAdjust',        :display_rules => 'manager.current_user.admin?', :order => 11, :web_calc_id => @r_SpouseActualSsdiPayNotEqualNoAdjust.id,       :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseActualSsdiPayNotEqualCareBAdjust',    :text => 'r_SpouseActualSsdiPayNotEqualCareBAdjust',     :display_rules => 'manager.current_user.admin?', :order => 12, :web_calc_id => @r_SpouseActualSsdiPayNotEqualCareBAdjust.id,    :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust',  :text => 'r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust',   :display_rules => 'manager.current_user.admin?', :order => 13, :web_calc_id => @r_SpouseActualSsdiPayNotEqualWcOrPbdAdjust.id,  :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
WebNumericalResult.create!(:name => 'r_SpouseActualSsdiPayNotEqualAllAdjust',      :text => 'r_SpouseActualSsdiPayNotEqualAllAdjust',       :display_rules => 'manager.current_user.admin?', :order => 14, :web_calc_id => @r_SpouseActualSsdiPayNotEqualAllAdjust.id,      :result_type => 'string_detail',    :group_id => @Spouse_SSDI.id)
#
#25	1220	Determine the Federal SSI Cash Benefit Amount for ssiGet and for Medicaid covered groups: Protected SSI Disabled Child (PSDC), Protected Adult Disabled Child (PADC), and 1619b
@SSI_Cash_Benefit_Amount = WebNumericalResultsGroup.create!(:name => 'SSI_Cash_Benefit_Amount',                        :order => 62)
WebNumericalResult.create!(:name => 'r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt',                                 :text => 'r_SsdiForSsiCalcCaidCovGroupPsdcPadc1619bAmt',                                   :display_rules => 'manager.current_user.admin?', :order =>  1, :web_calc_id => @r_SpouseSgaAmt.id,                                                              :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsdiForSsiCalcAmt',                                                          :text => 'r_SsdiForSsiCalcAmt',                                                            :display_rules => 'manager.current_user.admin?', :order =>  2, :web_calc_id => @r_SsdiForSsiCalcAmt.id,                                                         :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt',                                     :text => 'r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt',                                       :display_rules => 'manager.current_user.admin?', :order =>  3, :web_calc_id => @r_SpouseSsdiCaidCovGroupPsdcPadc1619bAmt.id,                                    :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SpouseSsdiForSsiCalcAmt',                                                    :text => 'r_SpouseSsdiForSsiCalcAmt',                                                      :display_rules => 'manager.current_user.admin?', :order =>  4, :web_calc_id => @r_SpouseSsdiForSsiCalcAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                          :text => 'r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                            :display_rules => 'manager.current_user.admin?', :order =>  5, :web_calc_id => @r_SsiUnearnNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                         :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnNoSpouseDeemAmt',                                                   :text => 'r_SsiUnearnNoSpouseDeemAmt',                                                     :display_rules => 'manager.current_user.admin?', :order =>  6, :web_calc_id => @r_SsiUnearnNoSpouseDeemAmt.id,                                                  :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)


WebNumericalResult.create!(:name => 'r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                            :text => 'r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                              :display_rules => 'manager.current_user.admin?', :order =>  7, :web_calc_id => @r_SsiUnearnSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                           :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnSpouseDeemAmt',                                                     :text => 'r_SsiUnearnSpouseDeemAmt',                                                       :display_rules => 'manager.current_user.admin?', :order =>  8, :web_calc_id => @r_SsiUnearnSpouseDeemAmt.id,                                                    :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',   :text => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',     :display_rules => 'manager.current_user.admin?', :order =>  9, :web_calc_id => @r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,  :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt',                            :text => 'r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt',                              :display_rules => 'manager.current_user.admin?', :order =>  10, :web_calc_id => @r_SsiUnearnMinusInfreqAndNeedBasedNoSpouseDeemAmt.id,                          :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',           :text => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',             :display_rules => 'manager.current_user.admin?', :order =>  11, :web_calc_id => @r_SsiUnearnMinusGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,         :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt',                                    :text => 'r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt',                                      :display_rules => 'manager.current_user.admin?', :order =>  12, :web_calc_id => @r_SsiUnearnMinusGenExcludeNoSpouseDeemAmt.id,                                  :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                   :text => 'r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                     :display_rules => 'manager.current_user.admin?', :order =>  13, :web_calc_id => @r_UnearnForSsiCalcNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                 :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_UnearnForSsiCalcNoSpouseDeemAmt',                                            :text => 'r_UnearnForSsiCalcNoSpouseDeemAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>  14, :web_calc_id => @r_UnearnForSsiCalcNoSpouseDeemAmt.id,                                          :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                :text => 'r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                  :display_rules => 'manager.current_user.admin?', :order =>  15, :web_calc_id => @r_SsiUnusedGenExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,              :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnusedGenExcludeNoSpouseDeemAmt',                                         :text => 'r_SsiUnusedGenExcludeNoSpouseDeemAmt',                                           :display_rules => 'manager.current_user.admin?', :order =>  16, :web_calc_id => @r_SsiUnusedGenExcludeNoSpouseDeemAmt.id,                                       :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt',     :text => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt',       :display_rules => 'manager.current_user.admin?', :order =>  17, :web_calc_id => @r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,   :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt',                              :text => 'r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt',                                :display_rules => 'manager.current_user.admin?', :order =>  18, :web_calc_id => @r_SsiUnearnMinusInfreqAndNeedBasedSpouseDeemAmt.id,                            :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',             :text => 'r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',               :display_rules => 'manager.current_user.admin?', :order =>  19, :web_calc_id => @r_SsiUnearnMinusGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,           :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnearnMinusGenExcludeSpouseDeemAmt',                                      :text => 'r_SsiUnearnMinusGenExcludeSpouseDeemAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>  20, :web_calc_id => @r_SsiUnearnMinusGenExcludeSpouseDeemAmt.id,                                    :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                     :text => 'r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                       :display_rules => 'manager.current_user.admin?', :order =>  21, :web_calc_id => @r_UnearnForSsiCalcSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                   :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_UnearnForSsiCalcSpouseDeemAmt',                                              :text => 'r_UnearnForSsiCalcSpouseDeemAmt',                                                :display_rules => 'manager.current_user.admin?', :order =>  22, :web_calc_id => @r_UnearnForSsiCalcSpouseDeemAmt.id,                                            :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                  :text => 'r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                    :display_rules => 'manager.current_user.admin?', :order =>  23, :web_calc_id => @r_SsiUnusedGenExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)
WebNumericalResult.create!(:name => 'r_SsiUnusedGenExcludeSpouseDeemAmt',                                           :text => 'r_SsiUnusedGenExcludeSpouseDeemAmt',                                             :display_rules => 'manager.current_user.admin?', :order =>  24, :web_calc_id => @r_SsiUnusedGenExcludeSpouseDeemAmt.id,                                         :result_type => 'currency_detail',  :group_id => @SSI_Cash_Benefit_Amount.id)

#25	1880	Determine Earned Income for Determining SSI Cash Benefit Amount
@SSI_Earned_Income = WebNumericalResultsGroup.create!(:name => 'SSI_Earned_Income',                        :order => 64)
WebNumericalResult.create!(:name => 'r_SeiePlusIrweAmt',                                                        :text => 'r_SeiePlusIrweAmt',                                                        :display_rules => 'manager.current_user.admin?', :order =>   1, :web_calc_id => @r_SeiePlusIrweAmt.id,                                                                   :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_SpouseSeiePlusIrweAmt',                                                  :text => 'r_SpouseSeiePlusIrweAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>   2, :web_calc_id => @r_SpouseSeiePlusIrweAmt.id,                                                             :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',     :text => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',     :display_rules => 'manager.current_user.admin?', :order =>   3, :web_calc_id => @r_EarnMinusGenAndEarnExcludeNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt',                              :text => 'r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt',                              :display_rules => 'manager.current_user.admin?', :order =>   4, :web_calc_id => @r_EarnMinusGenAndEarnExcludeNoSpouseDeemAmt.id,                                         :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',               :text => 'r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',               :display_rules => 'manager.current_user.admin?', :order =>   5, :web_calc_id => @r_EarnBeforeDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                          :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnBeforeDivideNoSpouseDeemAmt',                                        :text => 'r_EarnBeforeDivideNoSpouseDeemAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>   6, :web_calc_id => @r_EarnBeforeDivideNoSpouseDeemAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                :text => 'r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                :display_rules => 'manager.current_user.admin?', :order =>   6, :web_calc_id => @r_EarnAfterDivideNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                           :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnAfterDivideNoSpouseDeemAmt',                                         :text => 'r_EarnAfterDivideNoSpouseDeemAmt',                                         :display_rules => 'manager.current_user.admin?', :order =>   7, :web_calc_id => @r_EarnAfterDivideNoSpouseDeemAmt.id,                                                    :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',       :text => 'r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt',       :display_rules => 'manager.current_user.admin?', :order =>   8, :web_calc_id => @r_EarnMinusGenAndEarnExcludeSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                  :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnMinusGenAndEarnExcludeSpouseDeemAmt',                                :text => 'r_EarnMinusGenAndEarnExcludeSpouseDeemAmt',                                :display_rules => 'manager.current_user.admin?', :order =>   9, :web_calc_id => @r_EarnMinusGenAndEarnExcludeSpouseDeemAmt.id,                                           :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                 :text => 'r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                 :display_rules => 'manager.current_user.admin?', :order =>  10, :web_calc_id => @r_EarnBeforeDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                            :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnBeforeDivideSpouseDeemAmt',                                          :text => 'r_EarnBeforeDivideSpouseDeemAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>  11, :web_calc_id => @r_EarnBeforeDivideSpouseDeemAmt.id,                                                     :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                  :text => 'r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                  :display_rules => 'manager.current_user.admin?', :order =>  12, :web_calc_id => @r_EarnAfterDivideSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                             :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_EarnAfterDivideSpouseDeemAmt',                                           :text => 'r_EarnAfterDivideSpouseDeemAmt',                                           :display_rules => 'manager.current_user.admin?', :order =>  13, :web_calc_id => @r_EarnAfterDivideSpouseDeemAmt.id,                                                      :result_type => 'currency_detail',  :group_id => @SSI_Earned_Income.id)
WebNumericalResult.create!(:name => 'r_SgaExceededNotSsiElig',                                                  :text => 'r_SgaExceededNotSsiElig',                                                  :display_rules => 'manager.current_user.admin?', :order =>  14, :web_calc_id => @r_SgaExceededNotSsiElig.id,                                                             :result_type => 'string_detail',    :group_id => @SSI_Earned_Income.id)

#25	2270	Determine Total Income for Determining SSI Cash Benefit Amount
@SSI_total_Income = WebNumericalResultsGroup.create!(:name => 'SSI_total_Income',                        :order => 64)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',               :text => 'r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',               :display_rules => 'manager.current_user.admin?', :order =>   1, :web_calc_id => @r_TotalIncMinusBweNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBweNoSpouseDeemAmt',                                        :text => 'r_TotalIncMinusBweNoSpouseDeemAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>   2, :web_calc_id => @r_TotalIncMinusBweNoSpouseDeemAmt.id,                                         :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                 :text => 'r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt',                 :display_rules => 'manager.current_user.admin?', :order =>   3, :web_calc_id => @r_TotalIncMinusBweSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,                  :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBweSpouseDeemAmt',                                          :text => 'r_TotalIncMinusBweSpouseDeemAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>   4, :web_calc_id => @r_TotalIncMinusBweSpouseDeemAmt.id,                                           :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',           :text => 'r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt',           :display_rules => 'manager.current_user.admin?', :order =>   5, :web_calc_id => @r_TotalIncMinusBwePassNoSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,            :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt',             :text => 'r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt',             :display_rules => 'manager.current_user.admin?', :order =>   7, :web_calc_id => @r_TotalIncMinusBwePassSpouseDeemCaidCovGroupPsdcPadc1619bAmt.id,              :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)
WebNumericalResult.create!(:name => 'r_TotalIncMinusBwePassSpouseDeemAmt',                                      :text => 'r_TotalIncMinusBwePassSpouseDeemAmt',                                      :display_rules => 'manager.current_user.admin?', :order =>   8, :web_calc_id => @r_TotalIncMinusBwePassSpouseDeemAmt.id,                                       :result_type => 'currency_detail',  :group_id => @SSI_total_Income.id)

#25	2450	Determine the Federal Benefit Rate and the SSI Cash Benefit Amount both with and without spousal deeming but without adjustment for Under or Over payments
@Determine_Federal_Benefit_Rate = WebNumericalResultsGroup.create!(:name => 'Determine_Federal_Benefit_Rate',                        :order => 67)
WebNumericalResult.create!(:name => 'r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt',                                :text => 'r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt',                                :display_rules => 'manager.current_user.admin?', :order =>   1, :web_calc_id => @r_FbrNoSpouseDeemCovGroupPsdcPadc1619bAmt.id,                                 :result_type => 'currency_detail',  :group_id => @Determine_Federal_Benefit_Rate.id)
WebNumericalResult.create!(:name => 'r_FbrNoSpouseDeemAmt',                                                     :text => 'r_FbrNoSpouseDeemAmt',                                                     :display_rules => 'manager.current_user.admin?', :order =>   2, :web_calc_id => @r_FbrNoSpouseDeemAmt.id,                                                      :result_type => 'currency_detail',  :group_id => @Determine_Federal_Benefit_Rate.id)
WebNumericalResult.create!(:name => 'r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt',                                  :text => 'r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt',                                  :display_rules => 'manager.current_user.admin?', :order =>   3, :web_calc_id => @r_FbrSpouseDeemCovGroupPsdcPadc1619bAmt.id,                                   :result_type => 'currency_detail',  :group_id => @Determine_Federal_Benefit_Rate.id)
WebNumericalResult.create!(:name => 'r_FbrSpouseDeemAmt',                                                       :text => 'r_FbrSpouseDeemAmt',                                                       :display_rules => 'manager.current_user.admin?', :order =>   4, :web_calc_id => @r_FbrSpouseDeemAmt.id,                                                        :result_type => 'currency_detail',  :group_id => @Determine_Federal_Benefit_Rate.id)

#25	2620	Calculate SSI Cash Benefit before check of actual vs. calc amount and Over/Under adjustment with no spousal deeming
@Calculate_SSI_Cash_Benefit = WebNumericalResultsGroup.create!(:name => 'Calculate_SSI_Cash_Benefit',                        :order => 70)
WebNumericalResult.create!(:name => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt',        :text => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt',        :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_SsiNoOveUnderAdjustNoSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.id,         :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt',                                 :text => 'r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt',                                 :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_SsiNoOveUnderAdjustNoSpouseDeemCalcAmt.id,                                  :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt',         :text => 'r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt',         :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_SsiNoOverUnderAdjustSpouseDeemCalcCaidCovGroupPsdcPadc1619bAmt.id,          :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiNoOverUnderAdjustSpouseDeemCalcAmt',                                  :text => 'r_SsiNoOverUnderAdjustSpouseDeemCalcAmt',                                  :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_SsiNoOverUnderAdjustSpouseDeemCalcAmt.id,                                   :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b',                       :text => 'r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b',                       :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_SsiSpousalDeemCalcsUsedCaidCovGroupPsdcPadc1619b.id,                        :result_type => 'string_detail',    :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiSpousalDeemCalcsUsed',                                                :text => 'r_SsiSpousalDeemCalcsUsed',                                                :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_SsiSpousalDeemCalcsUsed.id,                                                 :result_type => 'string_detail',    :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt',                   :text => 'r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt',                   :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_SsiNoOverUnderAdjustCalcCaidCovGroupPsdcPadc1619bAmt.id,                    :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiNoOverUnderAdjustCalcAmt',                                            :text => 'r_SsiNoOverUnderAdjustCalcAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_SsiNoOverUnderAdjustCalcAmt.id,                                             :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiActualAmt',                                                           :text => 'r_SsiActualAmt',                                                           :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_SsiActualAmt.id,                                                            :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust',                           :text => 'r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust',                           :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r_ActualSsiGreaterThanCalcSsiNoOverUnderAdjust.id,                            :result_type => 'string_detail',    :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_ActualSsiLessThanCalcSsiNoOverUnderAdjust',                              :text => 'r_ActualSsiLessThanCalcSsiNoOverUnderAdjust',                              :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_ActualSsiLessThanCalcSsiNoOverUnderAdjust.id,                               :result_type => 'string_detail',    :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiUserOverUnderAdjustCalcAmt',                                          :text => 'r_SsiUserOverUnderAdjustCalcAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_SsiUserOverUnderAdjustCalcAmt.id,                                           :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)
WebNumericalResult.create!(:name => 'r_SsiCoupleOverUnderAdjustCalcAmt',                                        :text => 'r_SsiCoupleOverUnderAdjustCalcAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_SsiCoupleOverUnderAdjustCalcAmt.id,                                         :result_type => 'currency_detail',  :group_id => @Calculate_SSI_Cash_Benefit.id)

#25	3040	Determine if calculated SSI amounts = actual amounts after adjustments
@SSI_Benefit_Eq_Actual = WebNumericalResultsGroup.create!(:name => 'SSI_Benefit_Eq_Actual',                        :order => 73)
WebNumericalResult.create!(:name => 'r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust',                           :text => 'r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust',                           :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust.id,                            :result_type => 'string_detail',    :group_id => @SSI_Benefit_Eq_Actual.id)
WebNumericalResult.create!(:name => 'r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust',                     :text => 'r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust',                     :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust.id,                      :result_type => 'string_detail',    :group_id => @SSI_Benefit_Eq_Actual.id)

#WebVaCalc
@WebVaCalc = WebNumericalResultsGroup.create!(:name => 'WebVaCalc',                        :order => 77)
#130	Calculate Provisional Aux Grant Payment Amount if Resource limit not exceeded:  It is equal to the Facility Rate amount minus FBR plus the Personal Allowance
@Calculate_Provisional_Aux_Grant_Payment = WebNumericalResultsGroup.create!(:name => 'Calculate_Provisional_Aux_Grant_Payment',                        :order => 79)
WebNumericalResult.create!(:name => 'r_VA_IndivProvAuxGrantPaymentAmt',                                         :text => 'r_VA_IndivProvAuxGrantPaymentAmt',                                         :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_IndivProvAuxGrantPaymentAmt.id,                                          :result_type => 'currency_detail',  :group_id => @Calculate_Provisional_Aux_Grant_Payment.id)
WebNumericalResult.create!(:name => 'r_VA_CoupleProvAuxGrantPaymentAmt',                                        :text => 'r_VA_CoupleProvAuxGrantPaymentAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CoupleProvAuxGrantPaymentAmt.id,                                         :result_type => 'currency_detail',  :group_id => @Calculate_Provisional_Aux_Grant_Payment.id)
WebNumericalResult.create!(:name => 'r_VA_ProvAuxGrantPaymentAmt',                                              :text => 'r_VA_ProvAuxGrantPaymentAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_ProvAuxGrantPaymentAmt.id,                                               :result_type => 'currency_detail',  :group_id => @Calculate_Provisional_Aux_Grant_Payment.id)
WebNumericalResult.create!(:name => 'rTotCountIncFBRExceedAmt',                                                 :text => 'rTotCountIncFBRExceedAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_ProvAuxGrantPaymentAmt.id,                                               :result_type => 'currency_detail',  :group_id => @Calculate_Provisional_Aux_Grant_Payment.id)
WebNumericalResult.create!(:name => 'r_VA_AuxGrantPaymentAmt',                                                  :text => 'r_VA_AuxGrantPaymentAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_AuxGrantPaymentAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @Calculate_Provisional_Aux_Grant_Payment.id)

#280	Determine ABD Individual's Unearned Income Amount
@ABD_Income = WebNumericalResultsGroup.create!(:name => 'ABD_Income',                        :order => 82)
WebNumericalResult.create!(:name => 'r_VA_CaidUnearnNoDeemAmt',                                                 :text => 'r_VA_CaidUnearnNoDeemAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidUnearnNoDeemAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidDeemedAmt',                                                       :text => 'r_VA_CaidDeemedAmt',                                                       :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidDeemedAmt.id,                                                         :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUnearnAmt',                                                       :text => 'r_VA_CaidUnearnAmt',                                                       :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidUnearnAmt.id,                                                         :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidEarnAmt',                                                         :text => 'r_VA_CaidEarnAmt',                                                         :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidEarnAmt.id,                                                           :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidGrossIncomeAmt',                                                  :text => 'r_VA_CaidGrossIncomeAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidGrossIncomeAmt.id,                                                    :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseUnearnAmt',                                                 :text => 'r_VA_CaidSpouseUnearnAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidSpouseUnearnAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseEarnAmt',                                                   :text => 'r_VA_CaidSpouseEarnAmt',                                                   :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidSpouseEarnAmt.id,                                                     :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseGrossIncomeAmt',                                            :text => 'r_VA_CaidSpouseGrossIncomeAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidSpouseGrossIncomeAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleEarnAmt',                                                   :text => 'r_VA_CaidCoupleEarnAmt',                                                   :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidCoupleEarnAmt.id,                                                     :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleUnearnAmt',                                                 :text => 'r_VA_CaidCoupleUnearnAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r_VA_CaidCoupleUnearnAmt.id,                                                   :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleGrossIncomeAmt',                                            :text => 'r_VA_CaidCoupleGrossIncomeAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_VA_CaidCoupleGrossIncomeAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountUnearnNoNeedIncomeAmt',                                      :text => 'r_VA_CaidCountUnearnNoNeedIncomeAmt',                                      :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_VA_CaidCountUnearnNoNeedIncomeAmt.id,                                        :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountUnearnAmt',                                                  :text => 'r_VA_CaidCountUnearnAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_VA_CaidCountUnearnAmt.id,                                                    :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidExcessGenExclude',                                                :text => 'r_VA_CaidExcessGenExclude',                                                :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @r_VA_CaidExcessGenExclude.id,                                                  :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountEarnAmtNoDivide',                                            :text => 'r_VA_CaidCountEarnAmtNoDivide',                                            :display_rules => 'manager.current_user.admin?', :order =>   15, :web_calc_id => @r_VA_CaidCountEarnAmtNoDivide.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountEarnAmtNoBWE',                                               :text => 'r_VA_CaidCountEarnAmtNoBWE',                                               :display_rules => 'manager.current_user.admin?', :order =>   16, :web_calc_id => @r_VA_CaidCountEarnAmtNoBWE.id,                                                 :result_type => 'currency_detail',  :group_id => @ABD_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountEarnAmt',                                                    :text => 'r_VA_CaidCountEarnAmt',                                                    :display_rules => 'manager.current_user.admin?', :order =>   17, :web_calc_id => @r_VA_CaidCountEarnAmt.id,                                                      :result_type => 'currency_detail',  :group_id => @ABD_Income.id)

#1350	Determine ABD Individual's Total Countable Income	
@Individual_Total_Countable_Income = WebNumericalResultsGroup.create!(:name => 'Individual_Total_Countable_Income',                        :order => 85)
WebNumericalResult.create!(:name => 'vA_CaidCountIncomeAmtNoPASS',                                              :text => 'vA_CaidCountIncomeAmtNoPASS',                                              :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @vA_CaidCountIncomeAmtNoPASS.id,                                                :result_type => 'currency_detail',  :group_id => @Individual_Total_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCountIncomeAmt',                                                  :text => 'r_VA_CaidCountIncomeAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidCountIncomeAmt.id,                                                    :result_type => 'currency_detail',  :group_id => @Individual_Total_Countable_Income.id)

#1460	Determine ABD Spouse's Countable Income Amounts
#1470	Determine ABD Spouse's Countable Unearned Income
@ABD_Spouse_Countable_Income = WebNumericalResultsGroup.create!(:name => 'ABD_Spouse_Countable_Income',                        :order => 87)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseExcessUserGenExclude',                                      :text => 'r_VA_CaidSpouseExcessUserGenExclude',                                      :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidSpouseExcessUserGenExclude.id,                                        :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt',                                :text => 'r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt',                                :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidSpouseCountUnearnNoNeedIncomeAmt.id,                                  :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountUnearnAmt',                                            :text => 'r_VA_CaidSpouseCountUnearnAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidSpouseCountUnearnAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseUnusedGenExclude',                                          :text => 'r_VA_CaidSpouseUnusedGenExclude',                                          :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidSpouseUnusedGenExclude.id,                                            :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseExcessUserEarnedIncomeDisregard',                           :text => 'r_VA_CaidSpouseExcessUserEarnedIncomeDisregard',                           :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidSpouseExcessUserEarnedIncomeDisregard.id,                             :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountEarnAmtNoDivide',                                      :text => 'r_VA_CaidSpouseCountEarnAmtNoDivide',                                      :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidSpouseCountEarnAmtNoDivide.id,                                        :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountEarnAmtNoBWE',                                         :text => 'r_VA_CaidSpouseCountEarnAmtNoBWE',                                         :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidSpouseCountEarnAmtNoBWE.id,                                           :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountEarnAmt',                                              :text => 'r_VA_CaidSpouseCountEarnAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidSpouseCountEarnAmt.id,                                                :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountIncomeAmtNoPASS',                                      :text => 'r_VA_CaidSpouseCountIncomeAmtNoPASS',                                      :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidSpouseCountIncomeAmtNoPASS.id,                                        :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCountIncomeAmt',                                            :text => 'r_VA_CaidSpouseCountIncomeAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r_VA_CaidSpouseCountIncomeAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Spouse_Countable_Income.id)

#1920	Determine ABD Couple's Countable Income Amounts
#1930	Determine ABD Couple's Countable Unearned Income
@ABD_Couple_Countable_Income = WebNumericalResultsGroup.create!(:name => 'ABD_Couple_Countable_Income',                        :order => 90)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleCountUnearnAmt',                                            :text => 'r_VA_CaidCoupleCountUnearnAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidCoupleCountUnearnAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Couple_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleCountEarnAmt',                                              :text => 'r_VA_CaidCoupleCountEarnAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidCoupleCountEarnAmt.id,                                                :result_type => 'currency_detail',  :group_id => @ABD_Couple_Countable_Income.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCoupleCountIncomeAmt',                                            :text => 'r_VA_CaidCoupleCountIncomeAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidCoupleCountIncomeAmt.id,                                              :result_type => 'currency_detail',  :group_id => @ABD_Couple_Countable_Income.id)

#45	2140	Determine Resource Eligibility
@Resource_Eligibility = WebNumericalResultsGroup.create!(:name => 'Resource_Eligibility',                        :order => 92)
WebNumericalResult.create!(:name => 'r_VA_CaidUserResourceElig',                                                :text => 'r_VA_CaidUserResourceElig',                                                :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidUserResourceElig.id,                                                  :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidLtcHomeEquityLimitExceed',                                        :text => 'r_VA_CaidLtcHomeEquityLimitExceed',                                        :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidLtcHomeEquityLimitExceed.id,                                          :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserGetOrApplyLtc',                                               :text => 'r_VA_CaidUserGetOrApplyLtc',                                               :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidUserGetOrApplyLtc.id,                                                 :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserLtcResourceElig',                                             :text => 'r_VA_CaidUserLtcResourceElig',                                             :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidUserLtcResourceElig.id,                                               :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserSpouseBothGetOrApply',                                        :text => 'r_VA_CaidUserSpouseBothGetOrApply',                                        :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidUserSpouseBothGetOrApply.id,                                          :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserSpouseSameCovGroup',                                          :text => 'r_VA_CaidUserSpouseSameCovGroup',                                          :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidUserSpouseSameCovGroup.id,                                            :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserOrSpouseGetsWorksOr300pct',                                   :text => 'r_VA_CaidUserOrSpouseGetsWorksOr300pct',                                   :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidUserOrSpouseGetsWorksOr300pct.id,                                     :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig',         :text => 'r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig',         :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidUserSpouseInSameCovGroupNotGetWorksOr300pctResourceElig.id,           :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig',                       :text => 'r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig',                       :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidSpouseInDiffCovGroupMostGroupResourceElig.id,                         :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_caidSpouseGetWorksOr300PctSsiResourceElig',                           :text => 'r_VA_caidSpouseGetWorksOr300PctSsiResourceElig',                           :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_VA_caidSpouseGetWorksOr300PctSsiResourceElig.id,                             :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseResourceElig',                                              :text => 'r_VA_CaidSpouseResourceElig',                                              :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_VA_CaidSpouseResourceElig.id,                                                :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_caidSpouseGetOrApplyLtc',                                             :text => 'r_VA_caidSpouseGetOrApplyLtc',                                             :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_VA_caidSpouseGetOrApplyLtc.id,                                               :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseLtcResourceElig',                                           :text => 'r_VA_CaidSpouseLtcResourceElig',                                           :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @r_VA_CaidSpouseLtcResourceElig.id,                                             :result_type => 'string_detail',  :group_id => @Resource_Eligibility.id)

#56		Determine Medicaid Income Eligibility
#56		Determine Medicaid Eligibility for SSI Recipient
@Medicaid_Eligibility = WebNumericalResultsGroup.create!(:name => 'Medicaid_Eligibility',                        :order => 95)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupSsiRecipient',                                            :text => 'r_VA_CaidCovGroupSsiRecipient',                                            :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidCovGroupSsiRecipient.id,                                              :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupSsiRecipient',                                      :text => 'r_VA_CaidSpouseCovGroupSsiRecipient',                                      :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidSpouseCovGroupSsiRecipient.id,                                        :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupSsiRecipientElig',                                        :text => 'r_VA_CaidCovGroupSsiRecipientElig',                                        :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidCovGroupSsiRecipientElig.id,                                          :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupSsiRecipientElig',                                  :text => 'r_VA_CaidSpouseCovGroupSsiRecipientElig',                                  :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidSpouseCovGroupSsiRecipientElig.id,                                    :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupPsdc',                                                    :text => 'r_VA_CaidCovGroupPsdc',                                                    :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidCovGroupPsdc.id,                                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupPsdc',                                              :text => 'r_VA_CaidSpouseCovGroupPsdc',                                              :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidSpouseCovGroupPsdc.id,                                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupPadc',                                                    :text => 'r_VA_CaidCovGroupPadc',                                                    :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidCovGroupPadc.id,                                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupPadc',                                              :text => 'r_VA_CaidSpouseCovGroupPadc',                                              :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidSpouseCovGroupPadc.id,                                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroup1619b',                                                   :text => 'r_VA_CaidCovGroup1619b',                                                   :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidCovGroup1619b.id,                                                     :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroup1619b',                                             :text => 'r_VA_CaidSpouseCovGroup1619b',                                             :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r_VA_CaidSpouseCovGroup1619b.id,                                               :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupSsiPsdcPadc1619b',                                        :text => 'r_VA_CaidCovGroupSsiPsdcPadc1619b',                                        :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_VA_CaidCovGroupSsiPsdcPadc1619b.id,                                          :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b',                                  :text => 'r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b',                                  :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_VA_CaidSpouseCovGroupSsiPsdcPadc1619b.id,                                    :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidPsdcIncomeElig',                                                  :text => 'r_VA_CaidPsdcIncomeElig',                                                  :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_VA_CaidPsdcIncomeElig.id,                                                    :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpousePsdcIncomeElig',                                            :text => 'r_VA_CaidSpousePsdcIncomeElig',                                            :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @r_VA_CaidSpousePsdcIncomeElig.id,                                              :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidFbrCovGroupPadcAmt',                                              :text => 'r_VA_CaidFbrCovGroupPadcAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>   15, :web_calc_id => @r_VA_CaidFbrCovGroupPadcAmt.id,                                                :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidPadcIncMinusSsdiAmt',                                             :text => 'r_VA_CaidPadcIncMinusSsdiAmt',                                             :display_rules => 'manager.current_user.admin?', :order =>   16, :web_calc_id => @r_VA_CaidPadcIncMinusSsdiAmt.id,                                               :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpousePadcIncMinusSsdiAmt',                                       :text => 'r_VA_CaidSpousePadcIncMinusSsdiAmt',                                       :display_rules => 'manager.current_user.admin?', :order =>   17, :web_calc_id => @r_VA_CaidSpousePadcIncMinusSsdiAmt.id,                                         :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidPadcIncomeElig',                                                  :text => 'r_VA_CaidPadcIncomeElig',                                                  :display_rules => 'manager.current_user.admin?', :order =>   18, :web_calc_id => @r_VA_CaidPadcIncomeElig.id,                                                    :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_SpouseCaidPadcIncomeElig',                                            :text => 'r_VA_SpouseCaidPadcIncomeElig',                                            :display_rules => 'manager.current_user.admin?', :order =>   19, :web_calc_id => @r_VA_SpouseCaidPadcIncomeElig.id,                                              :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidFbrCovGroup1619bAmt',                                             :text => 'r_VA_CaidFbrCovGroup1619bAmt',                                             :display_rules => 'manager.current_user.admin?', :order =>   20, :web_calc_id => @r_VA_CaidFbrCovGroup1619bAmt.id,                                               :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt',                          :text => 'r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt',                          :display_rules => 'manager.current_user.admin?', :order =>   21, :web_calc_id => @r_VA_CaidUnearnForSsiCalcCovGroup1619bNoPassAmt.id,                            :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt',                     :text => 'r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt',                     :display_rules => 'manager.current_user.admin?', :order =>   22, :web_calc_id => @r_VA_CaidSsiOrProtectedChildOr1619bUnearnEligTestAmt.id,                       :result_type => 'currency_detail', :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUnearn1619bInelig',                                               :text => 'r_VA_CaidUnearn1619bInelig',                                               :display_rules => 'manager.current_user.admin?', :order =>   23, :web_calc_id => @r_VA_CaidUnearn1619bInelig.id,                                                 :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserNoEarn1619bInelig',                                           :text => 'r_VA_CaidUserNoEarn1619bInelig',                                           :display_rules => 'manager.current_user.admin?', :order =>   24, :web_calc_id => @r_VA_CaidUserNoEarn1619bInelig.id,                                             :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseNoEarn1619bInelig',                                         :text => 'r_VA_CaidSpouseNoEarn1619bInelig',                                         :display_rules => 'manager.current_user.admin?', :order =>   25, :web_calc_id => @r_VA_CaidSpouseNoEarn1619bInelig.id,                                           :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidUserEarnTooMuch1619bInelig',                                      :text => 'r_VA_CaidUserEarnTooMuch1619bInelig',                                      :display_rules => 'manager.current_user.admin?', :order =>   26, :web_calc_id => @r_VA_CaidUserEarnTooMuch1619bInelig.id,                                        :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseEarnTooMuch1619bInelig',                                    :text => 'r_VA_CaidSpouseEarnTooMuch1619bInelig',                                    :display_rules => 'manager.current_user.admin?', :order =>   27, :web_calc_id => @r_VA_CaidSpouseEarnTooMuch1619bInelig.id,                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_Caid1619bIncomeElig',                                                 :text => 'r_VA_Caid1619bIncomeElig',                                                 :display_rules => 'manager.current_user.admin?', :order =>   28, :web_calc_id => @r_VA_Caid1619bIncomeElig.id,                                                   :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouse1619bIncomeElig',                                           :text => 'r_VA_CaidSpouse1619bIncomeElig',                                           :display_rules => 'manager.current_user.admin?', :order =>   29, :web_calc_id => @r_VA_CaidSpouse1619bIncomeElig.id,                                             :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility.id)

@Medicaid_Eligibility_Aux_Grant = WebNumericalResultsGroup.create!(:name => 'Medicaid_Eligibility_Aux_Grant',                        :order => 99)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGroupAuxGrant',                                                :text => 'r_VA_CaidCovGroupAuxGrant',                                                :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidCovGroupAuxGrant.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_Aux_Grant.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGroupAuxGrant',                                          :text => 'r_VA_CaidSpouseCovGroupAuxGrant',                                          :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidSpouseCovGroupAuxGrant.id,                                            :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_Aux_Grant.id)
WebNumericalResult.create!(:name => 'r_VA_CaidAuxGrantIncomeElig',                                              :text => 'r_VA_CaidAuxGrantIncomeElig',                                              :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidAuxGrantIncomeElig.id,                                                :result_type => 'string_detail',   :group_id => @r_VA_CaidAuxGrantIncomeElig.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseAuxGrantIncomeElig',                                        :text => 'r_VA_CaidSpouseAuxGrantIncomeElig',                                        :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidSpouseAuxGrantIncomeElig.id,                                          :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_Aux_Grant.id)

#61	3080	Determine Income Eligiblility for ABD- Medically Indigent Groups 
@Medicaid_Eligibility_ABD_Medically_Indigent = WebNumericalResultsGroup.create!(:name => 'Medicaid_Eligibility_ABD_Medically_Indigent',                        :order =>102)
WebNumericalResult.create!(:name => 'r_VA_CaidAbdAssistUnitForIncomeNumber',                                     :text => 'r_VA_CaidAbdAssistUnitForIncomeNumber',                                   :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidAbdAssistUnitForIncomeNumber.id,                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_Caid80PctFplIncomeElig',                                               :text => 'r_VA_Caid80PctFplIncomeElig',                                             :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_Caid80PctFplIncomeElig.id,                                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouse80PctFplIncomeElig',                                         :text => 'r_VA_CaidSpouse80PctFplIncomeElig',                                       :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidSpouse80PctFplIncomeElig.id,                                          :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidQmbIncomeElig',                                                    :text => 'r_VA_CaidQmbIncomeElig',                                                  :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_CaidQmbIncomeElig.id,                                                     :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseQmbIncomeElig',                                              :text => 'r_VA_CaidSpouseQmbIncomeElig',                                            :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidSpouseQmbIncomeElig.id,                                               :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSlmbIncomeElig',                                                   :text => 'r_VA_CaidSlmbIncomeElig',                                                 :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidSlmbIncomeElig.id,                                                    :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseSlmbIncomeElig',                                             :text => 'r_VA_CaidSpouseSlmbIncomeElig',                                           :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidSpouseSlmbIncomeElig.id,                                              :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidQdwiIncomeAndEarnElig',                                            :text => 'r_VA_CaidQdwiIncomeAndEarnElig',                                          :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidQdwiIncomeAndEarnElig.id,                                             :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseQdwiIncomeAndEarnElig',                                      :text => 'r_VA_CaidSpouseQdwiIncomeAndEarnElig',                                    :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidSpouseQdwiIncomeAndEarnElig.id,                                       :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'vA_TRQDWIIneligNoEarn',                                                     :text => 'vA_TRQDWIIneligNoEarn',                                                   :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @vA_TRQDWIIneligNoEarn.id,                                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidQiIncomeElig',                                                     :text => 'r_VA_CaidQiIncomeElig',                                                   :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_VA_CaidQiIncomeElig.id,                                                      :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseQiIncomeElig',                                               :text => 'r_VA_CaidSpouseQiIncomeElig',                                             :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_VA_CaidSpouseQiIncomeElig.id,                                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidAbdFplForAssistUnitSize',                                          :text => 'r_VA_CaidAbdFplForAssistUnitSize',                                        :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_VA_CaidAbdFplForAssistUnitSize.id,                                           :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'r_VA_CaidIncomePercentOfFpl',                                               :text => 'r_VA_CaidIncomePercentOfFpl',                                             :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @r_VA_CaidIncomePercentOfFpl.id,                                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)
WebNumericalResult.create!(:name => 'VA_TRCareRelatedCaidNotEligIncomeNotInRange',                               :text => 'VA_TRCareRelatedCaidNotEligIncomeNotInRange',                             :display_rules => 'manager.current_user.admin?', :order =>   15, :web_calc_id => @VA_TRCareRelatedCaidNotEligIncomeNotInRange.id,                                :result_type => 'string_detail',   :group_id => @Medicaid_Eligibility_ABD_Medically_Indigent.id)


@Medicaid_Other_Income_eligibility = WebNumericalResultsGroup.create!(:name => 'Medicaid_Other_Income_eligibility',                        :order =>106)
WebNumericalResult.create!(:name => 'r_VA_CaidWorksInitialNonFinElig',                                           :text => 'r_VA_CaidWorksInitialNonFinElig',                                         :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @r_VA_CaidWorksInitialNonFinElig.id,                                            :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseWorksInitialNonFinElig',                                     :text => 'r_VA_CaidSpouseWorksInitialNonFinElig',                                   :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @r_VA_CaidSpouseWorksInitialNonFinElig.id,                                      :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidGetSsiOr1619b',                                                    :text => 'r_VA_CaidGetSsiOr1619b',                                                  :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_VA_CaidGetSsiOr1619b.id,                                                     :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_caidSpouseGetSsiOr1619b',                                              :text => 'r_VA_caidSpouseGetSsiOr1619b',                                            :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @r_VA_caidSpouseGetSsiOr1619b.id,                                               :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSsi1619bWorksInitialFinancialElig',                                :text => 'r_VA_CaidSsi1619bWorksInitialFinancialElig',                              :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @r_VA_CaidSsi1619bWorksInitialFinancialElig.id,                                 :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig',                          :text => 'r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig',                        :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @r_VA_CaidSpouseSsi1619bWorksInitialFinancialElig.id,                           :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidNonSsi1619bWorksInitialFinancialElig',                             :text => 'r_VA_CaidNonSsi1619bWorksInitialFinancialElig',                           :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r_VA_CaidNonSsi1619bWorksInitialFinancialElig.id,                              :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidWorksOngoingEmployReqElig',                                        :text => 'r_VA_CaidWorksOngoingEmployReqElig',                                      :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r_VA_CaidWorksOngoingEmployReqElig.id,                                         :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseWorksOngoingEmployReqElig',                                  :text => 'r_VA_CaidSpouseWorksOngoingEmployReqElig',                                :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @r_VA_CaidSpouseWorksOngoingEmployReqElig.id,                                   :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidWorksOngoingIncomeElig',                                           :text => 'r_VA_CaidWorksOngoingIncomeElig',                                         :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r_VA_CaidWorksOngoingIncomeElig.id,                                            :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseWorksOngoingIncomeElig',                                     :text => 'r_VA_CaidSpouseWorksOngoingIncomeElig',                                   :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @r_VA_CaidSpouseWorksOngoingIncomeElig.id,                                      :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_Caid300PctIncomeElig',                                                 :text => 'r_VA_Caid300PctIncomeElig',                                               :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @r_VA_Caid300PctIncomeElig.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouse300PctIncomeElig',                                           :text => 'r_VA_CaidSpouse300PctIncomeElig',                                         :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @r_VA_CaidSpouse300PctIncomeElig.id,                                            :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidIncomeElig',                                                       :text => 'r_VA_CaidIncomeElig',                                                     :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @r_VA_CaidIncomeElig.id,                                                        :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseIncomeElig',                                                 :text => 'r_VA_CaidSpouseIncomeElig',                                               :display_rules => 'manager.current_user.admin?', :order =>   15, :web_calc_id => @r_VA_CaidSpouseIncomeElig.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidCovGrpNumR',                                                       :text => 'r_VA_CaidCovGrpNumR',                                                     :display_rules => 'manager.current_user.admin?', :order =>   16, :web_calc_id => @r_VA_CaidCovGrpNumR.id,                                                        :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseCovGrpNumR',                                                 :text => 'r_VA_CaidSpouseCovGrpNumR',                                               :display_rules => 'manager.current_user.admin?', :order =>   17, :web_calc_id => @r_VA_CaidSpouseCovGrpNumR.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidWorksInitialNonFinEligNumR',                                       :text => 'r_VA_CaidWorksInitialNonFinEligNumR',                                     :display_rules => 'manager.current_user.admin?', :order =>   18, :web_calc_id => @r_VA_CaidWorksInitialNonFinEligNumR.id,                                        :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseWorksInitialNonFinEligNumR',                                 :text => 'r_VA_CaidSpouseWorksInitialNonFinEligNumR',                               :display_rules => 'manager.current_user.admin?', :order =>   19, :web_calc_id => @r_VA_CaidSpouseWorksInitialNonFinEligNumR.id,                                  :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidResourceEligNumR',                                                 :text => 'r_VA_CaidResourceEligNumR',                                               :display_rules => 'manager.current_user.admin?', :order =>   20, :web_calc_id => @r_VA_CaidResourceEligNumR.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseResourceEligNumR',                                           :text => 'r_VA_CaidSpouseResourceEligNumR',                                         :display_rules => 'manager.current_user.admin?', :order =>   21, :web_calc_id => @r_VA_CaidSpouseResourceEligNumR.id,                                            :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidIncomeEligNumR',                                                   :text => 'r_VA_CaidIncomeEligNumR',                                                 :display_rules => 'manager.current_user.admin?', :order =>   22, :web_calc_id => @r_VA_CaidIncomeEligNumR.id,                                                    :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseIncomeEligNumR',                                             :text => 'r_VA_CaidSpouseIncomeEligNumR',                                           :display_rules => 'manager.current_user.admin?', :order =>   23, :web_calc_id => @r_VA_CaidSpouseIncomeEligNumR.id,                                              :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSsi1619bWorksInitialEligNumR',                                     :text => 'r_VA_CaidSsi1619bWorksInitialEligNumR',                                   :display_rules => 'manager.current_user.admin?', :order =>   24, :web_calc_id => @r_VA_CaidSsi1619bWorksInitialEligNumR.id,                                      :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)
WebNumericalResult.create!(:name => 'r_VA_CaidSpouseSsi1619bWorksInitialEligNumR',                               :text => 'r_VA_CaidSpouseSsi1619bWorksInitialEligNumR',                             :display_rules => 'manager.current_user.admin?', :order =>   25, :web_calc_id => @r_VA_CaidSpouseSsi1619bWorksInitialEligNumR.id,                                :result_type => 'string_detail',   :group_id => @Medicaid_Other_Income_eligibility.id)

#WebSsiWiCalc
#39	2	Calculate PASS Planning Aids
@PASS_Planning_Aids = WebNumericalResultsGroup.create!(:name => 'PASS_Planning_Aids',                        :order => 200)
WebNumericalResult.create!(:name => 'rTotalWorkExpAmt',                                                         :text => 'rTotalWorkExpAmt',                                                         :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rTotalWorkExpAmt.id,                                                           :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rWorkExpAndInvestAmt',                                                     :text => 'rWorkExpAndInvestAmt',                                                     :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rWorkExpAndInvestAmt.id,                                                       :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rInvestWorkExpNotPassIrweBweAmt',                                          :text => 'rInvestWorkExpNotPassIrweBweAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rInvestWorkExpNotPassIrweBweAmt.id,                                            :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseTotalWorkExpAmt',                                                   :text => 'rSpouseTotalWorkExpAmt',                                                   :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSpouseTotalWorkExpAmt.id,                                                     :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseWorkExpAndInvestAmt',                                               :text => 'rSpouseWorkExpAndInvestAmt',                                               :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rSpouseWorkExpAndInvestAmt.id,                                                 :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseInvestWorkExpNotPassIrweBweAmt',                                    :text => 'rSpouseInvestWorkExpNotPassIrweBweAmt',                                    :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @rSpouseInvestWorkExpNotPassIrweBweAmt.id,                                      :result_type => 'currency_detail', :group_id => @PASS_Planning_Aids.id)


#39	37	Determine the FBR to use in determining highest PASS reimbursement possible
@Determine_FBR = WebNumericalResultsGroup.create!(:name => 'Determine_FBR',                        :order => 200)
WebNumericalResult.create!(:name => 'rFbrWorkIncentivePossAmt',                                                 :text => 'rFbrWorkIncentivePossAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rFbrWorkIncentivePossAmt.id,                                                   :result_type => 'currency_detail', :group_id => @Determine_FBR.id)

#39	47	Calculate countable income available and subtract from calculated FBR to get highest PASS possible benefit increase.
@highest_PASS = WebNumericalResultsGroup.create!(:name => 'highest_PASS',                        :order => 204)
WebNumericalResult.create!(:name => 'countIncForHighestUserPassReimbAmt',                                       :text => 'countIncForHighestUserPassReimbAmt',                                       :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @countIncForHighestUserPassReimbAmt.id,                                         :result_type => 'currency_detail', :group_id => @highest_PASS.id)
WebNumericalResult.create!(:name => 'rCountIncForHighestSpousePassReimbAmt',                                    :text => 'rCountIncForHighestSpousePassReimbAmt',                                    :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rCountIncForHighestSpousePassReimbAmt.id,                                      :result_type => 'currency_detail', :group_id => @highest_PASS.id)
WebNumericalResult.create!(:name => 'rHighestUserPassReimbAvailAmt',                                            :text => 'rHighestUserPassReimbAvailAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rHighestUserPassReimbAvailAmt.id,                                              :result_type => 'currency_detail', :group_id => @highest_PASS.id)
WebNumericalResult.create!(:name => 'rHighestSpousePassReimbAvailAmt',                                          :text => 'rHighestSpousePassReimbAvailAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rHighestSpousePassReimbAvailAmt.id,                                            :result_type => 'currency_detail', :group_id => @highest_PASS.id)
                                                                                                                                                                                                    
                                                                                                                                                                                                    
#39	63	Calculate PASS Needed to Maintain SSI Eligibility if Unearned Income and/or deemed spousal income Too High                                                                                  
@PASS_Needed_to_Maintain_SSI_Eligibility = WebNumericalResultsGroup.create!(:name => 'PASS_Needed_to_Maintain_SSI_Eligibility',                        :order => 207)                               
WebNumericalResult.create!(:name => 'rUnearnForSsiCalcAmt',                                                     :text => 'rUnearnForSsiCalcAmt',                                                     :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rUnearnForSsiCalcAmt.id,                                                       :result_type => 'currency_detail', :group_id => @PASS_Needed_to_Maintain_SSI_Eligibility.id)
WebNumericalResult.create!(:name => 'rFbrAmt',                                                                  :text => 'rFbrAmt',                                                                  :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rFbrAmt.id,                                                                    :result_type => 'currency_detail', :group_id => @PASS_Needed_to_Maintain_SSI_Eligibility.id)
WebNumericalResult.create!(:name => 'rUnearnMinusFbrAmt',                                                       :text => 'rUnearnMinusFbrAmt',                                                       :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rFbrAmt.id,                                                                    :result_type => 'currency_detail', :group_id => @PASS_Needed_to_Maintain_SSI_Eligibility.id)
WebNumericalResult.create!(:name => 'rSsiUnearnEligTotPassNeedAmt',                                             :text => 'rSsiUnearnEligTotPassNeedAmt',                                             :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSsiUnearnEligTotPassNeedAmt.id,                                               :result_type => 'currency_detail', :group_id => @PASS_Needed_to_Maintain_SSI_Eligibility.id)
WebNumericalResult.create!(:name => 'rSsiUnearnEligAddedPassNeedAmt',                                           :text => 'rSsiUnearnEligAddedPassNeedAmt',                                           :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rSsiUnearnEligAddedPassNeedAmt.id,                                             :result_type => 'currency_detail', :group_id => @PASS_Needed_to_Maintain_SSI_Eligibility.id)

#39	81	Calculate IRWE Planning Aids
#39	82	Calculate amounts before and after taking into account spousal IRWE, divide by 2, and spousal BWE, which are used  to calculate  IRWE & BWE planning aids
@Calculate_IRWE_Planning_Aids = WebNumericalResultsGroup.create!(:name => 'Calculate_IRWE_Planning_Aids',                        :order => 210)
WebNumericalResult.create!(:name => 'rEarnNoIrweNoDivideAmt',                                                   :text => 'rEarnNoIrweNoDivideAmt',                                                   :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rEarnNoIrweNoDivideAmt.id,                                                     :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusSpouseIrweNoDivideAmt',                                          :text => 'rEarnMinusSpouseIrweNoDivideAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rEarnMinusSpouseIrweNoDivideAmt.id,                                            :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rCountEarnMinusSpouseIrweDivideNoBweAmt',                                  :text => 'rCountEarnMinusSpouseIrweDivideNoBweAmt',                                  :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rCountEarnMinusSpouseIrweDivideNoBweAmt.id,                                    :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusSpouseIrweBweAmt',                                               :text => 'rEarnMinusSpouseIrweBweAmt',                                               :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rEarnMinusSpouseIrweBweAmt.id,                                                 :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusUserIrweNoDivideAmt',                                            :text => 'rEarnMinusUserIrweNoDivideAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rEarnMinusUserIrweNoDivideAmt.id,                                              :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusUserIrweDivideNoBweAmt',                                         :text => 'rEarnMinusUserIrweDivideNoBweAmt',                                         :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @rEarnMinusUserIrweDivideNoBweAmt.id,                                           :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusUserIrweBweAmt',                                                 :text => 'rEarnMinusUserIrweBweAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @rEarnMinusUserIrweBweAmt.id,                                                   :result_type => 'currency_detail', :group_id => @Calculate_IRWE_Planning_Aids.id)
                                                                                                                                                                                                    
                                                                                                                                                                                                    
#39	108	Determine the amount of IRWE and/or Subsidy needed to meet user's SGA tests                                                                                                                 
@IRWE_Subsidy_needed_for_SGA_tests = WebNumericalResultsGroup.create!(:name => 'IRWE_Subsidy_needed_for_SGA_tests',                        :order => 214)                                           
WebNumericalResult.create!(:name => 'rIrweNeededForSsiSgaTestAmt',                                              :text => 'rIrweNeededForSsiSgaTestAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rIrweNeededForSsiSgaTestAmt.id,                                                :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_SGA_tests.id)
WebNumericalResult.create!(:name => 'rAddedIrweNeededForSsiSgaTestAmt',                                         :text => 'rAddedIrweNeededForSsiSgaTestAmt',                                         :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rAddedIrweNeededForSsiSgaTestAmt.id,                                           :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_SGA_tests.id)
WebNumericalResult.create!(:name => 'rIrweSubsidyNeededForDiSgaTestAmt',                                        :text => 'rIrweSubsidyNeededForDiSgaTestAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rIrweSubsidyNeededForDiSgaTestAmt.id,                                          :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_SGA_tests.id)
WebNumericalResult.create!(:name => 'rAddedIrweSubsidyNeededForDiSgaTestAmt',                                   :text => 'rAddedIrweSubsidyNeededForDiSgaTestAmt',                                   :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rAddedIrweSubsidyNeededForDiSgaTestAmt.id,                                     :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_SGA_tests.id)

#39	121	Determine the amount of IRWE and/or Subsidy needed to meet spouse's SGA tests  
@IRWE_Subsidy_needed_for_Spouse_SGA_tests = WebNumericalResultsGroup.create!(:name => 'IRWE_Subsidy_needed_for_Spouse_SGA_tests',                        :order => 217)
WebNumericalResult.create!(:name => 'rSpouseIrweNeededForSsiSgaTestAmt',                                        :text => 'rSpouseIrweNeededForSsiSgaTestAmt',                                        :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rSpouseIrweNeededForSsiSgaTestAmt.id,                                          :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_Spouse_SGA_tests.id)
WebNumericalResult.create!(:name => 'rSpouseAddedIrweNeededForSsiSgaTestAmt',                                   :text => 'rSpouseAddedIrweNeededForSsiSgaTestAmt',                                   :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rSpouseAddedIrweNeededForSsiSgaTestAmt.id,                                     :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_Spouse_SGA_tests.id)
WebNumericalResult.create!(:name => 'rSpouseIrweSubsidyNeededForDiSgaTestAmt',                                  :text => 'rSpouseIrweSubsidyNeededForDiSgaTestAmt',                                  :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSpouseIrweSubsidyNeededForDiSgaTestAmt.id,                                    :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_Spouse_SGA_tests.id)
WebNumericalResult.create!(:name => 'rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt',                             :text => 'rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt',                             :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rSpouseAddedIrweSubsidyNeededForDiSgaTestAmt.id,                               :result_type => 'currency_detail', :group_id => @IRWE_Subsidy_needed_for_Spouse_SGA_tests.id)


#39	134	Calculate the amount of user's disability-related work expenses not covered by an IRWE or PASS
@user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS = WebNumericalResultsGroup.create!(:name => 'user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS',                        :order => 219)
WebNumericalResult.create!(:name => 'rDisWorkExpNotIrwePassAmt',                                                :text => 'rDisWorkExpNotIrwePassAmt',                                                :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rDisWorkExpNotIrwePassAmt.id,                                                  :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'rSpouseDisWorkExpNotIrwePassAmt',                                          :text => 'rSpouseDisWorkExpNotIrwePassAmt',                                          :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rSpouseDisWorkExpNotIrwePassAmt.id,                                            :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'r_UnearnForSsiCalcAmt',                                                    :text => 'r_UnearnForSsiCalcAmt',                                                    :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @r_UnearnForSsiCalcAmt.id,                                                      :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'rMaxSsiCheckWithIrweBweAmt',                                               :text => 'rMaxSsiCheckWithIrweBweAmt',                                               :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rMaxSsiCheckWithIrweBweAmt.id,                                                 :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'rMaxReimbPossWithIrweAmt',                                                 :text => 'rMaxReimbPossWithIrweAmt',                                                 :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rMaxReimbPossWithIrweAmt.id,                                                   :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'rIrweForMaxReimbPossAmt',                                                  :text => 'rIrweForMaxReimbPossAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @rIrweForMaxReimbPossAmt.id,                                                    :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)
WebNumericalResult.create!(:name => 'rSpouseMaxReimbPossWithIrweAmt',                                           :text => 'rSpouseMaxReimbPossWithIrweAmt',                                           :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @rSpouseMaxReimbPossWithIrweAmt.id,                                             :result_type => 'currency_detail', :group_id => @user_disability_related_work_expenses_not_covered_by_IRWE_or_PASS.id)


#39	171	Calculate BWE Planning Aids
@BWE_Planning_Aids = WebNumericalResultsGroup.create!(:name => 'BWE_Planning_Aids',                        :order => 222)
WebNumericalResult.create!(:name => 'rTotWorkExpAmt',                                                           :text => 'rTotWorkExpAmt',                                                           :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rTotWorkExpAmt.id,                                                             :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rWorkExpNotBweOrPassAmt',                                                  :text => 'rWorkExpNotBweOrPassAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rWorkExpNotBweOrPassAmt.id,                                                    :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseTotWorkExpAmt',                                                     :text => 'rSpouseTotWorkExpAmt',                                                     :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rSpouseTotWorkExpAmt.id,                                                       :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseWorkExpNotBweOrPassAmt',                                            :text => 'rSpouseWorkExpNotBweOrPassAmt',                                            :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSpouseWorkExpNotBweOrPassAmt.id,                                              :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rTotBweReimbAvail',                                                        :text => 'rTotBweReimbAvail',                                                        :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rTotBweReimbAvail.id,                                                          :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseTotBweReimbAvail',                                                  :text => 'rSpouseTotBweReimbAvail',                                                  :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @rSpouseTotBweReimbAvail.id,                                                    :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSSIEarnSpouseEarnOrDeemAmt',                                              :text => 'rSSIEarnSpouseEarnOrDeemAmt',                                              :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @rSSIEarnSpouseEarnOrDeemAmt.id,                                                :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSEIEPossAmt',                                                             :text => 'rSEIEPossAmt',                                                             :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @rSEIEPossAmt.id,                                                               :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rAddSEIEAmt',                                                              :text => 'rAddSEIEAmt',                                                              :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @rAddSEIEAmt.id,                                                                :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rEarnMinusSeieAmt',                                                        :text => 'rEarnMinusSeieAmt',                                                        :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @rEarnMinusSeieAmt.id,                                                          :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rSpouseEarnMinusSeieAmt',                                                  :text => 'rSpouseEarnMinusSeieAmt',                                                  :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @rSpouseEarnMinusSeieAmt.id,                                                    :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rIncAvailForPassNoPassAmt',                                                :text => 'rIncAvailForPassNoPassAmt',                                                :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @rIncAvailForPassNoPassAmt.id,                                                  :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rIncAvailForPassMinusSpousePassAmt',                                       :text => 'rIncAvailForPassMinusSpousePassAmt',                                       :display_rules => 'manager.current_user.admin?', :order =>   13, :web_calc_id => @rIncAvailForPassMinusSpousePassAmt.id,                                         :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)
WebNumericalResult.create!(:name => 'rIncomeAvailforSpousePassMinusUserPassAmt',                                :text => 'rIncomeAvailforSpousePassMinusUserPassAmt',                                :display_rules => 'manager.current_user.admin?', :order =>   14, :web_calc_id => @rIncomeAvailforSpousePassMinusUserPassAmt.id,                                  :result_type => 'currency_detail', :group_id => @BWE_Planning_Aids.id)

#39	269	Determine if Medicaid is lost for DAC because of unearned income not including DI payment.
@Medicaid_lost_for_DAC_because_of_unearned_income  = WebNumericalResultsGroup.create!(:name => 'Medicaid_lost_for_DAC_because_of_unearned_income',                        :order => 225)
WebNumericalResult.create!(:name => 'rDacNotCaidEligUnearnWithDi',                                              :text => 'rDacNotCaidEligUnearnWithDi',                                              :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rDacNotCaidEligUnearnWithDi.id,                                                  :result_type => 'string_detail',   :group_id => @Medicaid_lost_for_DAC_because_of_unearned_income.id)
WebNumericalResult.create!(:name => 'rDacDiSubractAmt',                                                         :text => 'rDacDiSubractAmt',                                                         :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rDacDiSubractAmt.id,                                                             :result_type => 'currency_detail', :group_id => @Medicaid_lost_for_DAC_because_of_unearned_income.id)
WebNumericalResult.create!(:name => 'rDacCaidIneligUnearnNoDi',                                                 :text => 'rDacCaidIneligUnearnNoDi',                                                 :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rDacCaidIneligUnearnNoDi.id,                                                     :result_type => 'string_detail',   :group_id => @Medicaid_lost_for_DAC_because_of_unearned_income.id)
WebNumericalResult.create!(:name => 'rSpouseDacCaidIneligUnearnNoDi',                                           :text => 'rSpouseDacCaidIneligUnearnNoDi',                                           :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSpouseDacCaidIneligUnearnNoDi.id,                                               :result_type => 'string_detail',   :group_id => @Medicaid_lost_for_DAC_because_of_unearned_income.id)

#
#39	287	Determine 1619(b) eligibility
@c1619_eligibility  = WebNumericalResultsGroup.create!(:name => 'c1619_eligibility',                        :order => 228)
WebNumericalResult.create!(:name => 'rSsiIneligUnearn',                                                         :text => 'rSsiIneligUnearn',                                                         :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rSsiIneligUnearn.id,                                                             :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rCaidIneligUnearn',                                                        :text => 'rCaidIneligUnearn',                                                        :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rCaidIneligUnearn.id,                                                            :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rSpouseCaidIneligUnearn',                                                  :text => 'rSpouseCaidIneligUnearn',                                                  :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rSpouseCaidIneligUnearn.id,                                                      :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rSsiResourceLimitExceed',                                                  :text => 'rSsiResourceLimitExceed',                                                  :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rSsiResourceLimitExceed.id,                                                      :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rCaidResourceLimitExceed',                                                 :text => 'rCaidResourceLimitExceed',                                                 :display_rules => 'manager.current_user.admin?', :order =>    6, :web_calc_id => @rCaidResourceLimitExceed.id,                                                     :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'r1619bIneligUnearnOrResources',                                            :text => 'r1619bIneligUnearnOrResources',                                            :display_rules => 'manager.current_user.admin?', :order =>    7, :web_calc_id => @r1619bIneligUnearnOrResources.id,                                                :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'r1619bIneligThreshold',                                                    :text => 'r1619bIneligThreshold',                                                    :display_rules => 'manager.current_user.admin?', :order =>    8, :web_calc_id => @r1619bIneligThreshold.id,                                                        :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rSpouse1619bIneligThreshold',                                              :text => 'rSpouse1619bIneligThreshold',                                              :display_rules => 'manager.current_user.admin?', :order =>    9, :web_calc_id => @rSpouse1619bIneligThreshold.id,                                                  :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'r1619bElig',                                                               :text => 'r1619bElig',                                                               :display_rules => 'manager.current_user.admin?', :order =>   10, :web_calc_id => @r1619bElig.id,                                                                   :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rSpouse1619bElig',                                                         :text => 'rSpouse1619bElig',                                                         :display_rules => 'manager.current_user.admin?', :order =>   11, :web_calc_id => @rSpouse1619bElig.id,                                                             :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)
WebNumericalResult.create!(:name => 'rLoseSsiAnd1619bFinancial',                                                :text => 'rLoseSsiAnd1619bFinancial',                                                :display_rules => 'manager.current_user.admin?', :order =>   12, :web_calc_id => @rLoseSsiAnd1619bFinancial.id,                                                    :result_type => 'string_detail',    :group_id => @c1619_eligibility.id)


#Web Aux rates
@Auxiliary_grant_rates  = WebNumericalResultsGroup.create!(:name => 'Auxiliary_grant_rates',                        :order => 500)
WebNumericalResult.create!(:name => 'rateVaMaxAuxiliaryGrantPd8',                                               :text => 'rateVaMaxAuxiliaryGrantPd8',                                               :display_rules => 'manager.current_user.admin?', :order =>    1, :web_calc_id => @rateVaMaxAuxiliaryGrantPd8.id,                                                   :result_type => 'currency_detail',    :group_id => @Auxiliary_grant_rates.id)
WebNumericalResult.create!(:name => 'rateVaMaxAuxiliaryGrantElsewhere',                                         :text => 'rateVaMaxAuxiliaryGrantElsewhere',                                         :display_rules => 'manager.current_user.admin?', :order =>    2, :web_calc_id => @rateVaMaxAuxiliaryGrantElsewhere.id,                                             :result_type => 'currency_detail',    :group_id => @Auxiliary_grant_rates.id)
WebNumericalResult.create!(:name => 'rateVaMaxAuxiliaryGrantCouplePd8',                                         :text => 'rateVaMaxAuxiliaryGrantCouplePd8',                                         :display_rules => 'manager.current_user.admin?', :order =>    3, :web_calc_id => @rateVaMaxAuxiliaryGrantCouplePd8.id,                                             :result_type => 'currency_detail',    :group_id => @Auxiliary_grant_rates.id)
WebNumericalResult.create!(:name => 'rateVaMaxAuxiliaryGrantCoupleElsewhere',                                   :text => 'rateVaMaxAuxiliaryGrantCoupleElsewhere',                                   :display_rules => 'manager.current_user.admin?', :order =>    4, :web_calc_id => @rateVaMaxAuxiliaryGrantCoupleElsewhere.id,                                       :result_type => 'currency_detail',    :group_id => @Auxiliary_grant_rates.id)
WebNumericalResult.create!(:name => 'rateAgPersonalAllowance',                                                  :text => 'rateAgPersonalAllowance',                                                  :display_rules => 'manager.current_user.admin?', :order =>    5, :web_calc_id => @rateAgPersonalAllowance.id,                                                      :result_type => 'currency_detail',    :group_id => @Auxiliary_grant_rates.id)


#Create Web Text Result groups
WebTextResultsGroup.delete_all                                                                 
@GroupAlert                      =WebTextResultsGroup.create!(:name => 'Alert -',                     :order => '1')
@GroupRecommendation             =WebTextResultsGroup.create!(:name => 'Recommendation -',            :order => '2')
@GroupNote                       =WebTextResultsGroup.create!(:name => 'Note -',                      :order => '3')

##Create text results
WebTextResult.delete_all
@trNoDisability                                          =WebTextResult.create!(:name => 'trNoDisability',                                :order => '1' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trAgeMoreThan64Yrs                                      =WebTextResult.create!(:name => 'trAgeMoreThan64Yrs',                            :order => '2' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@TrAgeLessThan15Yrs                                      =WebTextResult.create!(:name => 'TrAgeLessThan15Yrs',                            :order => '3' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSsiAmtDiscrepancy                                     =WebTextResult.create!(:name => 'trSsiAmtDiscrepancy',                           :order => '4' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSsiCoupleAmtDiscrepancy                               =WebTextResult.create!(:name => 'trSsiCoupleAmtDiscrepancy',                     :order => '5' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trDiAmtDiscrepancy                                      =WebTextResult.create!(:name => 'trDiAmtDiscrepancy',                            :order => '6' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trNoBpqy                                                =WebTextResult.create!(:name => 'trNoBpqy',                                      :order => '7' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSsiFinalDetermination                                 =WebTextResult.create!(:name => 'trSsiFinalDetermination',                       :order => '8' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trDiFinalDetermination                                  =WebTextResult.create!(:name => 'trDiFinalDetermination',                        :order => '9' ,        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trPassHighIncomeNoSpousePASS                            =WebTextResult.create!(:name => 'trPassHighIncomeNoSpousePASS',                  :order => '10',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trPassHighIncomeSpousePASS                              =WebTextResult.create!(:name => 'trPassHighIncomeSpousePASS',                    :order => '11',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSpousePASSHighIncomeNoUserPass                        =WebTextResult.create!(:name => 'trSpousePASSHighIncomeNoUserPass',              :order => '12',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSpousePASSHighIncomeUserPASS                          =WebTextResult.create!(:name => 'trSpousePASSHighIncomeUserPASS',                :order => '13',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSsiEligLostUnEarn                                     =WebTextResult.create!(:name => 'trSsiEligLostUnEarn',                           :order => '14',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trVaSsiCaidKeep                                         =WebTextResult.create!(:name => 'trVaSsiCaidKeep',                               :order => '15',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trVaSpouseSsiCaidKeep                                   =WebTextResult.create!(:name => 'trVaSpouseSsiCaidKeep',                         :order => '16',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trCaidLostThreshold                                     =WebTextResult.create!(:name => 'trCaidLostThreshold',                           :order => '17',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
                                                                                                                                        
@trCaidLostaIndividThresholdElig                         =WebTextResult.create!(:name => 'trCaidLostaIndividThresholdElig',               :order => '18',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupRecommendation.id)
@trApplyIndividThreshold                                 =WebTextResult.create!(:name => 'trApplyIndividThreshold',                       :order => '19',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupRecommendation.id)
@trCaidLostIndividThreshold                              =WebTextResult.create!(:name => 'trCaidLostIndividThreshold',                    :order => '20',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSpouseCaidLostThreshold                               =WebTextResult.create!(:name => 'trSpouseCaidLostThreshold',                     :order => '21',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSpouseCaidLostIndividThresholdElig                    =WebTextResult.create!(:name => 'trSpouseCaidLostIndividThresholdElig',          :order => '22',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupRecommendation.id)
@trSpouseApplyIndividThreshold                           =WebTextResult.create!(:name => 'trSpouseApplyIndividThreshold',                 :order => '23',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupRecommendation.id)
@trSpouseCaidLostIndividThreshold                        =WebTextResult.create!(:name => 'trSpouseCaidLostIndividThreshold',              :order => '24',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trCaidLostCoupleSSIZeroNoEarn                           =WebTextResult.create!(:name => 'trCaidLostCoupleSSIZeroNoEarn',                 :order => '25',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSpouseCaidLostCoupleSsiZeroNoEarn                     =WebTextResult.create!(:name => 'trSpouseCaidLostCoupleSsiZeroNoEarn',           :order => '26',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@TrSeieLessThanMoEarnExcludeToMoLimit                    =WebTextResult.create!(:name => 'TrSeieLessThanMoEarnExcludeToMoLimit',          :order => '27',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSieiLessThanMoLimitExcludeToMoLimit                   =WebTextResult.create!(:name => 'trSieiLessThanMoLimitExcludeToMoLimit',         :order => '28',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trSieiZeroExcludeToMoLimit                              =WebTextResult.create!(:name => 'trSieiZeroExcludeToMoLimit',                    :order => '29',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trCoupleSeieLessThanMoEarnExcludeToMoLimit              =WebTextResult.create!(:name => 'trCoupleSeieLessThanMoEarnExcludeToMoLimit',    :order => '30',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trCoupleSieiLessThanMoLimitExcludeToMoLimit             =WebTextResult.create!(:name => 'trCoupleSieiLessThanMoLimitExcludeToMoLimit',   :order => '31',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
@trCoupleSieiZeroExcludeToMoLimit                        =WebTextResult.create!(:name => 'trCoupleSieiZeroExcludeToMoLimit',              :order => '32',       :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
#@TrTwpNo                                                 =WebTextResult.create!(:name => 'TrTwpNo',                                      :order => '33',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
#@TrTwpEnds                                               =WebTextResult.create!(:name => 'TrTwpEnds',                                    :order => '34',        :display_rules => 'true',   :text => 'x',       :group_id => @GroupAlert.id)
#@TrEstimate                                              =WebTextResult.create!(:name => 'TrEstimate',                                   :order => '35',        :display_rules => 'false',  :text => 'x',       :group_id => @GroupAlert.id)
                                                                                                                                         
@trSSIInKindAlt                                          =WebTextResult.create!(:name => 'trSSIInKindAlt',                                :order => '36',        :display_rules => 'false',  :text => 'x',       :group_id => @GroupRecommendation.id)
@TrPassNotUsed                                           =WebTextResult.create!(:name => 'TrPassNotUsed',                                 :order => '37',        :display_rules => 'false',  :text => 'x',       :group_id => @GroupRecommendation.id)
@TrSpousePassNotUsed                                     =WebTextResult.create!(:name => 'TrSpousePassNotUsed',                           :order => '38',        :display_rules => 'false',  :text => 'x',       :group_id => @GroupRecommendation.id)
#@TrPassNotUsedBlind                                      =WebTextResult.create!(:name => 'TrPassNotUsedBlind',                                     :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpousePassNotUsedBlind                                =WebTextResult.create!(:name => 'TrSpousePassNotUsedBlind',                               :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrPassPossYesPass                                       =WebTextResult.create!(:name => 'TrPassPossYesPass',                                      :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpousePassPossYesPass                                 =WebTextResult.create!(:name => 'TrSpousePassPossYesPass',                                :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrPassPossNoPass                                        =WebTextResult.create!(:name => 'TrPassPossNoPass',                                       :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrPassPossNoPassBlind                                   =WebTextResult.create!(:name => 'TrPassPossNoPassBlind',                                  :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpousePassPossNoPass                                  =WebTextResult.create!(:name => 'TrSpousePassPossNoPass',                                 :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpousePassPossNoPassBlind                             =WebTextResult.create!(:name => 'TrSpousePassPossNoPassBlind',                            :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrPassOther                                             =WebTextResult.create!(:name => 'TrPassOther',                                            :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrIrweNotUsed                                           =WebTextResult.create!(:name => 'TrIrweNotUsed',                                          :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrIrweNotUsedWithSEIELessThanEarn                       =WebTextResult.create!(:name => 'TrIrweNotUsedWithSEIELessThanEarn',                      :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpouseIrweNotUsed                                     =WebTextResult.create!(:name => 'TrSpouseIrweNotUsed',                                    :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpouseIrweNotUsedWithSEIELessThanEarn                 =WebTextResult.create!(:name => 'TrSpouseIrweNotUsedWithSEIELessThanEarn',                :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrBweNotUsed                                            =WebTextResult.create!(:name => 'TrBweNotUsed',                                           :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrBweNotUsedWithSEIELessThanEarn                        =WebTextResult.create!(:name => 'TrBweNotUsedWithSEIELessThanEarn',                       :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpouseBweNotUsed                                      =WebTextResult.create!(:name => 'TrSpouseBweNotUsed',                                     :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrSpouseBweNotUsedWithSEIELessThanEarn                  =WebTextResult.create!(:name => 'TrSpouseBweNotUsedWithSEIELessThanEarn',                 :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrDIIrweAvail                                           =WebTextResult.create!(:name => 'TrDIIrweAvail',                                          :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrDISubAvail                                            =WebTextResult.create!(:name => 'TrDISubAvail',                                           :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrEarnRecSelf                                           =WebTextResult.create!(:name => 'TrEarnRecSelf',                                          :display_rules => 'false',  :text => 'x',       :group_id => '1')
#@TrEarnRecOther                                          =WebTextResult.create!(:name => 'TrEarnRecOther',                                         :display_rules => 'false',  :text => 'x',       :group_id => '1')



#@20   
  @trNoDisability.update_attribute(:text, 'No Disability:  You are not considered blind or disabled.  This version of WW-Web will not provide the correct results for your situation.') unless @trNoDisability.blank?
  @trNoDisability.update_attribute(:display_rules, "
   blind = manager.get_answer_by_question_name('blind')
   disability = manager.get_answer_by_question_name('disability')
   blind == 'No' && disability == 'No'") unless @trNoDisability.blank?
    @trNoDisability.save!                                
   
 #TR #30: "Alert - Your age is greater than Full Retirement Age for this situation.  WW-Web may not provide correct results when your age ( C{rAge}) on this situation date (T{q_sitDate}) is greater than your Full Retirement Age."
  @trAgeMoreThan64Yrs.update_attribute(:text, 'Alert - Your age is greater than Full Retirement Age for this situation.  WW-Web may not provide correct results when your age ( T{rAge}) on this situation date (T{q_sitDate}) is greater than your Full Retirement Age.') unless @trAgeMoreThan64Yrs.blank?
  @trAgeMoreThan64Yrs.update_attribute(:display_rules, "
   rAge = WebCalc.find_by_name('rAge')
   Float(rAge.calculate manager) > 65") unless @trAgeMoreThan64Yrs.blank?
   @trAgeMoreThan64Yrs.save!
  
 #From PDB on Oct 11 2011 email
 #TR #40: "Alert - Your age is less than 15 for this situation.  WW-Web may not provide correct results when your age (~Rage~) on this situation date (~sitDate~) is less than 15.  If you choose a Situation Date when you are at least 15 years old, WW-Web will calculate results based on current benefit levels."  NOTE that I removed the word "future" from the explanation, because this TR could appear in the Current Situation when a user enters BirthDate incorrectly.
 
 #Alert - Your age is less than 15 for this situation: WW-Web may not provide correct results when your age T{rAge} on this situation date (T{q_sitDate}) is less than 15.  If you choose a Situation Date when you are at least 15 years old, WW-Web will calculate results based on current benefit levels.
  @TrAgeLessThan15Yrs.update_attribute(:text, 'Alert - Your age is less than 15 for this situation: WW-Web may not provide correct results when your age T{rAge} on this situation date (T{q_sitDate}) is less than 15.  If you choose a Situation Date when you are at least 15 years old, WW-Web will calculate results based on current benefit levels.') unless @TrAgeLessThan15Yrs.blank?
  @TrAgeLessThan15Yrs.update_attribute(:display_rules, "
  rAge = WebCalc.find_by_name('rAge')
  Float(rAge.calculate manager) < 15") unless @TrAgeLessThan15Yrs.blank?
 @TrAgeLessThan15Yrs.save!
 
 #Bob testing 
 #50   26	50	Alert - SSI Check Amount Error:   You entered  ~ssiUserActualAmt~ as your monthly SSI benefit amount.  WorkWORLD calculations indicate you should be receiving  ~r_SsiUserOverUnderAdjustCalcAmt~.  DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.	TRSsiAmtDiscrepancy
  @trSsiAmtDiscrepancy.update_attribute(:text, 'Alert - SSI Check Amount Error:   You entered  C{q_ssiUserActualAmt} as your monthly SSI benefit amount.  WorkWORLD calculations indicate you should be receiving  C{r_SsiUserOverUnderAdjustCalcAmt}.  DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.') unless @trSsiAmtDiscrepancy.blank?
  #  IF r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust = TRUE
   @trSsiAmtDiscrepancy.update_attribute(:display_rules, "
   r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust = WebCalc.find_by_name('r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust')
   ((r_ActualSsiNotEqualCalcSsiAfterOverUnderAdjust.calculate manager) == true)
   ") unless @trSsiAmtDiscrepancy.blank?
   @trSsiAmtDiscrepancy.save! unless @trSsiAmtDiscrepancy.blank?
   @trSsiAmtDiscrepancy.save!
 
 #  26 45	60	Alert - SSI Check Amount Error:   You entered ~ssiUserActualAmt + ssiSpouseActualAmt~  as the total monthly SSI benefit amount that you and your spouse receive.  WorkWORLD calculations indicate you should be receiving  ~r_SsiCoupleOverUnderAdjustCalcAmt~.  DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.	
 #TRSsiCoupleAmtDiscrepancy	1	11100	IF r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust = TRUE
  #IF r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust = TRUE
@trSsiCoupleAmtDiscrepancy.update_attribute(:text, 'Alert - SSI Check Amount Error:   You entered C{q_ssiUserActualAmt_plus_ssiSpouseActualAmt} as the total monthly SSI benefit amount that you and your spouse receive.  WorkWORLD calculations indicate you should be receiving  C{r_SsiCoupleOverUnderAdjustCalcAmt}.  DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.') unless @trSsiCoupleAmtDiscrepancy.blank?
@trSsiCoupleAmtDiscrepancy.update_attribute(:display_rules, "
r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust = WebCalc.find_by_name('r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust')
(r_CoupleActualSsiNotEqualCalcSsiAfterOverUnderAdjust.calculate manager) == true") unless @trSsiCoupleAmtDiscrepancy.blank?
  @trSsiCoupleAmtDiscrepancy.save!  

#26	70	Alert - SSDI (Title II) Check Amount Error:  You entered ~ssdiActualAmt~  as your monthly SSDI (Title II) benefit amount that you receive.  WorkWORLD calculations indicate you should be receiving  ~r_SsdiPayAllAdjustAmt.  DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.	
#TRDiAmtDiscrepancy	1	11200	IF r_ActualSsdiPayNotEqualAllAdjust = TRUE
@trDiAmtDiscrepancy.update_attribute(:text, 'Alert - SSDI (Title II) Check Amount Error:  You entered C{q_ssdiActualAmt} as your monthly SSDI (Title II) benefit amount that you receive.  WorkWORLD calculations indicate you should be receiving  C{r_SsdiPayAllAdjustAmt}. DO NOT PROCEED UNTIL YOU HAVE FOUND THE REASON FOR THIS DISCREPANCY AND CORRECTED IT.') unless @trDiAmtDiscrepancy.blank?
@trDiAmtDiscrepancy.update_attribute(:display_rules, "
r_ActualSsdiPayNotEqualAllAdjust = WebCalc.find_by_name('r_ActualSsdiPayNotEqualAllAdjust')
(r_ActualSsdiPayNotEqualAllAdjust.calculate manager) == true") unless @trDiAmtDiscrepancy.blank? 
@trDiAmtDiscrepancy.save!
 
#26	80	Alert - No BPQY Report:  You indicated that you receive SSI and/or SSDI benefits, but you do not have a current Benefits Planning Query (BPQY) report from SSA.  You should request this report in order to verify your benefit amounts, SSA's records, and your benefit policy status. 	
#TRNoBpqy	3	20800	If Current/What-If Button = Current AND bPQY = N AND (ssiGet = Y OR ssdiGet = Y)
@trNoBpqy.update_attribute(:text, "Alert - No BPQY Report:  You indicated that you receive SSI and/or SSDI benefits, but you do not have a current Benefits Planning Query () report from SSA.  You should request this report in order to verify your benefit amounts, SSA's records, and your benefit policy status.") unless @trNoBpqy.blank?
@trNoBpqy.update_attribute(:display_rules, "
bPQY = manager.get_answer_by_question_name('bPQY')
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
bPQY == 'Yes' && (ssiGet == 'Yes' || ssdiGet == 'Yes')
") unless @trNoBpqy.blank?
@trNoBpqy.save!

# 26	90	Alert - Earning SGA could jeopardize your SSI Eligibility:  Because you have not been notified by SSA that a final determination of your eligibility has been made, or it has been less than 12 months since the onset of your disability, you should check with your SSA Claims Representative about the consequences of engaging in Substantial Gainful Activity (SGA) before you attempt to earn more than the SGA amount.	
#TRSsiFinalDetermination	1	11051	If ssiGetFinalDetermination = N
@trSsiFinalDetermination.update_attribute(:text, 'Alert - Earning SGA could jeopardize your SSI Eligibility:  Because you have not been notified by SSA that a final determination of your eligibility has been made, or it has been less than 12 months since the onset of your disability, you should check with your SSA Claims Representative about the consequences of engaging in Substantial Gainful Activity (SGA) before you attempt to earn more than the SGA amount.') unless @trSsiFinalDetermination.blank?
@trSsiFinalDetermination.update_attribute(:display_rules, "
ssiGetFinalDetermination = manager.get_answer_by_question_name('ssiGetFinalDetermination')
ssiGetFinalDetermination == 'No'") unless @trSsiFinalDetermination.blank?
@trSsiFinalDetermination.save!

#26	100	Alert - Earning SGA could jeopardize your SSDI Eligibility:  Because at least 12 months has not passed since the onset of your disability, you should check with your SSA Claims Representative about the consequences of engaging in Substantial Gainful Activity (SGA) before you attempt to  earn more than the SGA amount.	
#TRDiFinalDetermination	1	11052	IF SsdiGet12MonthsSinceOnset = 
@trDiFinalDetermination.update_attribute(:text, 'Alert - Earning SGA could jeopardize your SSDI Eligibility:  Because at least 12 months has not passed since the onset of your disability, you should check with your SSA Claims Representative about the consequences of engaging in Substantial Gainful Activity (SGA) before you attempt to earn more than the SGA amount.') unless @trDiFinalDetermination.blank?
@trDiFinalDetermination.update_attribute(:display_rules, "
 ssdiGet = manager.get_answer_by_question_name('ssdiGet')
 ssdiGet12MonthsSinceOnset = manager.get_answer_by_question_name('ssdiGet12MonthsSinceOnset')
 ssdiGet == 'Yes' && ssdiGet12MonthsSinceOnset == 'No'") unless @trDiFinalDetermination.blank?
@trDiFinalDetermination.save!

#	160	Alert - PASS Higher than Available Income:  Your PASS (~passAmt~) can not be greater than  ~rIncAvailForPassMinusSpousePassAmt~, the amount of income (excluding SSI cash benefits--but including deemed income and in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. YOU MUST REDUCE YOUR PASS OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!	
#TRPassHighIncomeNoSpousePASS	1	11074	If passAmt > rIncAvailForPassMinusSpousePassAmt AND SpousePassAmt = 0
@trPassHighIncomeNoSpousePASS.update_attribute(:text, 'Alert - PASS Higher than Available Income:  Your PASS (C{q_passAmt}) can not be greater than  C{rIncAvailForPassMinusSpousePassAmt}, the amount of income (excluding SSI cash benefits--but including deemed income and in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. YOU MUST REDUCE YOUR PASS OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!') unless @trPassHighIncomeNoSpousePASS.blank?
@trPassHighIncomeNoSpousePASS.update_attribute(:display_rules, "
passAmt = manager.get_answer_by_question_name('passAmt')
rIncAvailForPassMinusSpousePassAmt = WebCalc.find_by_name('rIncAvailForPassMinusSpousePassAmt')
spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
((spousePassAmt.to_f == 0) && (passAmt.to_f > Float(rIncAvailForPassMinusSpousePassAmt.calculate manager)))
") unless @trPassHighIncomeNoSpousePASS.blank?
@trPassHighIncomeNoSpousePASS.save! 
 
 #	170	Alert - PASSes (Yours and Spouse's) Higher than Available Income:  Your PASS (~passAmt~) can not be greater than  ~rIncAvailForPassMinusSpousePassAmt~, the amount of income (excluding SSI cash benefits--but including deemed income and in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. Income your spouse is setting aside in a PASS (~spousePassAmt~) is not available. YOU OR YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!	
 #TRPassHighIncomeSpousePASS	1	11075	If passAmt > rIncAvailForPassMinusSpousePassAmt AND spousePassAmt > 0
  @trPassHighIncomeSpousePASS.update_attribute(:text, "Alert - PASSes (Yours and Spouse's) Higher than Available Income:  Your PASS (C{q_passAmt}) can not be greater than  C{rIncAvailForPassMinusSpousePassAmt}, the amount of income (excluding SSI cash benefits--but including deemed income and in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. Income your spouse is setting aside in a PASS (C{q_spousePassAmt}) is not available. YOU OR YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!") unless @trPassHighIncomeSpousePASS.blank?
  @trPassHighIncomeSpousePASS.update_attribute(:display_rules, "
  passAmt = manager.get_answer_by_question_name('passAmt')
  rIncAvailForPassMinusSpousePassAmt = WebCalc.find_by_name('rIncAvailForPassMinusSpousePassAmt')
  spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
  ((spousePassAmt.to_f > 0) && (passAmt.to_f > Float(rIncAvailForPassMinusSpousePassAmt.calculate manager)))
  ") unless @trPassHighIncomeSpousePASS.blank? 
@trPassHighIncomeSpousePASS.save!
  
#	180	Alert - Spouse's PASS Higher than Available Income:  Your Spouse's PASS (~spousePassAmt~) can not be greater than ~rIncomeAvailforSpousePassMinusUserPassAmt~, the amount of income (excluding SSI cash benefits--but including any in-kind support under the PMV rule) that your spouse has available to set aside for employability investments and work expenses. YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!	
#TRSpousePASSHighIncomeNoUserPass	1	11076	If spousePassAmt > rIncomeAvailforSpousePassMinusUserPassAmt AND passAmt = 0
@trSpousePASSHighIncomeNoUserPass.update_attribute(:text, "Alert - Spouse's PASS Higher than Available Income:  Your Spouse's PASS (C{q_spousePassAmt}) can not be greater than C{rIncomeAvailforSpousePassMinusUserPassAmt}, the amount of income (excluding SSI cash benefits--but including any in-kind support under the PMV rule) that your spouse has available to set aside for employability investments and work expenses. YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!") unless @trSpousePASSHighIncomeNoUserPass.blank?
@trSpousePASSHighIncomeNoUserPass.update_attribute(:display_rules, "
spousePassAmt                             = manager.get_answer_by_question_name('spousePassAmt')
passAmt                                   = manager.get_answer_by_question_name('passAmt')
rIncomeAvailforSpousePassMinusUserPassAmt = WebCalc.find_by_name('rIncomeAvailforSpousePassMinusUserPassAmt')
((passAmt.to_f == 0) && (spousePassAmt.to_f > Float(rIncomeAvailforSpousePassMinusUserPassAmt.calculate manager)))
") unless @trSpousePASSHighIncomeNoUserPass.blank?
@trSpousePASSHighIncomeNoUserPass.save!

#190	Alert - PASSes (Spouse's and Yours) Higher than Available Income:  Your Spouse's PASS (~spousePassAmt~) can not be greater than ~rIncomeAvailforSpousePassMinusUserPassAmt~, the amount of income (excluding SSI cash benefits--but including in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. Income you are setting aside in a PASS (~passAmt~) is not available. YOU OR YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!	
#TRSpousePASSHighIncomeUserPASS	1	11077	If spousePassAmt > rIncomeAvailforSpousePassMinusUserPassAmt AND passAmt > 0
@trSpousePASSHighIncomeUserPASS.update_attribute(:text, "Alert - PASSes (Spouse's and Yours) Higher than Available Income:  Your Spouse's PASS (C{q_spousePassAmt}) can not be greater than C{rIncomeAvailforSpousePassMinusUserPassAmt}, the amount of income (excluding SSI cash benefits--but including in-kind support under the PMV rule) that you have available to set aside for employability investments and work expenses. Income you are setting aside in a PASS (C{q_passAmt}) is not available. YOU OR YOUR SPOUSE'S PASS MUST BE REDUCED OR WORKWORLD WILL NOT CALCULATE CORRECT RESULTS!") unless @trSpousePASSHighIncomeUserPASS.blank?
@trSpousePASSHighIncomeUserPASS.update_attribute(:display_rules, "
spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
passAmt = manager.get_answer_by_question_name('passAmt')
rIncomeAvailforSpousePassMinusUserPassAmt = WebCalc.find_by_name('rIncomeAvailforSpousePassMinusUserPassAmt')
((passAmt.to_f > 0) && (spousePassAmt.to_f > Float(rIncomeAvailforSpousePassMinusUserPassAmt.calculate manager)))
") unless @trSpousePASSHighIncomeUserPASS.blank?
@trSpousePASSHighIncomeUserPASS.save!

#200	Alert - SSI Eligibility lost because of Unearned Income:  Your countable unearned income is too high for you to stay eligible for SSI benefits.  You could stay eligible if you set aside at least ~rSsiUnearnEligAddedPassNeedAmt~ a month and include it in a PASS (in addition to any income already included in a PASS).  [NOTE:  Your Medicaid benefits stop unless your State has special provisions.  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Medicare Part B Premium deducted from your SSDI Check?]	
#TRSsiEligLostUnEarn	1	11055	IF rSsiIneligUnearn = TRUE
@trSsiEligLostUnEarn.update_attribute(:text, 'Alert - SSI Eligibility lost because of Unearned Income:  Your countable unearned income is too high for you to stay eligible for SSI benefits.  You could stay eligible if you set aside at least C{rSsiUnearnEligAddedPassNeedAmt} a month and include it in a PASS (in addition to any income already included in a PASS).  [NOTE:  Your Medicaid benefits stop unless your State has special provisions.  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Medicare Part B Premium deducted from your SSDI Check?]') unless @trSsiEligLostUnEarn.blank?
@trSsiEligLostUnEarn.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
rSsiIneligUnearn = WebCalc.find_by_name('rSsiIneligUnearn')
ssiGet == 'Yes' && (rSsiIneligUnearn.calculate manager) == true") unless @trSsiEligLostUnEarn.blank?
@trSsiEligLostUnEarn.save!

#note these 2 have display rules that i want confirmed
  @trVaSsiCaidKeep.update_attribute(:text, 'Alert - Keeping Medicaid in Virginia:  Your SSI cash benefit is zero because of countable income that includes earnings. If you need Medicaid coverage you must inform the Virginia Department of Social Services that you need Medicaid to work.') unless @trVaSsiCaidKeep.blank?
  @trVaSsiCaidKeep.save!
  @trVaSpouseSsiCaidKeep.update_attribute(:text, "Alert - Spouse Keeping Medicaid in Virginia:  Your spouse's SSI cash benefit is zero because of countable income that includes earnings. If your spouse needs Medicaid coverage the Virginia Department of Social Services must be informed that your spouse needs Medicaid to work.") unless @trVaSpouseSsiCaidKeep.blank?
  @trVaSpouseSsiCaidKeep.save!
  
#	220	Alert - Medicaid Lost (state Threshold):  Your monthly gross earned income (~ssiOrCaidEarnAmt~) is greater than the monthly Threshold amount for your State (~RateSsiCaidMonthlyThresholdTbl~).  Unless you can establish an Individualized Threshold, or unless your State has other special Medicaid provisions, you will lose your Medicaid coverage.  [NOTE:  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Medicare Part B Premium deducted from your SSDI Check?]	
#TRCaidLostThreshold	1	11260	If CaidGet = Y AND ssiGet = Y AND ssiIndividThreshold = N AND ssiOrCaidEarnAmt  > VA_RateSsiCaidMonthlyThresholdAmt
@trCaidLostThreshold.update_attribute(:text, "Alert - Medicaid Lost (State Threshold):  Your monthly gross earned income (C{q_ssiOrCaidEarnAmt}) is greater than the monthly Threshold amount for your State (C{rSsiIndividThreshold}). Unless you can establish an Individualized Threshold, or unless your State has other special Medicaid provisions, you will lose your Medicaid coverage.  [NOTE:  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Medicare Part B Premium deducted from your SSDI Check?]") unless @trCaidLostThreshold.blank?
@trCaidLostThreshold.update_attribute(:display_rules, "
caidGet               = manager.get_answer_by_question_name('caidGet')
ssiGet                = manager.get_answer_by_question_name('ssiGet')
ssiIndividThreshold   = manager.get_answer_by_question_name('ssiIndividThreshold')
ssiOrCaidEarnAmt      = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold  = WebCalc.find_by_name('rSsiIndividThreshold')
caidGet == 'Yes' && ssiGet == 'Yes' && ssiIndividThreshold =='No' && ssiOrCaidEarnAmt.to_f > Float(rSsiIndividThreshold.calculate manager)") unless @trCaidLostThreshold.blank?
@trCaidLostThreshold.save!

#230	Recommendation - You may be able to establish an Individualized Threshold:  Since you have sufficient employability investments and/or work expenses, you may be able to include them in a PASS, and/or in an IRWE or BWE and establish an Individualized Threshold that would allow you to keep Medicaid benefits.	
#TRCaidLostaIndividThresholdElig	3	11262	If CaidGet = Y AND ssiGet = Y AND ssiIndividThreshold = N AND (ssiOrCaidEarnAmt  > VA_RateSsiCaidMonthlyThresholdAmt) AND (ssiOrCaidEarnAmt - disWorkExpAmt - estEarnTaxAmt - othWorkExpAmt - employInvestAmt) <= VA_RateSsiCaidMonthlyThresholdAmt AND (ssiOrCaidEarnAmt - ssiCaidIrweAmt - bweAmt - passAmt) > VA_RateSsiCaidMonthlyThresholdAmt
#10/24/2011 early moring edit for ending paren
@trCaidLostaIndividThresholdElig.update_attribute(:text, 'Recommendation - You may be able to establish an Individualized Threshold:  Since you have sufficient employability investments and/or work expenses, you may be able to include them in a PASS, and/or in an IRWE or BWE and establish an Individualized Threshold that would allow you to keep Medicaid benefits.') unless @trCaidLostaIndividThresholdElig.blank?
@trCaidLostaIndividThresholdElig.update_attribute(:display_rules, "
caidGet               = manager.get_answer_by_question_name('caidGet')
ssiGet                = manager.get_answer_by_question_name('ssiGet')
ssiIndividThreshold   = manager.get_answer_by_question_name('ssiIndividThreshold')
ssiOrCaidEarnAmt      = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold  = WebCalc.find_by_name('rSsiIndividThreshold')
disWorkExpAmt         = manager.get_answer_by_question_name('disWorkExpAmt')
estEarnTaxAmt         = manager.get_answer_by_question_name('estEarnTaxAmt')
othWorkExpAmt         = manager.get_answer_by_question_name('othWorkExpAmt')
employInvestAmt       = manager.get_answer_by_question_name('employInvestAmt')
ssiCaidIrweAmt        = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt                = manager.get_answer_by_question_name('bweAmt')
passAmt               = manager.get_answer_by_question_name('passAmt')
( caidGet == 'Yes' && ssiGet == 'Yes'  && ssiIndividThreshold == 'No' && (ssiOrCaidEarnAmt.to_f > Float(rSsiIndividThreshold.calculate manager))  && ( ssiOrCaidEarnAmt.to_f - disWorkExpAmt.to_f - estEarnTaxAmt.to_f - othWorkExpAmt.to_f - employInvestAmt.to_f) <= Float(rSsiIndividThreshold.calculate manager)  && (ssiOrCaidEarnAmt.to_f - ssiCaidIrweAmt.to_f - bweAmt.to_f - passAmt.to_f) > Float(rSsiIndividThreshold.calculate manager))") unless @trCaidLostaIndividThresholdElig.blank?
#caidGet = Y      AND ssiGet = Y     AND ssiIndividThreshold =  N  AND (ssiOrCaidEarnAmt  > VA_RateSsiCaidMonthlyThresholdAmt) AND ( ssiOrCaidEarnAmt       - disWorkExpAmt     - estEarnTaxAmt      - othWorkExpAmt      - employInvestAmt)     <= VA_RateSsiCaidMonthlyThresholdAmt AND (ssiOrCaidEarnAmt      - ssiCaidIrweAmt      - bweAmt      - passAmt     ) > VA_RateSsiCaidMonthlyThresholdAmt
@trCaidLostaIndividThresholdElig.save!

#240	Recommendation - Apply for Individualized Threshold: Your monthly gross earned income (~ssiOrCaidEarnAmt~) is greater than the Threshold amount for your State (~RateSsiCaidMonthlyThresholdTbl~), which means that you could lose your Medicaid coverage. However, you should apply for an Individualized Threshold because you have an IRWE, BWE and/or PASS large enough to allow you to keep your Medicaid coverage.	
#TRApplyIndividThreshold	3	11263	If CaidGet = Y AND ssiGet = Y AND ssiIndividThreshold = N AND ssiOrCaidEarnAmt > VA_RateSsiCaidMonthlyThresholdAmt AND (ssiOrCaidEarnAmt - ssiCaidIrweAmt - bweAmt - passAmt) <= VA_RateSsiCaidMonthlyThresholdAmt
@trApplyIndividThreshold.update_attribute(:text, 'Recommendation - Apply for Individualized Threshold: Your monthly gross earned income (C{q_ssiOrCaidEarnAmt}) is greater than the Threshold amount for your State (C{rSsiIndividThreshold}), which means that you could lose your Medicaid coverage. However, you should apply for an Individualized Threshold because you have an IRWE, BWE and/or PASS large enough to allow you to keep your Medicaid coverage.') unless @trApplyIndividThreshold.blank?
@trApplyIndividThreshold.update_attribute(:display_rules, "
caidGet = manager.get_answer_by_question_name('caidGet')
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssiIndividThreshold = manager.get_answer_by_question_name('ssiIndividThreshold')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
rSsiIndividThreshold = 
ssiCaidIrweAmt = manager.get_answer_by_question_name('ssiCaidIrweAmt')
bweAmt = manager.get_answer_by_question_name('bweAmt')
passAmt = manager.get_answer_by_question_name('passAmt')
caidGet == 'Yes' && ssiGet == 'Yes' && ssiIndividThreshold =='No' && (ssiOrCaidEarnAmt.to_f > Float(rSsiIndividThreshold.calculate manager)) && ((ssiOrCaidEarnAmt.to_f - ssiCaidIrweAmt.to_f - bweAmt.to_f - passAmt.to_f) > Float(rSsiIndividThreshold.calculate manager))") unless @trApplyIndividThreshold.blank?
@trApplyIndividThreshold.save!
 #Stopping here 1:45 PM Sunday night
#250	Alert - Medicaid Lost (Individualized Threshold):  Your annualized gross earned income (~ssiOrCaidEarnAmt~ X 12) is greater than your Individualized Threshold amount  (~ssiAnnualIndividThresholdAmt~).  Unless your State has other special Medicaid provisions, you will lose your Medicaid coverage.  [NOTE:  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Your Medicare Part B Premium deducted from your SSDI Payment?] 	
#TRCaidLostIndividThreshold	1	11265	 IF ssiGet = Y AND CaidGet = Y AND ssiIndividThreshold = Y AND (ssiOrCaidEarnAmt * 12) > ssiAnnualIndividThresholdAmt
@trCaidLostIndividThreshold.update_attribute(:text, 'Alert - Medicaid Lost (Individualized Threshold):  Your annualized gross earned income (C{q_ssiOrCaidEarnAmt_x_12}) is greater than your Individualized Threshold amount  (C{q_ssiAnnualIndividThresholdAmt}).  Unless your State has other special Medicaid provisions, you will lose your Medicaid coverage.  [NOTE:  If Medicaid stops and you have SSDI and Medicare Part B coverage, go back and answer YES to the question, Is Your Medicare Part B Premium deducted from your SSDI Payment?] ') unless @trCaidLostIndividThreshold.blank?
@trCaidLostIndividThreshold.update_attribute(:display_rules, "
caidGet = manager.get_answer_by_question_name('caidGet')
ssiGet = manager.get_answer_by_question_name('ssiGet')
ssiIndividThreshold = manager.get_answer_by_question_name('ssiIndividThreshold')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
q_ssiOrCaidEarnAmt_x_12 = WebCalc.find_by_name('q_ssiOrCaidEarnAmt_x_12')
ssiGet == 'Yes' && caidGet == 'Yes' && ssiIndividThreshold == 'Yes' && Float(q_ssiOrCaidEarnAmt_x_12.calculate manager) > Float(rSsiIndividThreshold.calculate manager)") unless @trCaidLostIndividThreshold.blank?
@trCaidLostIndividThreshold.save!

#260	Alert - Spouse Medicaid Lost (State Threshold):  Your spouse's monthly gross earned income (~spouseSsiOrCaidEarnAmt~) is greater than the monthly Threshold amount for your State (~RateSsiCaidMonthlyThresholdTbl~).  Unless your spouse can establish an Individualized Threshold, or unless your State has other special Medicaid provisions, your spouse will lose Medicaid coverage.	
#TRSpouseCaidLostThreshold	1	11270	If spouseSsiGet = Y AND caidSpouseGet = Y AND spouseSsiOrCaidEarnAmt > VA_RateSsiCaidMonthlyThresholdAmt AND spouseIndividThreshold = N
@trSpouseCaidLostThreshold.update_attribute(:text, "Alert - Spouse Medicaid Lost (State Threshold):  Your spouse's monthly gross earned income (C{q_spouseSsiOrCaidEarnAmt}) is greater than the monthly Threshold amount for your State (C{rSsiIndividThreshold}).  Unless your spouse can establish an Individualized Threshold, or unless your State has other special Medicaid provisions, your spouse will lose Medicaid coverage.") unless @trSpouseCaidLostThreshold.blank?
@trSpouseCaidLostThreshold.update_attribute(:display_rules, "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
spouseSsiGet == 'Yes' && caidSpouseGet == 'Yes' && (spouseSsiOrCaidEarnAmt.to_f > Float(rSsiIndividThreshold.calculate manager))  && spouseIndividThreshold == 'No'") unless @trSpouseCaidLostThreshold.blank?
#If spouseSsiGet = Y AND caidSpouseGet = Y AND spouseSsiOrCaidEarnAmt > VA_RateSsiCaidMonthlyThresholdAmt AND spouseIndividThreshold = N
@trSpouseCaidLostThreshold.save!

#270	Recommendation - Your spouse may be able to establish an individualized threshold:  Since your spouse has sufficient employability investments and/or/work expenses, you may be able to include them in a PASS, or in an IRWE or BWE,  and establish an individualized threshold that would allow your spouse to keep Medicaid benefits.	
#TRSpouseCaidLostIndividThresholdElig	3	11272	If caidSpouseGet = Y AND spouseSsiGet = Y AND spouseIndividThreshold = N AND (spouseSsiOrCaidEarnAmt - spouseSsiCaidIrweAmt - spouseBweAmt - spousePassAmt) > VA_RateSsiCaidMonthlyThresholdAmt AND (spouseSsiOrCaidEarnAmt - spouseDisWorkExpAmt - spouseEstEarnTaxAmt - spouseOthWorkExpAmt - spouseEmployInvestAmt) <= VA_RateSsiCaidMonthlyThresholdAmt
@trSpouseCaidLostIndividThresholdElig.update_attribute(:text, 'Recommendation - Your spouse may be able to establish an individualized threshold:  Since your spouse has sufficient employability investments and/or/work expenses, you may be able to include them in a PASS, or in an IRWE or BWE, and establish an individualized threshold that would allow your spouse to keep Medicaid benefits.') unless @trSpouseCaidLostIndividThresholdElig.blank?
@trSpouseCaidLostIndividThresholdElig.update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
spouseDisWorkExpAmt = manager.get_answer_by_question_name('spouseDisWorkExpAmt')
spouseEstEarnTaxAmt = manager.get_answer_by_question_name('spouseEstEarnTaxAmt')
spouseOthWorkExpAmt = manager.get_answer_by_question_name('spouseOthWorkExpAmt')
spouseEmployInvestAmt = manager.get_answer_by_question_name('spouseEmployInvestAmt')
( caidSpouseGet == 'Yes' && spouseSsiGet == 'Yes'  && spouseIndividThreshold =='No'  && ((spouseSsiOrCaidEarnAmt.to_f - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f - spousePassAmt.to_f) <= Float(rSsiIndividThreshold.calculate manager))  && ((spouseSsiOrCaidEarnAmt.to_f - spouseDisWorkExpAmt.to_f - spouseEstEarnTaxAmt.to_f - spouseOthWorkExpAmt.to_f - spouseEmployInvestAmt.to_f ) <= Float(rSsiIndividThreshold.calculate manager)))") unless @trSpouseCaidLostIndividThresholdElig.blank?
#If caidSpouseGet = Y AND  spouseSsiGet = Y      AND spouseIndividThreshold = N    AND (spouseSsiOrCaidEarnAmt       - spouseSsiCaidIrweAmt    - spouseBweAmt - spousePassAmt) > VA_RateSsiCaidMonthlyThresholdAmt AND (spouseSsiOrCaidEarnAmt        - spouseDisWorkExpAmt      - spouseEstEarnTaxAmt      - spouseOthWorkExpAmt      - spouseEmployInvestAmt) <= VA_RateSsiCaidMonthlyThresholdAmt
@trSpouseCaidLostIndividThresholdElig.save!

#31 34	280	Recommendation - Spouse Apply for Individualized Threshold: Your spouse's monthly gross earned income (~spouseSsiOrCaidEarnAmt~) is greater than the monthly Threshold amount for your State (~VA_RateSsiCaidMonthlyThresholdAmt~), which means that your spouse could lose Medicaid coverage. However, your spouse should apply for an Individualized Threshold because your spouse has an IRWE, BWE and/or PASS large enough to keep Medicaid coverage.	
#TRSpouseApplyIndividThreshold	3	11273	If caidSpouseGet = Y AND spouseSsiGet = Y AND spouseIndividThreshold = N AND (spouseSsiOrCaidEarnAmt - spouseSsiCaidIrweAmt - spouseBweAmt - spousePassAmt) <= VA_RateSsiCaidMonthlyThresholdAmt
@trSpouseApplyIndividThreshold.update_attribute(:text, "Recommendation - Spouse Apply for Individualized Threshold: Your spouse's monthly gross earned income (C{q_spouseSsiOrCaidEarnAmt}) is greater than the monthly Threshold amount for your State (C{rSsiIndividThreshold}), which means that your spouse could lose Medicaid coverage. However, your spouse should apply for an Individualized Threshold because your spouse has an IRWE, BWE and/or PASS large enough to keep Medicaid coverage.") unless @trSpouseApplyIndividThreshold.blank?
@trSpouseApplyIndividThreshold.update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
spouseSsiOrCaidEarnAmt = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
spouseSsiCaidIrweAmt = manager.get_answer_by_question_name('spouseSsiCaidIrweAmt')
spouseBweAmt = manager.get_answer_by_question_name('spouseBweAmt')
spousePassAmt = manager.get_answer_by_question_name('spousePassAmt')
rSsiIndividThreshold = WebCalc.find_by_name('rSsiIndividThreshold')
caidSpouseGet == 'Yes' && spouseSsiGet == 'Yes' && spouseIndividThreshold == 'No' && ((spouseSsiOrCaidEarnAmt.to_f  - spouseSsiCaidIrweAmt.to_f - spouseBweAmt.to_f - spousePassAmt.to_f) <=- Float(rSsiIndividThreshold.calculate manager))") unless @trSpouseApplyIndividThreshold.blank?
#If caidSpouseGet = Y AND spouseSsiGet = Y     AND  spouseIndividThreshold = N   AND  ( spouseSsiOrCaidEarnAmt     -   spouseSsiCaidIrweAmt      - spouseBweAmt      - spousePassAmt) <= VA_RateSsiCaidMonthlyThresholdAmt
@trSpouseApplyIndividThreshold.save!

#32	290	Alert - Spouse Medicaid Lost (Individualized Threshold):  Your spouse's annualized gross earned income (~spouseSsiOrCaidEarnAmt~ X 12) is greater than ~spouseAnnualIndividThresholdAmt~, your spouse's Individualized Threshold amount.  Unless your State has other special Medicaid provisions, your spouse will lose Medicaid coverage.	
#TRSpouseCaidLostIndividThreshold	1	11275	If caidSpouseGet = Y AND spouseSsiGet = Y AND spouseIndividThreshold = Y AND (spouseSsiOrCaidEarnAmt X 12) > spouseAnnualIndividThresholdAmt
@trSpouseCaidLostIndividThreshold.update_attribute(:text, "Alert - Spouse Medicaid Lost (Individualized Threshold): Your spouse's annualized gross earned income (C{q_spouseSsiOrCaidEarnAmt_x_12}) is greater than C{q_spouseAnnualIndividThresholdAmt}, your spouse's Individualized Threshold amount.  Unless your State has other special Medicaid provisions, your spouse will lose Medicaid coverage.") unless @trSpouseCaidLostIndividThreshold.blank?
@trSpouseCaidLostIndividThreshold.update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
spouseIndividThreshold = manager.get_answer_by_question_name('spouseIndividThreshold')
q_spouseSsiOrCaidEarnAmt_x_12 = WebCalc.find_by_name('q_spouseSsiOrCaidEarnAmt_x_12')
spouseAnnualIndividThresholdAmt = manager.get_answer_by_question_name('spouseAnnualIndividThresholdAmt')
caidSpouseGet == 'Yes' && spouseSsiGet == 'Yes' && spouseIndividThreshold == 'Yes' && Float(q_spouseSsiOrCaidEarnAmt_x_12.calculate manager) > spouseAnnualIndividThresholdAmt.to_f") unless @trSpouseCaidLostIndividThreshold.blank?
#If caidSpouseGet = Y AND spouseSsiGet = Y AND     spouseIndividThreshold   = Y  AND (spouseSsiOrCaidEarnAmt X 12) > spouseAnnualIndividThresholdAmt
@trSpouseCaidLostIndividThreshold.save!

#34	300	Alert - Medicaid Lost (Spouse Earnings):  Your combined income has caused your SSI cash benefit to be zero.  Because your spouse has earnings, your spouse qualifies for Medicaid under 1619b (unless your spouse's earnings exceed the Threshold).  Because you have no earnings you will lose your Medicaid eligibility, though you may be eligible under another State program.  If you were to earn $1 or more per month, you would qualify for Medicaid under 1619b.	
#TRCaidLostCoupleSSIZeroNoEarn	1	11280	If ssiGet = Y AND spouseSsiGet = Y AND r_SsiNoOverUnderAdjustCalcAmt = 0 AND ssiOrCaidEarnAmt = 0 AND spouseSsiOrCaidEarnAmt > 0 AND ssiCoupleResourceLimitExceed = N AND r_SsiUnearnNoSpouseDeemAmt < rateFbrCoupleAmt
@trCaidLostCoupleSSIZeroNoEarn.update_attribute(:text, "Alert - Medicaid Lost (Spouse Earnings):  Your combined income has caused your SSI cash benefit to be zero.  Because your spouse has earnings, your spouse qualifies for Medicaid under 1619b (unless your spouse's earnings exceed the Threshold).  Because you have no earnings you will lose your Medicaid eligibility, though you may be eligible under another State program.  If you were to earn $1 or more per month, you would qualify for Medicaid under 1619b.") unless @trCaidLostCoupleSSIZeroNoEarn.blank?
@trCaidLostCoupleSSIZeroNoEarn.update_attribute(:display_rules, "
ssiGet                          = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                    = manager.get_answer_by_question_name('spouseSsiGet')
r_SsiNoOverUnderAdjustCalcAmt   = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
ssiOrCaidEarnAmt                = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt          = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
ssiCoupleResourceLimitExceed    = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
r_SsiUnearnNoSpouseDeemAmt      = WebCalc.find_by_name('r_SsiUnearnNoSpouseDeemAmt')
rateFbrCoupleAmt                = WebCalc.find_by_name('rateFbrCoupleAmt')
ssiGet == 'Yes' && spouseSsiGet == 'Yes' && ssiOrCaidEarnAmt.to_f == 0 && spouseSsiOrCaidEarnAmt.to_f > 0 && ssiCoupleResourceLimitExceed == 'No' && Float(r_SsiUnearnNoSpouseDeemAmt.calculate manager) < Float(rateFbrCoupleAmt.calculate manager) && Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) == 0") unless @trCaidLostCoupleSSIZeroNoEarn.blank?
#If ssiGet = Y AND spouseSsiGet = Y AND  r_SsiNoOverUnderAdjustCalcAmt = 0 AND     ssiOrCaidEarnAmt     = 0 AND   spouseSsiOrCaidEarnAmt > 0 AND ssiCoupleResourceLimitExceed = N AND    r_SsiUnearnNoSpouseDeemAmt < rateFbrCoupleAmt
@trCaidLostCoupleSSIZeroNoEarn.save!

#34	310	Alert - Spouse Medicaid Lost:  Your combined income has caused your SSI cash benefit to be zero.  Because you have earnings, you qualify for Medicaid under 1619b (unless your earnings exceed the threshold).  Because your spouse has no earnings your spouse will lose Medicaid eligibility, though your spouse may be eligible under another State program.  If your spouse were to earn $1 or more per month, your spouse would qualify for Medicaid under 1619b.	
#TRSpouseCaidLostCoupleSsiZeroNoEarn	1	11285	If ssiGet = Y AND spouseSsiGet = Y AND r_SsiNoOverUnderAdjustCalcAmt = 0 AND ssiOrCaidEarnAmt > 0 AND spouseSsiOrCaidEarnAmt = 0 AND ssiCoupleResourceLimitExceed = N AND r_SsiUnearnNoSpouseDeemAmt < rateFbrCoupleAmt
@trSpouseCaidLostCoupleSsiZeroNoEarn.update_attribute(:text, 'Alert - Spouse Medicaid Lost:  Your combined income has caused your SSI cash benefit to be zero.  Because you have earnings, you qualify for Medicaid under 1619b (unless your earnings exceed the threshold).  Because your spouse has no earnings your spouse will lose Medicaid eligibility, though your spouse may be eligible under another State program.  If your spouse were to earn $1 or more per month, your spouse would qualify for Medicaid under 1619b.') unless @trSpouseCaidLostCoupleSsiZeroNoEarn.blank?
@trSpouseCaidLostCoupleSsiZeroNoEarn.update_attribute(:display_rules, "
ssiGet                              = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet                        = manager.get_answer_by_question_name('spouseSsiGet')
r_SsiNoOverUnderAdjustCalcAmt       = WebCalc.find_by_name('r_SsiNoOverUnderAdjustCalcAmt')
ssiOrCaidEarnAmt                    = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
spouseSsiOrCaidEarnAmt              = manager.get_answer_by_question_name('spouseSsiOrCaidEarnAmt')
ssiCoupleResourceLimitExceed        = manager.get_answer_by_question_name('ssiCoupleResourceLimitExceed')
r_SsiUnearnNoSpouseDeemAmt          = WebCalc.find_by_name('r_SsiUnearnNoSpouseDeemAmt')
rateFbrCoupleAmt                    = WebCalc.find_by_name('rateFbrCoupleAmt')
ssiGet == 'Yes' && spouseSsiGet == 'Yes' && ssiOrCaidEarnAmt.to_f > 0 && spouseSsiOrCaidEarnAmt.to_f == 0 &&  ssiCoupleResourceLimitExceed == 'No' && Float(r_SsiUnearnNoSpouseDeemAmt.calculate manager) < Float(rateFbrCoupleAmt.calculate manager) && Float(r_SsiNoOverUnderAdjustCalcAmt.calculate manager) == 0") unless @trSpouseCaidLostCoupleSsiZeroNoEarn.blank?
#If ssiGet = Y AND spouseSsiGet = Y A    ND r_SsiNoOverUnderAdjustCalcAmt = 0 AND ssiOrCaidEarnAmt     >  0 AND   spouseSsiOrCaidEarnAmt      = 0 AND ssiCoupleResourceLimitExceed =    N AND r_SsiUnearnNoSpouseDeemAmt < rateFbrCoupleAmt
@trSpouseCaidLostCoupleSsiZeroNoEarn.save!

#38	320	Alert - Your Student Earned Income Exclusion (SEIE) (~seieLessThanSeieMaxAnnualLmtReached~ per month) is less than your monthly earnings (~ssiOrCaidEarnAmt~). But you say you have not reached your annual SEIE limit (~Maximum Student Earned Income Exclusion (SEIE) per year~). You must exclude earnings up to the monthly SEIE limit (~rateSEIEMaxMonthly~) until your annual limit is reached.	
#TRSeieLessThanMoEarnExcludeToMoLimit	4	11300	IF seieLessThanEarnAnnualLmtReached = N
#Note Bob Freehand fix of both seieAmt for insert var and text modification 

#NOte this diplay rule in the Workbook does not look right Make something up and wait for correction
@TrSeieLessThanMoEarnExcludeToMoLimit.update_attribute(:text, 'Alert - Student Earned Income Exclusion (SEIE) less than monthly earnings:  Your Student Earned Income Exclusion (SEIE) (C{q_seieAmt}) is less than your monthly earnings (C{q_ssiOrCaidEarnAmt}. But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You must exclude earnings up to the monthly SEIE limit (C{rateSEIEMaxMonthly}) until your annual limit is reached.') unless @TrSeieLessThanMoEarnExcludeToMoLimit.blank?
@TrSeieLessThanMoEarnExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && seieAmt.to_f < ssiOrCaidEarnAmt.to_f && seieLessThanEarnAnnualLmtReached == 'No' && ssiOrCaidEarnAmt.to_f < Float(rateSEIEMaxMonthly.calculate manager)") unless @TrSeieLessThanMoEarnExcludeToMoLimit.blank?
@TrSeieLessThanMoEarnExcludeToMoLimit.save!

#Note another Bob freehand fix to better fit Help system requirements
#38	330	Alert - Your Student Earned Income Exclusion (SEIE) (~seieLessThanSeieMaxAnnualLmtReached~ per month) is less than the SEIE monthly limit (~rateSEIEMaxMonthly~). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You must exclude earnings up to the monthly SEIE limit until your annual limit is reached.	
#TRSieiLessThanMoLimitExcludeToMoLimit			IF seieLessThanSeieMaxAnnualLmtReached = N
@trSieiLessThanMoLimitExcludeToMoLimit.update_attribute(:text, 'Alert - Your SEIE is less than the SEIE monthly limit: Your Student Earned Income Exclusion (SEIE) (C{q_seieAmt}) is less than the SEIE monthly limit (C{rateSEIEMaxMonthly}). But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You must exclude earnings up to the monthly SEIE limit until your annual limit is reached.') unless @trSieiLessThanMoLimitExcludeToMoLimit.blank?
@trSieiLessThanMoLimitExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && seieAmt.to_f < ssiOrCaidEarnAmt.to_f && seieLessThanEarnAnnualLmtReached == 'No' && ssiOrCaidEarnAmt.to_f > Float(rateSEIEMaxMonthly.calculate manager)") unless @trSieiLessThanMoLimitExcludeToMoLimit.blank?
@trSieiLessThanMoLimitExcludeToMoLimit.save!

#More Bob freehand fix
@trSieiZeroExcludeToMoLimit.update_attribute(:text, 'Alert - No SEIE Excluded: You have excluded none of your earned income as a Student Earned Income Exclusion (SEIE). But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You must exclude earnings up to the monthly SEIE limit (C{rateSEIEMaxMonthly}) until your annual limit is reached.') unless @trSieiZeroExcludeToMoLimit.blank?
#38	340	Alert - You have excluded none of your earned income as a Student Earned Income Exclusion (SEIE). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You must exclude earnings up to the monthly SEIE limit (rateSEIEMaxMonthly) until your annual limit is reached.	
#TRSieiZeroExcludeToMoLimit			 IF seieAnnualLmtPreviouslyReached = N
@trSieiZeroExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && seieAmt.to_f == 0 && seieLessThanEarnAnnualLmtReached == 'No'") unless @trSieiZeroExcludeToMoLimit.blank?
@trSieiZeroExcludeToMoLimit.save!

#38	350	Alert - Your Student Earned Income Exclusion (SEIE) (~seieLessThanSeieMaxAnnualLmtReached~ per month) plus your spouse's SEIE (~spouseSeieAmt~) is less than the sum of your monthly earnings (~ssiOrCaidEarnAmt~) and your spouse's (~spouseSsiOrCaidEarnAmt~). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You and/or your spouse must exclude earnings up to the monthly SEIE limit (~rateSEIEMaxMonthly~) until your annual limit is reached.	
#TRCoupleSeieLessThanMoEarnExcludeToMoLimit	4	11350	IF coupleSeieLessThanEarnMaxAnnualLmtReached = N
#350 text From PDB
@trCoupleSeieLessThanMoEarnExcludeToMoLimit.update_attribute(:text, "Alert - Combined Student Earned Income Exclusion (SEIE) annual limit not reached and less than combined earnings: Your Student Earned Income Exclusion (SEIE) (C{q_seieAmt}) plus your spouse's SEIE (C{~q_spouseSeieAmt}) is less than the sum of your monthly earnings (C{q_ssiOrCaidEarnAmt}) and your spouse's (C{q_spouseSsiOrCaidEarnAmt}). But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You and/or your spouse must exclude earnings up to the monthly SEIE limit (C{rateSEIEMaxMonthly}) until your annual limit is reached.") unless @trCoupleSeieLessThanMoEarnExcludeToMoLimit.blank?
@trCoupleSeieLessThanMoEarnExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && spouseSsiGet == 'Yes' && ((seieAmt.to_f  + spouseSeieAmt.to_f) < ssiOrCaidEarnAmt.to_f) &&  seieLessThanEarnAnnualLmtReached == 'No'") unless @trCoupleSeieLessThanMoEarnExcludeToMoLimit.blank?
@trCoupleSeieLessThanMoEarnExcludeToMoLimit.save!
 
#360 text from PDB
#TR#360: "Alert - Combined Student Earned Income Exclusion (SEIE) monthly limit not reached and less than annual limit.  Your Student Earned Income Exclusion (SEIE) (~seieLessThanSeieMaxAnnualLmtReached~ per month) plus your spouse's SEIE (~spouseSeieAmt~) is less than SEIE monthly limit (~rateSEIEMaxMonthly~). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You and/or your spouse must exclude earnings up to the monthly SEIE limit until your annual limit is reached."  
#38	360	Alert - Your Student Earned Income Exclusion (SEIE) (~seieLessThanSeieMaxAnnualLmtReached~ per month) plus your spouse's SEIE (~spouseSeieAmt~)  is less than the SEIE monthly limit (~rateSEIEMaxMonthly~). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You and/or your spouse must exclude earnings up to the monthly SEIE limit until your annual limit is reached.	
#TRCoupleSieiLessThanMoLimitExcludeToMoLimit			IF coupleSeieLessThanSeieMaxAnnualLmtReached = N
@trCoupleSieiLessThanMoLimitExcludeToMoLimit.update_attribute(:text, "Alert - Combined Student Earned Income Exclusion (SEIE) monthly limit not reached and less than annual limit: Your Student Earned Income Exclusion (SEIE) (C{q_seieAmt}) plus your spouse's SEIE (C{fq_spouseSeieAmt}) is less than SEIE monthly limit (C{rateSEIEMaxMonthly}). But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You and/or your spouse must exclude earnings up to the monthly SEIE limit until your annual limit is reached.") unless @trCoupleSieiLessThanMoLimitExcludeToMoLimit.blank?
@trCoupleSieiLessThanMoLimitExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
rateSEIEMaxMonthly = WebCalc.find_by_name('rateSEIEMaxMonthly')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && spouseSsiGet == 'Yes' && ((seieAmt.to_f  + spouseSeieAmt.to_f) < Float(rateSEIEMaxMonthly.calculate manager))  && ssiOrCaidEarnAmt.to_f > Float(rateSEIEMaxMonthly.calculate manager) &&  seieLessThanEarnAnnualLmtReached == 'No'") unless @trCoupleSieiLessThanMoLimitExcludeToMoLimit.blank?
@trCoupleSieiLessThanMoLimitExcludeToMoLimit.save!

#370 fix
#TR#370: "Alert - No Student Earned Income Exclusion (SEIE) and earned income. You and your spouse have excluded none of your earned income as a Student Earned Income Exclusion (SEIE). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You and/or your spouse must exclude earnings up to the monthly SEIE limit (~rateSEIEMaxMonthly~) until your annual limit is reached."  NOTE that the word "excluded" is mispelled in the workbook.
@trCoupleSieiZeroExcludeToMoLimit.update_attribute(:text, 'Alert - No Student Earned Income Exclusion (SEIE) and earned income: You and your spouse have excluded none of your earned income as a Student Earned Income Exclusion (SEIE). But you say you have not reached your annual SEIE limit (C{rateSEIEMaxYear}). You and/or your spouse must exclude earnings up to the monthly SEIE limit (C{rateSEIEMaxMonthly}) until your annual limit is reached.') unless @trCoupleSieiZeroExcludeToMoLimit.blank?
#38	370	Alert - You and your spouse have exluded none of your earned income as a Student Earned Income Exclusion (SEIE). But you say you have not reached your annual SEIE limit (~rateSEIEMaxYear~). You and/or your spouse must exclude earnings up to the monthly SEIE limit (~rateSEIEMaxMonthly~) until your annual limit is reached.	TRCoupleSieiZeroExcludeToMoLimit			IF coupleSeieAnnualAmtPreviouslyReached = N
@trCoupleSieiZeroExcludeToMoLimit.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
seieAmt = manager.get_answer_by_question_name('seieAmt')
spouseSeieAmt = manager.get_answer_by_question_name('spouseSeieAmt')
ssiOrCaidEarnAmt = manager.get_answer_by_question_name('ssiOrCaidEarnAmt')
seieLessThanEarnAnnualLmtReached = manager.get_answer_by_question_name('seieLessThanEarnAnnualLmtReached')
ssiGet == 'Yes' && spouseSsiGet == 'Yes' && ((seieAmt.to_f  + spouseSeieAmt.to_f) == 0) && seieLessThanEarnAnnualLmtReached == 'No'") unless @trCoupleSieiZeroExcludeToMoLimit.blank?
@trCoupleSieiZeroExcludeToMoLimit.save!

#r_SgaAmt
#
## Bob reconsiders, too many things differnet in new workbook, these TRs will need to be put on hold for Ruth Scrutiny
##Bob notes that this one and maybe others to follow are going to need a number of edits, has inserts not yet defined.
##380	Alert - Your SSDI (Title II) Check Stops:  Your countable monthly earnings of ~RDICountEarnInc~ cause your SSDI check to stop because they exceed the Substantial Gainful Activity (SGA) amount, ~RSGA~, and you have completed your Trial Work Period (TWP) and Grace Period.  If you had an IRWE or Subsidy of at least ~RDIIrweSubNeed~ (in addition to any IRWE or subsidy you may already have), or your earnings drop by that amount, then you would continue getting your cash benefit until you complete your Extended Period of Eligibility (EPE).	
##TRTwpNo	1	14400	If RDICountEarnInc > RSGA AND TWP = NO
#@TrTwpNo.update_attribute(:text, 'Alert - Your SSDI (Title II) Check Stops:  Your countable monthly earnings of ~RDICountEarnInc~ cause your SSDI check to stop because they exceed the Substantial Gainful Activity (SGA) amount, C{r_SgaAmt}, and you have completed your Trial Work Period (TWP) and Grace Period.  If you had an IRWE or Subsidy of at least ~RDIIrweSubNeed~ (in addition to any IRWE or subsidy you may already have), or your earnings drop by that amount, then you would continue getting your cash benefit until you complete your Extended Period of Eligibility (EPE).') unless @TrTwpNo.blank?
#@TrTwpNo.update_attribute(:display_rules, "
#") unless @TrTwpNo.blank?
#
#@TrTwpEnds.update_attribute(:text, 'Alert - Working after your TWP:  Because your countable monthly earnings are greater than the Substantial Gainful Activity (SGA) amount,  your SSDI (Title II) cash benefit will stop when your Trial Work Period (TWP) and Grace Period end unless you have an IRWE or Subsidy of at least (in addition to any IRWE or subsidy you already have), or your earnings drop by that amount.  In such circumstances you would receive your full cash benefit as long as you are in your Extended Period of Eligibility (EPE).') unless @TrTwpEnds.blank?
#@TrEstimate                                            .update_attribute(:text, 'x') unless @TrEstimate.blank?


#470	Recommendation - Paying for your own Food or Rent may be Advantageous:  Because you do not pay for your share of your food or rent your SSI benefit is reduced by 1/3rd.  Unless you live in a "Supported Living" situation, you may find that you'd be better off paying for your food and/or rent--especially if you want to use a PASS to become more self supporting.  If you pay your share of EITHER FOOD OR RENT, then your in-kind support will be figured using the PMV rule.  If you pay your share of BOTH FOOD AND RENT, then you will get the full SSI benefit amount.	
#TRSSIInKindAlt	3	20700	If InKindThird = Y
@trSSIInKindAlt.update_attribute(:text, "Recommendation - Paying for your own Food or Rent may be Advantageous:  Because you do not pay for your share of your food or rent your SSI benefit is reduced by 1/3rd.  Unless you live in a 'Supported Living' situation, you may find that you'd be better off paying for your food and/or rent--especially if you want to use a PASS to become more self supporting.  If you pay your share of EITHER FOOD OR RENT, then your in-kind support will be figured using the PMV rule.  If you pay your share of BOTH FOOD AND RENT, then you will get the full SSI benefit amount.") unless @trSSIInKindAlt.blank?
@trSSIInKindAlt.update_attribute(:display_rules, "
inKindThird = manager.get_answer_by_question_name('inKindThird')
inKindThird == 'Yes'
") unless @trSSIInKindAlt.blank?
@trSSIInKindAlt.save!

##480	Recommendation - Try using a PASS:  Try including as much as you can of your employability investments, plus any work expenses not already included in an IRWE, in a PASS.  That amount is: ~rInvestWorkExpNotPassIrweBweAmt~.  [Note: A PASS can not be greater than your available, non-SSI income, ~RIncomeAvailPASSSpousePassAmt~.]	
##TRPassNotUsed	3	11501	If rInvestWorkExpNotPassIrweBweAmt > 0 AND blind = NO AND  RTotBenefitAmt < RFBRStateSuppAmt AND PASSAmt = 0 AND (SSIGet = YES OR SSIApply = YES) AND RIncomeAvailPASSSpousePassAmt > 0
#@TrPassNotUsed.update_attribute(:text, 'Recommendation - Try using a PASS:  Try including as much as you can of your employability investments, plus any work expenses not already included in an IRWE, in a PASS.  That amount is: C{rInvestWorkExpNotPassIrweBweAmt}.  [Note: A PASS can not be greater than your available, non-SSI income, ~RIncomeAvailPASSSpousePassAmt~.]') unless @TrPassNotUsed.blank?
#@TrPassNotUsed.update_attribute(:display_rules, "
#rInvestWorkExpNotPassIrweBweAmt = WebCalc.find_by_name('rInvestWorkExpNotPassIrweBweAmt')
#rInvestWorkExpNotPassIrweBweAmt = Float(rInvestWorkExpNotPassIrweBweAmt.calculate manager)
#blind = manager.get_answer_by_question_name('blind')
#PASSAmt = manager.get_answer_by_question_name('PASSAmt')
#SSIGet = manager.get_answer_by_question_name('SSIGet')
#RIncomeAvailPASSSpousePassAmt = 10
#rInvestWorkExpNotPassIrweBweAmt > 0  && blind == 'No'
#") unless @TrPassNotUsed.blank?
##If rInvestWorkExpNotPassIrweBweAmt > 0 AND blind = NO AND  RTotBenefitAmt < RFBRStateSuppAmt AND PASSAmt = 0 AND (SSIGet = YES OR SSIApply = YES) AND RIncomeAvailPASSSpousePassAmt > 0
#@xx.save!

# @TrSpousePassNotUsed                                   .update_attribute(:text, 'x') unless @TrSpousePassNotUsed.blank?
# @TrPassNotUsedBlind                                    .update_attribute(:text, 'x') unless @TrPassNotUsedBlind.blank?
# @TrSpousePassNotUsedBlind                              .update_attribute(:text, 'x') unless @TrSpousePassNotUsedBlind.blank?
# @TrPassPossYesPass                                     .update_attribute(:text, 'x') unless @TrPassPossYesPass.blank?
# @TrSpousePassPossYesPass                               .update_attribute(:text, 'x') unless @TrSpousePassPossYesPass.blank?
# @TrPassPossNoPass                                      .update_attribute(:text, 'x') unless @TrPassPossNoPass.blank?
# @TrPassPossNoPassBlind                                 .update_attribute(:text, 'x') unless @TrPassPossNoPassBlind.blank?
# @TrSpousePassPossNoPass                                .update_attribute(:text, 'x') unless @TrSpousePassPossNoPass.blank?
# @TrSpousePassPossNoPassBlind                           .update_attribute(:text, 'x') unless @TrSpousePassPossNoPassBlind.blank?
# @TrPassOther                                           .update_attribute(:text, 'x') unless @TrPassOther.blank?
# @TrIrweNotUsed                                         .update_attribute(:text, 'x') unless @TrIrweNotUsed.blank?
# @TrIrweNotUsedWithSEIELessThanEarn                     .update_attribute(:text, 'x') unless @TrIrweNotUsedWithSEIELessThanEarn.blank?
# @TrSpouseIrweNotUsed                                   .update_attribute(:text, 'x') unless @TrSpouseIrweNotUsed.blank?
# @TrSpouseIrweNotUsedWithSEIELessThanEarn               .update_attribute(:text, 'x') unless @TrSpouseIrweNotUsedWithSEIELessThanEarn.blank?
# @TrBweNotUsed                                          .update_attribute(:text, 'x') unless @TrBweNotUsed.blank?
# @TrBweNotUsedWithSEIELessThanEarn                      .update_attribute(:text, 'x') unless @TrBweNotUsedWithSEIELessThanEarn.blank?
# @TrSpouseBweNotUsed                                    .update_attribute(:text, 'x') unless @TrSpouseBweNotUsed.blank?
# @TrSpouseBweNotUsedWithSEIELessThanEarn                .update_attribute(:text, 'x') unless @TrSpouseBweNotUsedWithSEIELessThanEarn.blank?
# @TrDIIrweAvail                                         .update_attribute(:text, 'x') unless @TrDIIrweAvail.blank?
# @TrDISubAvail                                          .update_attribute(:text, 'x') unless @TrDISubAvail.blank?
# @TrEarnRecSelf                                         .update_attribute(:text, 'x') unless @TrEarnRecSelf.blank?
# @TrEarnRecOther                                        .update_attribute(:text, 'x') unless @TrEarnRecOther.blank?


  #@trNoDisability.update_attribute(:text, '') unless @trNoDisability.blank?
  #@trAgeMoreThan64Yrs                                    .update_attribute(:text, '') unless @trAgeMoreThan64Yrs.blank?
  #@TrAgeLessThan15Yrs                                    .update_attribute(:text, '') unless @TrAgeLessThan15Yrs.blank?
  #@trSsiAmtDiscrepancy                                   .update_attribute(:text, '') unless @trSsiAmtDiscrepancy.blank?
  #@trSsiCoupleAmtDiscrepancy                             .update_attribute(:text, '') unless @trSsiCoupleAmtDiscrepancy.blank?
  #@trDiAmtDiscrepancy                                    .update_attribute(:text, '') unless @trDiAmtDiscrepancy.blank?
  #@trNoBpqy                                              .update_attribute(:text, '') unless @trNoBpqy.blank?
  #@trSsiFinalDetermination                               .update_attribute(:text, '') unless @trSsiFinalDetermination.blank?
  #@trDiFinalDetermination                                .update_attribute(:text, '') unless @trDiFinalDetermination.blank?
  #@trPassHighIncomeNoSpousePASS                          .update_attribute(:text, '') unless @trPassHighIncomeNoSpousePASS.blank?
  #@trPassHighIncomeSpousePASS                            .update_attribute(:text, '') unless @trPassHighIncomeSpousePASS.blank?
  #@trSpousePASSHighIncomeNoUserPass                      .update_attribute(:text, '') unless @trSpousePASSHighIncomeNoUserPass.blank?
  #@trSpousePASSHighIncomeUserPASS                        .update_attribute(:text, '') unless @trSpousePASSHighIncomeUserPASS.blank?
  #@trSsiEligLostUnEarn                                   .update_attribute(:text, '') unless @trSsiEligLostUnEarn.blank?
  #@trVaSsiCaidKeep                                       .update_attribute(:text, '') unless @trVaSsiCaidKeep.blank?
  #@trVaSpouseSsiCaidKeep                                 .update_attribute(:text, '') unless @trVaSpouseSsiCaidKeep.blank?
  #@trCaidLostThreshold                                   .update_attribute(:text, '') unless @trCaidLostThreshold.blank?
  #@trCaidLostaIndividThresholdElig                       .update_attribute(:text, '') unless @trCaidLostaIndividThresholdElig.blank?
  #@trApplyIndividThreshold                               .update_attribute(:text, '') unless @trApplyIndividThreshold.blank?
  #@trCaidLostIndividThreshold                            .update_attribute(:text, '') unless @trCaidLostIndividThreshold.blank?
  #@trSpouseCaidLostThreshold                             .update_attribute(:text, '') unless @trSpouseCaidLostThreshold.blank?
  #@trSpouseCaidLostIndividThresholdElig                  .update_attribute(:text, '') unless @trSpouseCaidLostIndividThresholdElig.blank?
  #@trSpouseApplyIndividThreshold                         .update_attribute(:text, '') unless @trSpouseApplyIndividThreshold.blank?
  #@trSpouseCaidLostIndividThreshold                      .update_attribute(:text, '') unless @trSpouseCaidLostIndividThreshold.blank?
  #@trCaidLostCoupleSSIZeroNoEarn                         .update_attribute(:text, '') unless @trCaidLostCoupleSSIZeroNoEarn.blank?
  #@trSpouseCaidLostCoupleSsiZeroNoEarn                   .update_attribute(:text, '') unless @trSpouseCaidLostCoupleSsiZeroNoEarn.blank?
  #@TrSeieLessThanMoEarnExcludeToMoLimit                  .update_attribute(:text, '') unless @TrSeieLessThanMoEarnExcludeToMoLimit.blank?
  #@trSieiLessThanMoLimitExcludeToMoLimit                 .update_attribute(:text, '') unless @trSieiLessThanMoLimitExcludeToMoLimit.blank?
  #@trSieiZeroExcludeToMoLimit                            .update_attribute(:text, '') unless @trSieiZeroExcludeToMoLimit.blank?
  #@trCoupleSeieLessThanMoEarnExcludeToMoLimit            .update_attribute(:text, '') unless @trCoupleSeieLessThanMoEarnExcludeToMoLimit.blank?
  #@trCoupleSieiLessThanMoLimitExcludeToMoLimit           .update_attribute(:text, '') unless @trCoupleSieiLessThanMoLimitExcludeToMoLimit.blank?
  #@trCoupleSieiZeroExcludeToMoLimit                      .update_attribute(:text, '') unless @trCoupleSieiZeroExcludeToMoLimit.blank?
  #@TrTwpNo                                               .update_attribute(:text, '') unless @TrTwpNo.blank?
  #@TrTwpEnds                                             .update_attribute(:text, '') unless @TrTwpEnds.blank?
  #@TrEstimate                                            .update_attribute(:text, '') unless @TrEstimate.blank?
  #@TrSSIIncomePASSElig                                   .update_attribute(:text, '') unless @TrSSIIncomePASSElig.blank?
  #@TrSSIEarnIrweElig                                     .update_attribute(:text, '') unless @TrSSIEarnIrweElig.blank?
  #@TrSSIFinanceElig                                      .update_attribute(:text, '') unless @TrSSIFinanceElig.blank?
  #@TrSSIWIElig                                           .update_attribute(:text, '') unless @TrSSIWIElig.blank?
  #@TrSSIFinanceEligBlind                                 .update_attribute(:text, '') unless @TrSSIFinanceEligBlind.blank?
  #@TrSSIWIEligBlind                                      .update_attribute(:text, '') unless @TrSSIWIEligBlind.blank?
  #@trSSIInKindAlt                                        .update_attribute(:text, '') unless @trSSIInKindAlt.blank?
  #@TrPassNotUsed                                         .update_attribute(:text, '') unless @TrPassNotUsed.blank?
  #@TrSpousePassNotUsed                                   .update_attribute(:text, '') unless @TrSpousePassNotUsed.blank?
  #@TrPassNotUsedBlind                                    .update_attribute(:text, '') unless @TrPassNotUsedBlind.blank?
  #@TrSpousePassNotUsedBlind                              .update_attribute(:text, '') unless @TrSpousePassNotUsedBlind.blank?
  #@TrPassPossYesPass                                     .update_attribute(:text, '') unless @TrPassPossYesPass.blank?
  #@TrSpousePassPossYesPass                               .update_attribute(:text, '') unless @TrSpousePassPossYesPass.blank?
  #@TrPassPossNoPass                                      .update_attribute(:text, '') unless @TrPassPossNoPass.blank?
  #@TrPassPossNoPassBlind                                 .update_attribute(:text, '') unless @TrPassPossNoPassBlind.blank?
  #@TrSpousePassPossNoPass                                .update_attribute(:text, '') unless @TrSpousePassPossNoPass.blank?
  #@TrSpousePassPossNoPassBlind                           .update_attribute(:text, '') unless @TrSpousePassPossNoPassBlind.blank?
  #@TrPassOther                                           .update_attribute(:text, '') unless @TrPassOther.blank?
  #@TrIrweNotUsed                                         .update_attribute(:text, '') unless @TrIrweNotUsed.blank?
  #@TrIrweNotUsedWithSEIELessThanEarn                     .update_attribute(:text, '') unless @TrIrweNotUsedWithSEIELessThanEarn.blank?
  #@TrSpouseIrweNotUsed                                   .update_attribute(:text, '') unless @TrSpouseIrweNotUsed.blank?
  #@TrSpouseIrweNotUsedWithSEIELessThanEarn               .update_attribute(:text, '') unless @TrSpouseIrweNotUsedWithSEIELessThanEarn.blank?
  #@TrBweNotUsed                                          .update_attribute(:text, '') unless @TrBweNotUsed.blank?
  #@TrBweNotUsedWithSEIELessThanEarn                      .update_attribute(:text, '') unless @TrBweNotUsedWithSEIELessThanEarn.blank?
  #@TrSpouseBweNotUsed                                    .update_attribute(:text, '') unless @TrSpouseBweNotUsed.blank?
  #@TrSpouseBweNotUsedWithSEIELessThanEarn                .update_attribute(:text, '') unless @TrSpouseBweNotUsedWithSEIELessThanEarn.blank?
  #@TrDIIrweAvail                                         .update_attribute(:text, '') unless @TrDIIrweAvail.blank?
  #@TrDISubAvail                                          .update_attribute(:text, '') unless @TrDISubAvail.blank?
  #@TrEarnRecSelf                                         .update_attribute(:text, '') unless @TrEarnRecSelf.blank?
  #@TrEarnRecOther                                        .update_attribute(:text, '') unless @TrEarnRecOther.blank?

#Web Tips added for testing.  did not mess with Current vs what-if display rules

WebTip.delete_all
#@tip_SwitchToGroup_CS           =WebTip.find_or_create_by_identifier(:identifier => 'tip_SwitchToGroup_CS',            :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '1.00',     :workbook_order => '1',  :web_numerical_result_id => '',      :text=> 'Questions:  You must first answer questions about your current situation.  WW-Web is showing you questions one at a time.  You must accept each answer before the next question will appear.  If you would rather see all of the questions in each section at once, select the "Switch to group mode" link above the questions and User Information title. ')
#@tip_SwitchTo1atTime_CS         =WebTip.find_or_create_by_identifier(:identifier => 'tip_SwitchTo1atTime_CS',          :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '2.00',     :workbook_order => '2',  :web_numerical_result_id => '',      :text=> 'Questions:  You must first answer questions about your current situation.  WW-Web is showing you questions in group mode. You can select (click on or tab into) the answers to any of the questions on this page if you want to change them from the default answers.  If you would rather see each question one at a time, select the "Switch to One-at-a-time mode" link above the questions and User Information title.')
                                                                                                                                                                                            
@tip_Birthdate_CS                =WebTip.find_or_create_by_identifier(:identifier => 'tip_Birthdate_CS',                :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '3.00',     :workbook_order => '3',  :web_numerical_result_id => '',      :text=> 'Birthdate: Enter your birthdate either by typing MM/DD/YEAR or by selecting the date on the calendar pop-up.  You can then accept your answer by clicking on the Accept button or by hitting the Tab key and then Enter.')
@tip_SaveBirthdate_CS            =WebTip.find_or_create_by_identifier(:identifier => 'tip_SaveBirthdate_CS',            :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '4.00',     :workbook_order => '4',  :web_numerical_result_id => '',      :text=> 'We suggest that after you enter and accept your birthdate, you select File-Save As from the main menu by using your mouse (or by typing Alt+F, A).  Give the file a brief name and save it.  From then on, if you start a new case either during this session or later, your birthdate will be the default.')
@tip_Current1AtTimeContinue_CS   =WebTip.find_or_create_by_identifier(:identifier => 'tip_Current1AtTimeContinue_CS',   :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '5.00',     :workbook_order => '5',  :web_numerical_result_id => '',      :text=> 'Continue: When all of the answers are correct for your current situation, you can select the Continue button to go on to the next set of questions.   NOTE:  The Continue button does not work until you have accepted the answer to the last question in the group.')
@tip_GroupContinue               =WebTip.find_or_create_by_identifier(:identifier => 'tip_GroupContinue',               :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '5.00',     :workbook_order => '5',  :web_numerical_result_id => '',      :text=> 'Continue: When all of the answers are correct for your current situation, you can select the Continue button to go on to the next set of questions.   NOTE:  If you have changed any answers from their defaults, the Continue button will not work until you have accepted that and any other changed answer.')

@tip_AgeLessThan15               =WebTip.find_or_create_by_identifier(:identifier => 'tip_AgeLessThan15',               :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '7.00',     :workbook_order => '7',  :web_numerical_result_id => '',      :text=> 'Choose a Situation Date when you will be at least 15 years old.  WW-Web does not calculate results for those who have not reached age 15.')
@tip_AgeGreaterThan65            =WebTip.find_or_create_by_identifier(:identifier => 'tip_AgeGreaterThan65',            :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '8.00',     :workbook_order => '8',  :web_numerical_result_id => '',      :text=> 'The current version of WW-Web does not calculate results if you are 66 years old or older.')
@tip_SitdateFuture               =WebTip.find_or_create_by_identifier(:identifier => 'tip_SitdateFuture',               :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '9.00',     :workbook_order => '9',  :web_numerical_result_id => '',      :text=> 'Since your "Situation Date" is one or more months in the future, you should be aware that some benefit rates may change by then.  WW-Web uses current rates to calculate results.  The actual results may therefore be off by a few dollars.')
@tip_StateNotVirginia            =WebTip.find_or_create_by_identifier(:identifier => 'tip_StateNotVirginia',            :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '10.00',    :workbook_order => '10', :web_numerical_result_id => '',      :text=> 'This version of WW-Web calculates results only if you live in the Commonwealth of Virginia.  If you would like WW-Web to work for your state, let your state disability agencies know.  They can visit www.workworld.org for information and to contact us.')
@tip_NotBlindOrDisabled          =WebTip.find_or_create_by_identifier(:identifier => 'tip_NotBlindOrDisabled',          :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '11.00',    :workbook_order => '11', :web_numerical_result_id => '',      :text=> "This version of WW-Web gives correct results only if you are blind or have another type of disability according to the Social Security Administration's rules.")
@tip_Blind                       =WebTip.find_or_create_by_identifier(:identifier => 'tip_Blind',                       :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '12.00',    :workbook_order => '12', :web_numerical_result_id => '',      :text=> 'Since you are considered blind according to the SSA definition, you can be eligible for SSI even if you engage in Substantial Gainful Activity (SGA) as long as you meet other eligibility criteria.')
@tip_DisabledNotBlind            =WebTip.find_or_create_by_identifier(:identifier => 'tip_DisabledNotBlind',            :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '13.00',    :workbook_order => '13', :web_numerical_result_id => '',      :text=> 'Since you  are not considered blind according to the SSA definition, if you engage in Substantial Gainful Activity (SGA) within the first 12 months after the onset of your disability, you may be determined NOT ELIGIBLE for SSI even if your SSI payments have already begun. (SSA determines your disability onset date.)')
@tip_BPQY                        =WebTip.find_or_create_by_identifier(:identifier => 'tip_BPQY',                        :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '14.00',    :workbook_order => '14', :web_numerical_result_id => '',      :text=> 'You may be able to answer WW-Web questions without a BPQY, but it can be very helpful.  The WW-Web BPQY help topic explains it and tells you exactly how to get a copy for yourself.')
@tip_SitName                     =WebTip.find_or_create_by_identifier(:identifier => 'tip_SitName',                     :display_rules => 'true',         :group_id => @UserInfo.id,        :group_order => '15.00',    :workbook_order => '15', :web_numerical_result_id => '',      :text=> 'Situation Name:  You may enter a brief name (up to 30 characters including spaces) to help you remember the situation.  (For example: "No job", or "Earning $500/month".)')
                                                                                                                                                                                            
@tip_NotMarried                  =WebTip.find_or_create_by_identifier(:identifier => 'tip_NotMarried',                  :display_rules => 'true',         :group_id => @household.id,       :group_order => '1.00',     :workbook_order => '16', :web_numerical_result_id => '',      :text=> 'Even if you are not legally married, SSA may consider you married if you are living with a person of the opposite sex and the two of you are holding yourself out to the community as married.')
@tip_LiveWithOthers              =WebTip.find_or_create_by_identifier(:identifier => 'tip_LiveWithOthers',              :display_rules => 'true',         :group_id => @household.id,       :group_order => '2.00',     :workbook_order => '17', :web_numerical_result_id => '',      :text=> 'Living with others, whether you are married or not, can affect your SSI and Medicaid benefits.  WW-Web will give you specific tips based on whether you are married, on whether you are a student, on your age, and on the benefits you receive.')
                                                                                                                                                                                            
@tip_VA_CurrentSsiGetIf1619b     =WebTip.find_or_create_by_identifier(:identifier => 'tip_VA_CurrentSsiGetIf1619b',     :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '1.00',     :workbook_order => '18', :web_numerical_result_id => '',      :text=> 'Getting SSI:  Answer that you get SSI if you have gotten SSI payments even if you do not now receive an SSI payment because your earnings are too high. In that case you should be financially eligible for SSI-Related Medicaid under either the 1619b or MEDICAID WORKS covered group.')
@tip_SsiAloneBenefitAmt          =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiAloneBenefitAmt',          :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '2.00',     :workbook_order => '19', :web_numerical_result_id => '',      :text=> 'Since you live alone the maximum amount of your SSI benefit is C{rateFbrAmt}.  Your SSI cash benefit will be less if you have other income.  You may, however, be able to use work incentives to decrease or even eliminate the decrease in benefits.  After you enter information about your income and expenses, WW-Web will tell you which work incentives may work best in your situation.')
@tip_CurrentNoFinalDetermination =WebTip.find_or_create_by_identifier(:identifier => 'tip_CurrentNoFinalDetermination', :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '3.00',     :workbook_order => '19', :web_numerical_result_id => '',      :text=> 'Even if you are receiving SSI cash benefits, if you have not received a letter from SSA saying that you are eligible for SSI, then earning more than SGA  (C{rateSgaDisabledAmt}) could cause SSA to cancel your eligibility for SSI.  Contact your SSA claims representative to find out if you can earn SGA without losing your eligibility.')
@tip_WhatIfNoFinalDetermination  =WebTip.find_or_create_by_identifier(:identifier => 'tip_WhatIfNoFinalDetermination',  :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '4.00',     :workbook_order => '20', :web_numerical_result_id => '',      :text=> 'SSI Eligibility:  In a "What-If" Situation, if you say you have not received a letter from SSA that you are eligible for SSI, then WW-Web will tell you that you are not eligible for SSI if you earn over SGA.  So, if you want to know how much your SSI check would be with earnings over SGA after you have been determined eligible, you should answer YES, that you have received the letter.')
@tip_Ssi_OnsetLessThan12Mo       =WebTip.find_or_create_by_identifier(:identifier => 'tip_Ssi_OnsetLessThan12Mo',       :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '5.00',     :workbook_order => '21', :web_numerical_result_id => '',      :text=> 'Even if you have received a letter from SSA saying that you are eligible for SSI, SSA may cancel your eligibility if you earn more than SGA (C{rateSgaDisabledAmt}) before 12 months have passed since the onset date of your disability.  SSA says what date is your onset date.  Contact your SSA claims representative to find out if you can earn SGA without losing your eligibility.')
@tip_Current_SsiActualAmt        =WebTip.find_or_create_by_identifier(:identifier => 'tip_Current_SsiActualAmt',        :display_rules => 'true',         :group_id => @ssi.id,             :group_order => '6.00',     :workbook_order => '22', :web_numerical_result_id => '',      :text=> 'Even if you have received a letter from SSA saying that you are eligible for SSI, SSA may cancel your eligibility if you earn more than SGA (C{rateSgaDisabledAmt}) before 12 months have passed since the onset date of your disability.  SSA says what date is your onset date.  Contact your SSA claims representative to find out if you can earn SGA without losing your eligibility.')
                                                                                                                                                                                            
@tip_CaidGet                     =WebTip.find_or_create_by_identifier(:identifier => 'tip_CaidGet',                     :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '1.00',     :workbook_order => '23', :web_numerical_result_id => '',      :text=> 'Getting Medicaid:  Answer YES if you are covered under any disability-related covered group, including the Medicare-related covered groups such as QMB, SLMB, QI or QDWI that have limited coverage.')
@tip_SsiRecipTo1619b             =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiRecipTo1619b',             :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '2.00',     :workbook_order => '24', :web_numerical_result_id => '',      :text=> 'SSI Recipient: If your earnings go up enough to make your SSI cash benefit go down to zero, then you should continue to be eligible for Medicaid under a program called "Medicaid While Working--1619b" until you make enough that you do not need Medicaid.  You must tell your SSA Claims Representative that you need Medicaid in order to work, and then tell the agency that administers your Medicaid that you are eligible under 1619b.  See the help topic on 1619b.')
@tip_VACaidPsdc                  =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidPsdc',                  :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '3.00',     :workbook_order => '26', :web_numerical_result_id => '',      :text=> 'Protected SSI Disabled Child:  If you are age 18 or older you cannot be in this Medicaid Covered Group.  You may be eligible for Medicaid as a Protected Adult Disabled Child.')
@tip_VACaidPadc                  =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidPadc',                  :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '4.00',     :workbook_order => '27', :web_numerical_result_id => '',      :text=> 'Protected Adult Disabled Child:  As long as you lost your SSI because of your SSDI income, you can be eligible for Medicaid under this group as long as you would be SSI eligible if your SSDI payment were not counted as income.')
@tip_VACaidMedNeedy              =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidMedNeedy',              :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '5.00',     :workbook_order => '28', :web_numerical_result_id => '',      :text=> 'Spendown:  This version of WW-Web does not calculate the eligibility and spendown requirements for the Medically Needy covered group.  If this capability is important to you, let us know by emailing us at workworld@vcu.edu.')
@tip_CurrentVACaidApply          =WebTip.find_or_create_by_identifier(:identifier => 'tip_CurrentVACaidApply',          :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '6.00',     :workbook_order => '29', :web_numerical_result_id => '',      :text=> 'Applying for Medicaid:  Answer YES if you have actually submitted an application to the Virginia Department of Social Services.  Merely planning to submit is not the same as "applying".')
@tip_WhatIfCaidApply             =WebTip.find_or_create_by_identifier(:identifier => 'tip_WhatIfCaidApply',             :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '7.00',     :workbook_order => '30', :web_numerical_result_id => '',      :text=> 'Applying for Medicaid:  In a "What-If" situation, the results for answering YES that you are applying for Medicaid, will be accurate after you have submitted an application to the Virginia Department of Social Services.')
@tip_SpouseIsCommunitySpouse     =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseIsCommunitySpouse',     :display_rules => 'true',         :group_id => @medicaid.id,        :group_order => '8.00',     :workbook_order => '31', :web_numerical_result_id => '',      :text=> 'Community Spouse:  Your spouse is considered to be a "community spouse" if you either live in a Medicaid-supported institution or you receive Medicaid services under a Waiver and your spouse does not live in an institution (even if your spouse has a Medicaid Waiver).')
                                                                                                                                                                                            
@tip_SsdiGet                     =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsdiGet',                     :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '1.00',     :workbook_order => '32', :web_numerical_result_id => '',      :text=> 'Getting SSDI:  Answer YES, that you are receiving SSDI, even if you have completed your Trial Work and Grace Periods and are in your Extended Period of Eligibility (EPE) and are not receiving SSDI payments because of high earnings.  You remain eligible until SSA notifies you that your SSDI benefits have "ceased".')
@tip_Ssdi_OnsetLessThan12Mo      =WebTip.find_or_create_by_identifier(:identifier => 'tip_Ssdi_OnsetLessThan12Mo',      :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '2.00',     :workbook_order => '33', :web_numerical_result_id => '',      :text=> '12 Months Since Disability Onset:  If you earn over the Substantial Gainful Activities amount, C{RateSgaDisabledAmt}, before 12 months have passed since the onset of your disability, SSA may say you are ineligible for SSDI even if some payments have been made.  Contact your SSA Claims Representative if you do not know if 12 months have passed.')
@tip_Ssdi_OwnEarnRecord          =WebTip.find_or_create_by_identifier(:identifier => 'tip_Ssdi_OwnEarnRecord',          :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '3.00',     :workbook_order => '34', :web_numerical_result_id => '',      :text=> 'SSDI Based on Own Earnings: If your SSDI eligibility and amount are based on your own past earnings, then any dependents you have may also be eligible for payments.  Do not count their cash benefits as your income unless WW-Web specifically asks you to do so.  You should be aware that if you become ineligible for SSDI, payments to your dependents will stop.')
@tip_Ssdi_OtherEarnRecord        =WebTip.find_or_create_by_identifier(:identifier => 'tip_Ssdi_OtherEarnRecord',        :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '4.00',     :workbook_order => '35', :web_numerical_result_id => '',      :text=> "SSDI Based on Other's Earnings: If your SSDI eligibility and amount are based on someone else's past earnings, then any dependents you have will probably not be eligible for payments.  SSA probably calls you a Disabled Adult Child (DAC), which means that one or both of your parents are disabled or deceased.  If your disabled parent loses SSDI eligibility, then you also may lose your DAC eligibility.")
@tip_SsdiBlindOnsetDate          =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsdiBlindOnsetDate',          :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '5.00',     :workbook_order => '36', :web_numerical_result_id => '',      :text=> 'Blind Onset Date:  Earning over the Substantial Gainful Activity amount, C{RateSgaBlindAmt}, will not cause you to lose your SSDI eligibility as long as your skills and abilities are different from what they were at the onset of your blindness or before age 55, whichever is later.During your Extended Period of Eligibility (EPE) your SSDI cash payment will stop in SGA months, but your EPE will not cease.')
@tip_Current_SsdiActualAmt       =WebTip.find_or_create_by_identifier(:identifier => 'tip_Current_SsdiActualAmt',       :display_rules => 'true',         :group_id => @ssdi.id,            :group_order => '6.00',     :workbook_order => '37', :web_numerical_result_id => '',      :text=> 'Actual SSDI Amount:  WW-Web asks you how much you are getting and compare it to the amount it calculates you should be getting.  If the amounts are not the same, then WW-Web suggests reasons they may be different.  It is important to find the correct reason before asking WW-Web to calculate the results of "What-If" Situations.')
                                                                                                                                                                                            
@tip_CareBDeduct                 =WebTip.find_or_create_by_identifier(:identifier => 'tip_CareBDeduct',                 :display_rules => 'true',         :group_id => @medicare.id,        :group_order => '1.00',     :workbook_order => '38', :web_numerical_result_id => '',      :text=> 'Medicare Part B Premium:  Medicaid pays the Part B premium under all covered groups but QDWI.  If you do not have Medicaid your Part B premium is deducted from your SSDI payment.  If your SSDI payment stops, you will be billed for the premium amount and you will have to pay out-of-pocket to continue Part B Medicare coverage.')
@tip_careBPremiumAmt             =WebTip.find_or_create_by_identifier(:identifier => 'tip_CareBPremiumAmt',             :display_rules => 'true',         :group_id => @medicare.id,        :group_order => '2.00',     :workbook_order => '39', :web_numerical_result_id => '',      :text=> 'Medicare Part B Premium Amount:  If you do not know the premium amount, accept the default, C{RateCareBPremium}, which is the amount for most people.  We ask for this amount so we can include it as an expense on the Numeric Results page if you have to pay it out-of-pocket.')
                                                                                                                                                                                            
@tip_spouseSsiGet                =WebTip.find_or_create_by_identifier(:identifier => 'tip_spouseSsiGet ',               :display_rules => 'true',         :group_id => @Spouse_SSI.id,      :group_order => '1.00',     :workbook_order => '40', :web_numerical_result_id => '',      :text=> 'Spouse Getting SSI:  Answer that your spouse gets SSI if you and your spouse are eligible for SSI even if you and your spouse do not receive  SSI payments because earnings are too high. In that case your should be financially eligible for SSI-Related Medicaid under either the 1619b or MEDICAID WORKS covered group if your spouse has earnings.')
@tip_SpouseSsiGetButUserNotGet   =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseSsiGetButUserNotGet ',  :display_rules => 'true',         :group_id => @Spouse_SSI.id,      :group_order => '2.00',     :workbook_order => '41', :web_numerical_result_id => '',      :text=> "Spouse Gets SSI But You Don't:  WW-Web does not calculate SSI eligibility and payment amount for your spouse unless you also get SSI.  If your spouse gets SSI, but you do not, you must enter your spouse's information as the primary WW-Web user in order to have WW-Web calculate your spouse's SSI eligibility and payment amount.")
@tip_SsiCoupleBenefitAmt         =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiCoupleBenefitAmt',         :display_rules => 'true',         :group_id => @Spouse_SSI.id,      :group_order => '3.00',     :workbook_order => '42', :web_numerical_result_id => '',      :text=> "Couple Maximum SSI Benefit Amount:  The maximum SSI cash benefit that you are your spouse can get is C{RateFbrCoupleAmt}. (Each of you gets half.) The benefit may be less if the twp of you have other income.  You might, however, be able to use work incentives to decrease or even eliminate the decrease in benefits.  After you enter information about you and your spouse's income and expenses, WW-Web will help you find work incentives that work best in your situation.")
                                                                                                                                                                                            
                                                                                                                                                                                            
@tip_SpouseCaidGetButUserNotGet  =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseCaidGetButUserNotGet',  :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '1.00',     :workbook_order => '43', :web_numerical_result_id => '',      :text=> "Spouse Gets Medicaid But You Don't:  WW-Web does not calculate Medicaid eligibility for your spouse unless you get (or are applying for) Medicaid.  Enter data for your spouse as the primary WW-Web user if you want to find out your spouse's Medicaid eligibility.")
@tip_SpouseCaidGet               =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseCaidGet',               :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '2.00',     :workbook_order => '44', :web_numerical_result_id => '',      :text=> "Spouse Gets Medicaid: Answer YES if your spouse is covered under any disability-related covered group, including the Medicare-related covered groups such as QMB, SLMB, QI or QDWI that have limited coverage.")
@tip_SpouseSsiRecipTo1619b       =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseSsiRecipTo1619b',       :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '3.00',     :workbook_order => '45', :web_numerical_result_id => '',      :text=> "Spouse SSI Recipient: If your spouse's earnings go up enough to make the SSI cash benefit go down to zero, then your spouse should continue to be eligible for Medicaid under a program called 'Medicaid While Working--1619b' until your spouse makes enough to not need Medicaid.  Your spouse must tell the SSA Claims Representative that he/she needs Medicaid in order to work, and then tell the agency that administers Medicaid that he/she is eligible under 1619b.  See the help topic on 1619b.")
@tip_VACaidSpousePsdc            =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidSpousePsdc',            :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '4.00',     :workbook_order => '46', :web_numerical_result_id => '',      :text=> "Spouse Protected SSI Disabled Child:  If your spouse is age 18 or older, your spouse cannot be in this Medicaid Covered Group.  Your spouse may be eligible for Medicaid as a Protected Adult Disabled Child.")
@tip_VACaidSpousePadc            =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidSpousePadc',            :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '5.00',     :workbook_order => '47', :web_numerical_result_id => '',      :text=> "Spouse Protected Adult Disabled Child:  As long as your spouse lost SSI because of your spouse's SSDI income, your spouse can be eligible for Medicaid under this group as long as your spouse would be SSI eligible if the SSDI payment were not counted as income.")
@tip_VACaidSpouseMedNeedy        =WebTip.find_or_create_by_identifier(:identifier => 'tip_VACaidSpouseMedNeedy',        :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '6.00',     :workbook_order => '48', :web_numerical_result_id => '',      :text=> "Spouse Spendown:  This version of WW-Web does not calculate the eligibility and spendown requirements for the Medically Needy covered group.  If this capability is important to you, let us know by emailing us at workworld@vcu.edu.")
@tip_CurrentVACaidSpouseApply    =WebTip.find_or_create_by_identifier(:identifier => 'tip_CurrentVACaidSpouseApply',    :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '7.00',     :workbook_order => '49', :web_numerical_result_id => '',      :text=> 'Spouse Applying for Medicaid:  Answer YES if your spouse has actually submitted an application to the Virginia Department of Social Services.  Merely planning to submit is not the same as "applying".')
@tip_WhatIfCaidSpouseApply       =WebTip.find_or_create_by_identifier(:identifier => 'tip_WhatIfCaidSpouseApply',       :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '8.00',     :workbook_order => '50', :web_numerical_result_id => '',      :text=> 'Spouse Applying for Medicaid:  In a "What-If" situation, the results for answering YES that you are applying for Medicaid, will be accurate after you have submitted an application to the Virginia Department of Social Services.')
@tip_UseIsCommunitySpouse        =WebTip.find_or_create_by_identifier(:identifier => 'tip_UseIsCommunitySpouse',        :display_rules => 'true',         :group_id => @Spouse_Medicaid.id, :group_order => '9.00',     :workbook_order => '51', :web_numerical_result_id => '',      :text=> 'Community Spouse: You are considered to be a "community spouse" if your spouse either lives in a Medicaid-supported institution or receives Medicaid services under a Waiver and you do not live in an institution (even if you have a Medicaid Waiver).')
                                                                                                                                                                                            
                                                                                                                        
@tip_SouseSsdiGet                =WebTip.find_or_create_by_identifier(:identifier => 'tip_SouseSsdiGet',                :display_rules => 'true',         :group_id => @Spouse_SSDI.id,     :group_order => '1.00',     :workbook_order => '52', :web_numerical_result_id => '',      :text=> 'Spouse Getting SSDI:  Answer YES, that your spouse is receiving SSDI, even if your spouse has completed the Trial Work and Grace Periods and is in the Extended Period of Eligibility (EPE) and is not receiving SSDI payments because of high earnings.  Your spouse remains eligible until SSA notifies your spouse that SSDI benefits have "ceased".')
@tip_SpouseSsdi_OwnEarnRecord    =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseSsdi_OwnEarnRecord',    :display_rules => 'true',         :group_id => @Spouse_SSDI.id,     :group_order => '2.00',     :workbook_order => '53', :web_numerical_result_id => '',      :text=> "Spouse SSDI Based on Own Earnings: If your spouse's SSDI eligibility and amount are based on your spouse's own past earnings, then any dependents your spouse have may also be eligible for payments.  Do not count their cash benefits as your spouse's income unless WW-Web specifically asks you to do so.  You should be aware that if your spouse becomes ineligible for SSDI, payments to your spouse's dependents will stop.")
@tip_SpouseSsdi_OtherEarnRecord  =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseSsdi_OtherEarnRecord',  :display_rules => 'true',         :group_id => @Spouse_SSDI.id,     :group_order => '3.00',     :workbook_order => '54', :web_numerical_result_id => '',      :text=> "Spouse SSDI Based on Other's Earnings: If your spouse's SSDI eligibility and amount are based on someone else's past earnings, then any dependents your spouse has will probably not be eligible for payments.  SSA probably calls your spouse a Disabled Adult Child (DAC), which means that one or both of your spouse's parents are disabled or deceased.  If your spouse's disabled parent loses SSDI eligibility, then your spouse also may lose DAC eligibility.")
@tip_SpouseSsdiBlindOnsetDate    =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseSsdiBlindOnsetDate',    :display_rules => 'true',         :group_id => @Spouse_SSDI.id,     :group_order => '4.00',     :workbook_order => '55', :web_numerical_result_id => '',      :text=> "Spouse Blind Onset Date: Earning over the Substantial Gainful Activity amount, C{RateSgaBlindAmt}, will not cause your spouse to lose SSDI eligibility as long as your spouse's skills and abilities are different from what they were at the onset of blindness or before age 55, whichever is later. During your spouse's Extended Period of Eligibility (EPE) the SSDI cash payment will stop in SGA months, but your spouse's EPE will not cease.")
@tip_Current_SpouseSsdiActualAmt =WebTip.find_or_create_by_identifier(:identifier => 'tip_Current_SpouseSsdiActualAmt', :display_rules => 'true',         :group_id => @Spouse_SSDI.id,     :group_order => '5.00',     :workbook_order => '56', :web_numerical_result_id => '',      :text=> 'Spouse Actual SSDI Amount:  WW-Web asks you how much you are getting and compare it to the amount it calculates you should be getting.  If the amounts are not the same, then WW-Web suggests reasons they may be different.  It is important to find the correct reason before asking WW-Web to calculate the results of "What-If" Situations.')
                                                                                                                                                                                                                        
@tip_SpouseCareBDeduct           =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseCareBDeduct',           :display_rules => 'true',         :group_id => @Spouse_Medicare.id, :group_order => '1.00',     :workbook_order => '57', :web_numerical_result_id => '',  :text=> "Spouse Medicare Part B Premium:  Medicaid pays the Part B premium under all covered groups but QDWI.  If your spouse does not have Medicaid the Part B premium is deducted from the SSDI payment.  If your spouse's SSDI payment stops, your spouse will be billed for the premium amount and your spouse will have to pay out-of-pocket to continue Part B Medicare coverage.")
@tip_SpouseCareBPremiumAmt       =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseCareBPremiumAmt',       :display_rules => 'true',         :group_id => @Spouse_Medicare.id, :group_order => '2.00',     :workbook_order => '58', :web_numerical_result_id => '',  :text=> 'Spouse Medicare Part B Premium Amount:  If you do not know the premium amount, accept the default, C{RateCareBPremium}, which is the amount for most people.  We ask for this amount so we can include it as an expense on the Numeric Results page if your spouse has to pay it out-of-pocket.')
                                                                                                                                                                                                                        
@tip_SsiParDeemPsdcPadc1619b     =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiParDeemPsdcPadc1619b',     :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '1.00',     :workbook_order => '59', :web_numerical_result_id => '',  :text=> 'SSI Parental Deeming for Medicaid Eligibility:  Medicaid eligibility under 1619b or as an SSI Disabled Child or an Adult Disabled Child is calculated using SSI deeming rules.  Contact your SSA Claims Representative to find out how much if any parental income and resources is deemed.')
@tip_SsiParDeemNotPsdcPadc169b   =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiParDeemNotPsdcPadc169b',   :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '2.00',     :workbook_order => '60', :web_numerical_result_id => '',  :text=> 'SSI Parental Deeming:  The rules for SSI deeming are slightly different from those for Medicaid deeming.  Contact your SSA Claims Representative to find out how much if any parental income and resources is deemed.')
@tip_VA_CaidParDeem              =WebTip.find_or_create_by_identifier(:identifier => 'tip_VA_CaidParDeem',              :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '3.00',     :workbook_order => '61', :web_numerical_result_id => '',  :text=> 'Medicaid Parental Deeming:  The rules for parental deeming are slightly different for SSI and Medicaid.  Contact your local Dept. of Social Services to find out how much if any parental income and resources is deemed.')
@tip_SsiSpouseDeem               =WebTip.find_or_create_by_identifier(:identifier => 'tip_SsiSpouseDeem',               :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '4.00',     :workbook_order => '62', :web_numerical_result_id => '',  :text=> "Spousal SSI Deeming:  The rules for spousal deeming are complex and slightly different for SSI and Medicaid.  Contact your SSA claims representative to find out how much if any of your spouse's income and resources is deemed.")
@tip_VA_CaidSpouseDeem           =WebTip.find_or_create_by_identifier(:identifier => 'tip_VA_CaidSpouseDeem',           :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '5.00',     :workbook_order => '63', :web_numerical_result_id => '',  :text=> "Spousal Medicaid Deeming: The rules for spousal deeming are complex and slightly different for SSI and Medicaid.  Contact your local Dept. of Social Services to find out how much if any of your spouse's income and resources is deemed.")
@tip_SpouseEarnDeem              =WebTip.find_or_create_by_identifier(:identifier => 'tip_SpouseEarnDeem',              :display_rules => 'true',         :group_id => @Deeming.id,         :group_order => '6.00',     :workbook_order => '64', :web_numerical_result_id => '',  :text=> 'Spousal Earned Income Deeming: The deemed amount should be the amount after taking into account any spousal work incentives such as IRWE, BWE or SEIE.')

@tip_VA_Resources                =WebTip.find_or_create_by_identifier(:identifier => 'tip_VA_Resources',                :display_rules => 'true',         :group_id => @Resources.id,       :group_order => '1.00',     :workbook_order => '65', :web_numerical_result_id => '',  :text=> 'Resources:  SSI and Medicaid are available only to those with few resources such as cash, bank deposits, stocks, insurance, real estate, and personal property that could be converted to cash.  In Virginia the resource limits for Medicaid are somewhat more restrictive than that federal SSI limits.  See the help topics on resources to see the various rules about what is and is not counted for SSI and Medicaid.')
@tip_VA_ComSpousePra             =WebTip.find_or_create_by_identifier(:identifier => 'tip_VA_ComSpousePra',             :display_rules => 'true',         :group_id => @Resources.id,       :group_order => '2.00',     :workbook_order => '66', :web_numerical_result_id => '',  :text=> "Spouse's Protected Resource Amount (PRA): The PRA is established by the Department of Social Services (DSS) at the beginning of a period of institutionalization to establish eligibility.  It is at least C{rateLtcCaidSpousalResourceStandard} and at most C{rateLtcCaidSpousalMaxResourceStandard}.  Once eligibility has been established, only the individual's resources are counted. Contact your local DSS office to find out the PRA that has been established.")

#xxx

#If QuestionMode = One-at-a-time AND Current/What-If Button = Current
#@tip_SwitchToGroup_CS.update_attribute(:display_rules, "false
#") unless @tip_SwitchToGroup_CS.blank?
#@tip_SwitchToGroup_CS.save!
#

#If QuestionMode =Group AND Current/What-If Button = Current
#@tip_SwitchTo1atTime_CS.update_attribute(:display_rules, "false
#") unless @tip_SwitchTo1atTime_CS.blank?
#@tip_SwitchTo1atTime_CS.save!


#If birthDate = Initial Default Birthdate
@tip_Birthdate_CS.update_attribute(:display_rules, "
unless manager.get_answer_by_question_name('birthDate').blank? 
 birthDate = Date.strptime(manager.get_answer_by_question_name('birthDate'), '%m/%d/%Y') 
 if birthDate == '01/01/1940' then 
  true
 else
  false
 end
else 
  false
end") unless @tip_Birthdate_CS.blank?
@tip_Birthdate_CS.save!

@tip_SaveBirthdate_CS.update_attribute(:display_rules,"unless manager.get_answer_by_question_name('birthDate').blank? 
 birthDate = Date.strptime(manager.get_answer_by_question_name('birthDate'), '%m/%d/%Y') 
 if birthDate == '01/01/1940' then 
  true
 else
  false
 end
else 
  false
end") unless @tip_SaveBirthdate_CS.blank?
@tip_SaveBirthdate_CS.save!


#notes these 2 are awaiting a resolution by Paul in display rule for If (questionMode = One-at-a-time AND current/What-If Button = Current)
@tip_Current1AtTimeContinue_CS.update_attribute(:display_rules,"
true
") unless @tip_Current1AtTimeContinue_CS.blank?
@tip_Current1AtTimeContinue_CS.save!


@tip_GroupContinue.update_attribute(:display_rules,"
true
") unless @tip_GroupContinue.blank?
@tip_GroupContinue.save!

@tip_AgeLessThan15.update_attribute(:display_rules,"unless manager.get_answer_by_question_name('sitDate').blank? 
  rAge = WebCalc.find_by_name('rAge') 
  if Float(rAge.calculate manager) < 15 then
     true
   else
    false
   end
else 
  false
end
") unless @tip_AgeLessThan15.blank?
@tip_AgeLessThan15.save!

#@tip_AgeGreaterThan65.update_attribute(:display_rules,"rAge = WebCalc.find_by_name('rAge')
#rAge = rAge.calculate manager
#rAge > 65
#") unless @tip_AgeGreaterThan65.blank?
#@tip_AgeGreaterThan65.save!
#
@tip_SitdateFuture.update_attribute(:display_rules,"unless manager.get_answer_by_question_name('sitDate').blank? 
sitDate = Date.strptime(manager.get_answer_by_question_name('sitDate'), '%m/%d/%Y')
 if sitDate > Date.today && sitDate.month > Date.today.month then
   true 
  else 
    false 
  end 
else 
  false 
end 
") unless @tip_SitdateFuture.blank?
@tip_SitdateFuture.save!

@tip_StateNotVirginia.update_attribute(:display_rules,"unless manager.get_answer_by_question_name('State').blank? 
  state = manager.get_answer_by_question_name('state')
  if state != 'Virginia'  then
    true
  else
    false
  end
else 
  false
end
") unless @tip_StateNotVirginia.blank?
@tip_StateNotVirginia.save!

@tip_NotBlindOrDisabled.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('sitDate').blank? 
  blind = manager.get_answer_by_question_name('blind')
  disability = manager.get_answer_by_question_name('disability')
  if (blind == 'No' && disability == 'No') then
     true
   else
     false
  end
 else
   false
end
") unless @tip_NotBlindOrDisabled.blank?
@tip_NotBlindOrDisabled.save!


@tip_Blind.update_attribute(:display_rules, "blindAnswer = manager.get_answer_by_question_name('blind')
if blindAnswer == 'Yes' then
  true
else 
  false
end
") unless @tip_Blind.blank?
@tip_Blind.save!

@tip_DisabledNotBlind.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('disability').blank? 
  blind = manager.get_answer_by_question_name('blind')
  disability = manager.get_answer_by_question_name('disability')
  if blind == 'No' && disability == 'Yes' then
    true
  else
    false
  end
else 
  false
end
") unless @tip_DisabledNotBlind.blank?
@tip_DisabledNotBlind.save!

@tip_BPQY.update_attribute(:display_rules, "bPQY = manager.get_answer_by_question_name('bPQY')
if bPQY == 'No' then
  true
else 
  false
end
") unless @tip_BPQY.blank?
@tip_BPQY.save!

@tip_SitName.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('disability').blank? 
  blind = manager.get_answer_by_question_name('blind')
  disability = manager.get_answer_by_question_name('disability')
  if blind == 'Yes' || disability == 'Yes' then
    true
  else
    false
  end
else 
  false
end
") unless @tip_SitName.blank?
@tip_SitName.save!


@tip_NotMarried.update_attribute(:display_rules, "liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse') 
if liveWithSpouse == 'No' then true else false end")unless @tip_NotMarried.blank?
@tip_NotMarried.save!
  
@tip_LiveWithOthers.update_attribute(:display_rules, "  liveWithSpouse = manager.get_answer_by_question_name('liveWithSpouse')
  alone = manager.get_answer_by_question_name('alone')
  if (liveWithSpouse == 'Yes' || alone == 'No') then
    true
  else 
    false
  end") unless @tip_LiveWithOthers.blank?
@tip_LiveWithOthers.save!

#xxxx
#  IF current/What-If Button = Current AND state = VA AND ssiGet Appears
@tip_VA_CurrentSsiGetIf1619b.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('disability').blank? 
  blind = manager.get_answer_by_question_name('blind')
  disability = manager.get_answer_by_question_name('disability')
  if blind == 'Yes' || disability == 'Yes' then
    true
  else
    false
  end
else 
  false
end
") unless @tip_VA_CurrentSsiGetIf1619b.blank?
@tip_VA_CurrentSsiGetIf1619b.save!

#IF ssiGet = YES AND alone = YES 
@tip_SsiAloneBenefitAmt.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiGet').blank? 
  ssiGet = manager.get_answer_by_question_name('ssiGet')
  alone = manager.get_answer_by_question_name('alone')
  if ssiGet == 'Yes' && alone == 'Yes' then
    true
  else
    false
  end
else 
  false
end
") unless @tip_SsiAloneBenefitAmt.blank?
@tip_SsiAloneBenefitAmt.save!

#Note these 2 need help with Current/What if 
#IF ssiGet = YES AND blind = NO AND ssiGetFinalDetermination <> YES
@tip_CurrentNoFinalDetermination.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('sitDate').blank? 
  ssiGet = manager.get_answer_by_question_name('ssiGet')
  blind = manager.get_answer_by_question_name('blind')
  ssiGetFinalDetermination = manager.get_answer_by_question_name('ssiGetFinalDetermination')
  if (ssiGet == 'Yes' && blind == 'No' && ssiGetFinalDetermination != 'Yes') then
     true
  else 
     false
  end
else 
  false
end
") unless @tip_CurrentNoFinalDetermination.blank?
@tip_CurrentNoFinalDetermination.save!

#IF  current/What-If Button = What-If AND ssiGetFinalDetermination = Appear AND blind = NO 
@tip_WhatIfNoFinalDetermination.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiGetFinalDetermination').blank? 
  ssiGet = manager.get_answer_by_question_name('ssiGet')
  if (ssiGet == 'Yes') then
     true
  else 
     false
  end
else 
  false
end
") unless @tip_WhatIfNoFinalDetermination.blank?
@tip_WhatIfNoFinalDetermination.save!

#IF ssiGetFinalDetermination = YES AND blind =NO AND ssiGet12MonthsSinceOnset <> YES
@tip_Ssi_OnsetLessThan12Mo.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiGet').blank? 
  ssiGet = manager.get_answer_by_question_name('ssiGet')
  blind = manager.get_answer_by_question_name('blind')
  ssiGetFinalDetermination = manager.get_answer_by_question_name('ssiGetFinalDetermination')
  ssiGet12MonthsSinceOnset = manager.get_answer_by_question_name('ssiGet12MonthsSinceOnset')

  if (ssiGetFinalDetermination == 'Yes' && blind == 'No' && ssiGet12MonthsSinceOnset != 'Yes') then
     true
  else 
     false
  end
else 
  false
end
") unless @tip_Ssi_OnsetLessThan12Mo.blank?
@tip_Ssi_OnsetLessThan12Mo.save!

#Need curent/What-if fix
##IF  current/What-If Button = Current AND ssiUserActualAmt = Appear
@tip_Current_SsiActualAmt.update_attribute(:display_rules, "ssiGet = manager.get_answer_by_question_name('ssiGet')
if (ssiGet == 'Yes') then
  true
else 
  false
end") unless @tip_Current_SsiActualAmt.blank?
@tip_Current_SsiActualAmt.save!

#IF caidGet = Appear
@tip_CaidGet.update_attribute(:display_rules, "
blind = manager.get_answer_by_question_name('blind')
disability = manager.get_answer_by_question_name('disability')
if blind == 'Yes' || disability == 'Yes' then
  true
else
  false
end
") unless @tip_CaidGet.blank?
@tip_CaidGet.save!

#IF ssiGet = YES AND vA_CaidGetCoveredGroup = SSI Recipient
@tip_SsiRecipTo1619b.update_attribute(:display_rules, "
ssiGet = manager.get_answer_by_question_name('ssiGet')
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
if ssiGet == 'Yes' && vA_CaidGetCoveredGroup == 'SSI Recipient' then
  true
else
  false
end
") unless @tip_SsiRecipTo1619b.blank?
@tip_SsiRecipTo1619b.save!

#IF (vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = Protected SSI Disabled Child) AND rAge >= 18
@tip_VACaidPsdc.update_attribute(:display_rules, "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
rAge = WebCalc.find_by_name('rAge') 
if  (vA_CaidGetCoveredGroup == 'Protected SSI Disabled Child' ||  vA_CaidApplyCoveredGroup == 'Protected SSI Disabled Child') && Float(rAge.calculate manager) >= 18 then
  true
else
  false
end
") unless @tip_VACaidPsdc.blank?
@tip_VACaidPsdc.save!

#IF vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = Protected Adult Disabled Child
@tip_VACaidPadc.update_attribute(:display_rules, "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if  (vA_CaidGetCoveredGroup == 'Protected SSI Disabled Child' || vA_CaidApplyCoveredGroup == 'Protected SSI Disabled Child') then
  true
else
  false
end
") unless @tip_VACaidPadc.blank?
@tip_VACaidPadc.save!

#   IF vA_CaidGetCoveredGroup OR vA_CaidApplyCoveredGroup = Medically Needy (Spendown)
@tip_VACaidMedNeedy.update_attribute(:display_rules, "
vA_CaidGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidGetCoveredGroup')
vA_CaidApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidApplyCoveredGroup')
if  (vA_CaidGetCoveredGroup == 'Medically Needy (Spendown)' || vA_CaidApplyCoveredGroup == 'Medically Needy (Spendown)') then
  true
else
  false
end
") unless @tip_VACaidMedNeedy.blank?
@tip_VACaidMedNeedy.save!

#IF  current/What-If Button = Current AND caidApply = Appear IF caidGet = N is caid Apply's display rule 
#Need Current help
@tip_CurrentVACaidApply.update_attribute(:display_rules, "
caidGet = manager.get_answer_by_question_name('caidGet')
if  (caidGet == 'No') then
  true
else
  false
end
") unless @tip_CurrentVACaidApply.blank?
@tip_CurrentVACaidApply.save!

#Need Current help   MADE this always false for now
@tip_WhatIfCaidApply.update_attribute(:display_rules, "
caidGet = manager.get_answer_by_question_name('caidGet')
if  (caidGet == 'No') then
  false
else
  false
end
") unless @tip_WhatIfCaidApply.blank?
@tip_WhatIfCaidApply.save!

#IF spouseIsCaidCommunitySpouse = Appear
#NOte Bob is trying a faster approach here, not suer if this still works based on Pauls changes
@tip_SpouseIsCommunitySpouse.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseIsCaidCommunitySpouse').blank? 
  true
else 
  false
end
") unless @tip_SpouseIsCommunitySpouse.blank?
@tip_SpouseIsCommunitySpouse.save!

#IF ssdiGet = Appear
@tip_SsdiGet.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssdiGet').blank? 
  true
else 
  false
end
") unless @tip_SsdiGet.blank?
@tip_SsdiGet.save!

#This has old display rule i may want to use
#@tip_Ssdi_OnsetLessThan12Mo.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('sitDate').blank? 
#  ssdiGet = manager.get_answer_by_question_name('ssdiGet')
#  blind = manager.get_answer_by_question_name('blind')
#  ssdiGet12MonthsSinceOnset = manager.get_answer_by_question_name('ssdiGet12MonthsSinceOnset')
#
#  if (ssdiGet == 'Yes' && blind == 'No' && ssiGet12MonthsSinceOnset != 'Yes') then
#     true
#  else 
#     false
#  end
#else 
#  false
#end
#") unless @tip_Ssdi_OnsetLessThan12Mo.blank?
#@tip_Ssdi_OnsetLessThan12Mo.save!

#IF ssdiGet12MonthsSinceOnset = Appear 
@tip_Ssdi_OnsetLessThan12Mo.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssdiGet12MonthsSinceOnset').blank? 
 true
else 
  false
end
") unless @tip_Ssdi_OnsetLessThan12Mo.blank?
@tip_Ssdi_OnsetLessThan12Mo.save!

@tip_Ssdi_OwnEarnRecord.update_attribute(:display_rules, "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
if (ssdiGet == 'Yes' && ssdiEarnRec  != 'Other') then
  true
else 
  false
end
") unless @tip_Ssdi_OwnEarnRecord.blank?
@tip_Ssdi_OwnEarnRecord.save!

@tip_Ssdi_OtherEarnRecord.update_attribute(:display_rules, "
ssdiGet = manager.get_answer_by_question_name('ssdiGet')
ssdiEarnRec = manager.get_answer_by_question_name('ssdiEarnRec')
if (ssdiGet == 'Yes' && ssdiEarnRec  != 'Self') then
  true
else 
  false
end
") unless @tip_Ssdi_OtherEarnRecord.blank?
@tip_Ssdi_OtherEarnRecord.save!

#IF blindOnsetDate = Appear
@tip_SsdiBlindOnsetDate.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('blindOnsetDate').blank? 
 true
else 
  false
end
") unless @tip_SsdiBlindOnsetDate.blank?
@tip_SsdiBlindOnsetDate.save!

#IF ssdiActualAmt = Appear
@tip_Current_SsdiActualAmt.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssdiActualAmt').blank? 
 true
else 
  false
end
") unless @tip_Current_SsdiActualAmt.blank?
@tip_Current_SsdiActualAmt.save!

#IF CareBDeduct = Appear
@tip_CareBDeduct.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('CareBDeduct').blank? 
 true
else 
  false
end
") unless @tip_CareBDeduct.blank?
@tip_CareBDeduct.save!

##this is the one that is blowing up
##If CareBPremiumAmt = Appear
#@tip_careBPremiumAmt.update_attribute(:display_rules, "
#careBDeduct = manager.get_answer_by_question_name('careBDeduct')
#careBPaySelf = manager.get_answer_by_question_name('careBPaySelf')
#caidGet = manager.get_answer_by_question_name('caidGet')
#if (careBDeduct == 'No' && careBPaySelf == 'No' && caidGet == 'Yes' ) then
#  true
#else 
#  false
#end
#") unless @tip_careBPremiumAmt.blank?
#@tip_careBPremiumAmt.save!

#If CareBPremiumAmt = Appear
@tip_careBPremiumAmt.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('CareBPremiumAmt').blank? 
 true
else 
  false
end
") unless @tip_careBPremiumAmt.blank?
@tip_careBPremiumAmt.save!

#IF spouseSsiGet = Appear AND ssiGet =YES
@tip_spouseSsiGet .update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseSsiGet').blank?
ssiGet = manager.get_answer_by_question_name('ssiGet')
  if ssiGet  == 'Yes' then
    true
  else 
    false
  end
else 
  false
end
") unless @tip_spouseSsiGet .blank?
@tip_spouseSsiGet .save!

#IF spouseSsiGet = YES AND ssiGet = NO
@tip_SpouseSsiGetButUserNotGet .update_attribute(:display_rules, "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiGet = manager.get_answer_by_question_name('ssiGet')
if spouseSsiGet  == 'Yes' && ssiGet  == 'No' then
  true
else 
  false
end
") unless @tip_SpouseSsiGetButUserNotGet .blank?
@tip_SpouseSsiGetButUserNotGet .save!

#IF spouseSsiGet = YES AND ssiGet = YES
@tip_SsiCoupleBenefitAmt .update_attribute(:display_rules, "
spouseSsiGet = manager.get_answer_by_question_name('spouseSsiGet')
ssiGet = manager.get_answer_by_question_name('ssiGet')
if spouseSsiGet  == 'Yes' && ssiGet  == 'Yes' then
  true
else 
  false
end
") unless @tip_SsiCoupleBenefitAmt .blank?
@tip_SsiCoupleBenefitAmt .save!

#IF caidSpouseGet = YES AND caidGet <> YES AND caidApply <> YES
@tip_SpouseCaidGetButUserNotGet .update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
if caidSpouseGet  == 'Yes' && caidGet  != 'Yes' && caidApply != 'Yes' then
  true
else 
  false
end
") unless @tip_SpouseCaidGetButUserNotGet .blank?
@tip_SpouseCaidGetButUserNotGet .save!

#IF caidSpouseGet = Appear AND (caidGet OR caidApply = YES)
@tip_SpouseCaidGet .update_attribute(:display_rules, "unless manager.get_answer_by_question_name('caidSpouseGet').blank?
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
  if (caidGet  == 'Yes' || caidApply == 'Yes') then
    true
  else 
    false
  end
else 
  false
end
") unless @tip_SpouseCaidGet .blank?
@tip_SpouseCaidGet .save!

#IF vA_CaidSpouseGetCoveredGroup  OR vA_CaidSpouseApplyCoveredGroup = SSI Recipient
@tip_SpouseSsiRecipTo1619b .update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseGetCoveredGroup')
vA_CaidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup')
if (caidSpouseGet  == 'Yes' && vA_CaidSpouseGetCoveredGroup == 'SSI Recipient') ||  (caidSpouseApply  == 'Yes' && vA_CaidSpouseApplyCoveredGroup == 'SSI Recipient') then
  true
else 
  false
end
") unless @tip_SpouseSsiRecipTo1619b .blank?
@tip_SpouseSsiRecipTo1619b .save!

#IF (vA_CaidSpouseGetCoveredGroup  OR vA_CaidSpouseApplyCoveredGroup = Protected SSI Disabled Child) AND rSpouseAge < 22
@tip_VACaidSpousePsdc .update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseGetCoveredGroup')
vA_CaidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup')
rSpouseAge = WebCalc.find_by_name('rSpouseAge') 
if (caidSpouseGet  == 'Yes' && vA_CaidSpouseGetCoveredGroup == 'Protected SSI Disabled Child') ||  
   (caidSpouseApply  == 'Yes' && vA_CaidSpouseApplyCoveredGroup == 'Protected SSI Disabled Child')  &&
   Float(rSpouseAge.calculate manager) < 22  then
  true
else 
  false
end
") unless @tip_VACaidSpousePsdc .blank?
@tip_VACaidSpousePsdc .save!

#IF (vA_CaidSpouseGetCoveredGroup  OR vA_CaidSpouseApplyCoveredGroup = Protected Adult Disabled Child) AND rSpouseAge < 22
@tip_VACaidSpousePadc .update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseGetCoveredGroup')
vA_CaidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup')
rSpouseAge = WebCalc.find_by_name('rSpouseAge') 
if (caidSpouseGet  == 'Yes' && vA_CaidSpouseGetCoveredGroup == 'Protected Adult Disabled Child') ||  
   (caidSpouseApply  == 'Yes' && vA_CaidSpouseApplyCoveredGroup == 'Protected Adult Disabled Child')  &&
   Float(rSpouseAge.calculate manager) < 22  then
  true
else 
  false
end
") unless @tip_VACaidSpousePadc .blank?
@tip_VACaidSpousePadc .save!

#IF (vA_CaidSpouseGetCoveredGroup  OR vA_CaidSpouseApplyCoveredGroup =Medically Needy (Spendown)
@tip_VACaidSpouseMedNeedy .update_attribute(:display_rules, "
caidSpouseGet = manager.get_answer_by_question_name('caidSpouseGet')
caidSpouseApply = manager.get_answer_by_question_name('caidSpouseApply')
vA_CaidSpouseGetCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseGetCoveredGroup')
vA_CaidSpouseApplyCoveredGroup = manager.get_answer_by_question_name('vA_CaidSpouseApplyCoveredGroup')
if (caidSpouseGet  == 'Yes' && vA_CaidSpouseGetCoveredGroup == 'Medically Needy (Spendown)') ||  
   (caidSpouseApply  == 'Yes' && vA_CaidSpouseApplyCoveredGroup == 'Medically Needy (Spendown)')  then
  true
else 
  false
end
") unless @tip_VACaidSpouseMedNeedy .blank?
@tip_VACaidSpouseMedNeedy .save!

#NOte need current help here
#IF  current/What-If Button = Current AND caidSpouseApply = Appear
@tip_CurrentVACaidSpouseApply.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('caidSpouseApply').blank? 
 true
else 
  false
end
") unless @tip_CurrentVACaidSpouseApply.blank?
@tip_CurrentVACaidSpouseApply.save!

##NOte need current help here, hotwired as false
#tip_WhatIfCaidSpouseApply
@tip_WhatIfCaidSpouseApply.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('caidSpouseApply').blank? 
 false
else 
  false
end
") unless @tip_WhatIfCaidSpouseApply.blank?
@tip_WhatIfCaidSpouseApply.save!

#IF userIsCaidCommunitySpouse = Appear
@tip_UseIsCommunitySpouse.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('userIsCaidCommunitySpouse').blank? 
 false
else 
  false
end
") unless @tip_UseIsCommunitySpouse.blank?
@tip_UseIsCommunitySpouse.save!

#IF spouseSsdiGet = Appear
@tip_SouseSsdiGet.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseSsdiGet').blank? 
 false
else 
  false
end
") unless @tip_SouseSsdiGet.blank?
@tip_SouseSsdiGet.save!

#IF spouseSsdiGet = YES AND spouseSsdiEarnRec <> Other
@tip_SpouseSsdi_OwnEarnRecord .update_attribute(:display_rules, "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
if spouseSsdiGet  == 'Yes' && spouseSsdiEarnRec  != 'Other'  then
  true
else 
  false
end
") unless @tip_SpouseSsdi_OwnEarnRecord .blank?
@tip_SpouseSsdi_OwnEarnRecord .save!

#IF spouseSsdiGet = YES AND spouseSsdiEarnRec <> Self
@tip_SpouseSsdi_OtherEarnRecord .update_attribute(:display_rules, "
spouseSsdiGet = manager.get_answer_by_question_name('spouseSsdiGet')
spouseSsdiEarnRec = manager.get_answer_by_question_name('spouseSsdiEarnRec')
if spouseSsdiGet  == 'Yes' && spouseSsdiEarnRec  != 'Self'  then
  true
else 
  false
end
") unless @tip_SpouseSsdi_OtherEarnRecord .blank?
@tip_SpouseSsdi_OtherEarnRecord .save!

#IF spouseBlindOnsetDate = Appear
@tip_SpouseSsdiBlindOnsetDate.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseBlindOnsetDate').blank? 
  true
else 
  false
end
") unless @tip_SpouseSsdiBlindOnsetDate.blank?
@tip_SpouseSsdiBlindOnsetDate.save!

#IF spouseSsdiActualAmt = Appear
@tip_Current_SpouseSsdiActualAmt.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseSsdiActualAmt').blank? 
  true
else 
  false
end
") unless @tip_Current_SpouseSsdiActualAmt.blank?
@tip_Current_SpouseSsdiActualAmt.save!

#IF spouseCareBDeduct = Appear
@tip_SpouseCareBDeduct.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseCareBDeduct').blank? 
  true
else 
  false
end
") unless @tip_SpouseCareBDeduct.blank?
@tip_SpouseCareBDeduct.save!

#IF spouseCareBPremiumAmt = Appear
@tip_SpouseCareBPremiumAmt.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('spouseCareBPremiumAmt').blank? 
  true
else 
  false
end
") unless @tip_SpouseCareBPremiumAmt.blank?
@tip_SpouseCareBPremiumAmt.save!

#IF ssiParDeemAmt = Appear AND R_VA_CaidCovGroupSsiPsdcPadc1619b = TRUE
#IF ssiParDeemAmt = Appear AND R_VA_CaidCovGroupSsiPsdcPadc1619b = TRUE
@tip_SsiParDeemPsdcPadc1619b .update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiParDeemAmt').blank?
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b') 
if (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == true  then
    true
  else 
    false
  end
else 
  false
end
") unless @tip_SsiParDeemPsdcPadc1619b .blank?
@tip_SsiParDeemPsdcPadc1619b .save!

#IF ssiParDeemAmt = Appear AND R_VA_CaidCovGroupSsiPsdcPadc1619b = FALSE
@tip_SsiParDeemNotPsdcPadc169b .update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiParDeemAmt').blank?
r_VA_CaidCovGroupSsiPsdcPadc1619b = WebCalc.find_by_name('r_VA_CaidCovGroupSsiPsdcPadc1619b') 
if (r_VA_CaidCovGroupSsiPsdcPadc1619b.calculate manager) == false  then
    true
  else 
    false
  end
else 
  false
end
") unless @tip_SsiParDeemNotPsdcPadc169b .blank?
@tip_SsiParDeemNotPsdcPadc169b .save!

#IF state = VA AND (vA_CaidParDeemAmt OR vA_CaidCoupleParDeemAmt = Appear
@tip_VA_CaidParDeem .update_attribute(:display_rules, "
state = manager.get_answer_by_question_name('state')
if state == 'Virginia' && (!(manager.get_answer_by_question_name('vA_CaidParDeemAmt').blank?) || !(manager.get_answer_by_question_name('vA_CaidCoupleParDeemAmt').blank?)) then
  true
else
  false
end
") unless @tip_VA_CaidParDeem .blank?
@tip_VA_CaidParDeem .save!

#IF ssiSpouseDeem = Appear
@tip_SsiSpouseDeem.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('ssiSpouseDeem').blank? 
  true
else 
  false
end
") unless @tip_SsiSpouseDeem.blank?
@tip_SsiSpouseDeem.save!

#IF vA_CaidSpouseDeem = Appear
@tip_VA_CaidSpouseDeem.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('vA_CaidSpouseDeem').blank? 
  true
else 
  false
end
") unless @tip_VA_CaidSpouseDeem.blank?
@tip_VA_CaidSpouseDeem.save!

#IF ssiSpouseDeemEarnAmt OR vA_CaidSpouseDeemEarnAmt = Appear
@tip_SpouseEarnDeem .update_attribute(:display_rules, "
(!(manager.get_answer_by_question_name('ssiSpouseDeemEarnAmt').blank?) || !(manager.get_answer_by_question_name('vA_CaidSpouseDeemEarnAmt').blank?))
") unless @tip_SpouseEarnDeem .blank?
@tip_SpouseEarnDeem .save!

#IF state = VA AND (ssiGet OR caidGet OR caidApply) = YES
@tip_VA_Resources .update_attribute(:display_rules, "
state = manager.get_answer_by_question_name('state')
ssiGet = manager.get_answer_by_question_name('ssiGet')
caidGet = manager.get_answer_by_question_name('caidGet')
caidApply = manager.get_answer_by_question_name('caidApply')
state == 'Virginia' && (ssiGet  == 'Yes' || caidGet  == 'Yes' || caidApply  == 'Yes')
") unless @tip_VA_Resources .blank?
@tip_VA_Resources .save!

#IF caidApplyLtcCommunitySpousePraExceed OR caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed = Appear
@tip_VA_ComSpousePra .update_attribute(:display_rules, "
(!(manager.get_answer_by_question_name('caidApplyLtcCommunitySpousePraExceed').blank?) || !(manager.get_answer_by_question_name('caidSpouseApplyLongTermCareUserCommunitySpouseResourceLimitExceed').blank?))
") unless @tip_VA_ComSpousePra .blank?
@tip_VA_ComSpousePra .save!

#ddddd
##IF ssiGet = YES AND rAge < 22
#@tip_SsiAgeLessThan22.update_attribute(:display_rules, "unless manager.get_answer_by_question_name('sitDate').blank? 
#  ssiGet = manager.get_answer_by_question_name('ssiGet')
#  rAge = WebCalc.find_by_name('rAge') 
#  rAge = Float(rAge.calculate manager)
#  if (rAge <= 22 && ssiGet == 'Yes') then
#    true
#  else
#   false
# end
#else 
#  false
#end
#") unless @tip_SsiAgeLessThan22.blank?
#@tip_SsiAgeLessThan22.save!
#
#Set up chart results
#WebTip.delete_all
Chart.delete_all
@Chart_Total_income               = Chart.find_or_create_by_title(:title => 'income column',               :chart_type => 'column',    :yaxis_label => 'Income',     :stack_type => '')

ChartResult.delete_all
@ChartResult_Total_income         = ChartResult.find_or_create_by_name(:name => 'Chart_Total_income',               :chart_id => @Chart_Total_income.id,         :web_calc_id => @r_income_total.id)
#